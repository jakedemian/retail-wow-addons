
PlaterDB = {
	["captured_spells"] = {
		[324736] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mistveil Defender",
			["npcID"] = 163058,
		},
		[366297] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Urh Dismantler",
			["npcID"] = 184911,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[323149] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "BUFF",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[324737] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mistveil Defender",
			["npcID"] = 171772,
		},
		[329310] = {
			["source"] = "Disobedient Citizen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 158813,
		},
		[368078] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wo Relic",
			["npcID"] = 185683,
		},
		[24394] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Molly",
			["npcID"] = 165189,
		},
		[322486] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tirnenn Villager",
			["npcID"] = 164929,
		},
		[331440] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "BUFF",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[322709] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[325027] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Drust Boughbreaker",
			["npcID"] = 164926,
		},
		[368239] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "DEBUFF",
			["source"] = "Urh Dismantler",
			["npcID"] = 184911,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[323059] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Droman Oulfarran",
			["npcID"] = 164804,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[345095] = {
			["source"] = "Venthyr Apprentice",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170044,
		},
		[323250] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "DEBUFF",
			["source"] = "Droman Oulfarran",
			["npcID"] = 164804,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[324722] = {
			["type"] = "DEBUFF",
			["source"] = "Unyielding Venthyr",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 166553,
		},
		[320592] = {
			["type"] = "DEBUFF",
			["source"] = "Ravenous Swarm",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 160613,
		},
		[259277] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Molly",
			["npcID"] = 165189,
		},
		[260249] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Molly",
			["npcID"] = 165189,
		},
		[330604] = {
			["type"] = "DEBUFF",
			["source"] = "Engorged Fearspinner",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168724,
		},
		[118905] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Capacitor Totem",
			["npcID"] = 61245,
		},
		[333600] = {
			["type"] = "DEBUFF",
			["source"] = "Ravenous Thirstlurker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 163960,
		},
		[324147] = {
			["source"] = "Spell Bunny",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 166314,
		},
		[324923] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drust Boughbreaker",
			["npcID"] = 164926,
		},
		[326745] = {
			["source"] = "Leftover Parts",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 170016,
		},
		[322967] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Drust Spiteclaw",
			["npcID"] = 165111,
		},
		[317877] = {
			["source"] = "Stonevigil Collector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 158796,
		},
		[368243] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Urh Relic",
			["npcID"] = 185685,
		},
		[340208] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Matriarch",
			["npcID"] = 173655,
		},
		[322968] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drust Spiteclaw",
			["npcID"] = 165111,
		},
		[332525] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kyrian Goliath",
			["npcID"] = 171396,
		},
		[323058] = {
			["source"] = "Salvage Dredger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165609,
		},
		[325223] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Stinger",
			["npcID"] = 166304,
		},
		[329083] = {
			["source"] = "Mucksquint",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 166042,
		},
		[332526] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kyrian Goliath",
			["npcID"] = 171396,
		},
		[320463] = {
			["type"] = "DEBUFF",
			["source"] = "Leftover Parts",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 170016,
		},
		[331574] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistcaller",
			["npcID"] = 170217,
		},
		[326018] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Spinemaw Larva",
			["npcID"] = 167117,
		},
		[341163] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kyrian Goliath",
			["npcID"] = 171396,
		},
		[321891] = {
			["encounterName"] = "Mistcaller",
			["source"] = "Illusionary Vulpin",
			["npcID"] = 165251,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2392,
		},
		[321669] = {
			["encounterName"] = "Mistcaller",
			["source"] = "Illusionary Clone",
			["npcID"] = 165108,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2392,
		},
		[324819] = {
			["type"] = "BUFF",
			["source"] = "Envious Soul",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 166621,
		},
		[313351] = {
			["type"] = "BUFF",
			["source"] = "Pridefall Dredger",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 156413,
		},
		[322654] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[322557] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Drust Soulcleaver",
			["npcID"] = 172991,
		},
		[61684] = {
			["type"] = "BUFF",
			["source"] = "Unknown",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[324909] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Drust Boughbreaker",
			["npcID"] = 164926,
		},
		[321893] = {
			["encounterName"] = "Mistcaller",
			["type"] = "DEBUFF",
			["source"] = "Illusionary Vulpin",
			["npcID"] = 165251,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2392,
		},
		[112042] = {
			["type"] = "BUFF",
			["source"] = "Unknown",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1860,
		},
		[326021] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spinemaw Gorger",
			["npcID"] = 172312,
		},
		[325418] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spinemaw Acidgullet",
			["npcID"] = 167113,
		},
		[321005] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
		},
		[325101] = {
			["source"] = "Steward",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 166663,
		},
		[17253] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Molly",
			["npcID"] = 165189,
		},
		[323057] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[321006] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
		},
		[343517] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wild Storm",
			["npcID"] = 175604,
		},
		[42648] = {
			["type"] = "BUFF",
			["source"] = "Rotting Deathwalker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 168855,
		},
		[322527] = {
			["encounterName"] = "Tred'ova",
			["type"] = "DEBUFF",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2393,
		},
		[356694] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ta'hsup",
			["npcID"] = 180214,
		},
		[322563] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[315356] = {
			["source"] = "Caravaneer's Pack",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 162001,
		},
		[108446] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[341709] = {
			["encounterName"] = "Mistcaller",
			["source"] = "Mistcaller",
			["npcID"] = 164501,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2392,
		},
		[352536] = {
			["type"] = "BUFF",
			["source"] = "Kevin's Oozeling",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 178601,
		},
		[321834] = {
			["encounterName"] = "Mistcaller",
			["source"] = "Mistcaller",
			["npcID"] = 164501,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2392,
		},
		[240443] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Drust Spiteclaw",
			["npcID"] = 165111,
		},
		[328756] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[263840] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Molly",
			["npcID"] = 165189,
		},
		[322614] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[323137] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Droman Oulfarran",
			["npcID"] = 164804,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[326090] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spinemaw Reaver",
			["npcID"] = 167116,
		},
		[326092] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Spinemaw Reaver",
			["npcID"] = 167116,
		},
		[326281] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[323138] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[323043] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drust Spiteclaw",
			["npcID"] = 165111,
		},
		[323020] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drust Spiteclaw",
			["npcID"] = 165111,
		},
		[331743] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mistveil Guardian",
			["npcID"] = 166276,
		},
		[325163] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Defender",
			["npcID"] = 171772,
		},
		[340189] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Matriarch",
			["npcID"] = 173655,
		},
		[368079] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wo Relic",
			["npcID"] = 185683,
		},
		[366288] = {
			["encounterName"] = "Ingra Maloch",
			["source"] = "Urh Dismantler",
			["npcID"] = 184911,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2397,
		},
		[336813] = {
			["encounterName"] = "Mistcaller",
			["source"] = "Mistcaller",
			["npcID"] = 164501,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2392,
		},
		[323146] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "DEBUFF",
			["source"] = "Ingra Maloch",
			["npcID"] = 164567,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[322569] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Drust Soulcleaver",
			["npcID"] = 172991,
		},
		[322550] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[331718] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mistveil Defender",
			["npcID"] = 171772,
		},
		[340544] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Spinemaw Staghorn",
			["npcID"] = 167111,
		},
		[328285] = {
			["source"] = "Disobedient Citizen",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 158813,
		},
		[325224] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Stinger",
			["npcID"] = 166304,
		},
		[340160] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Matriarch",
			["npcID"] = 173655,
		},
		[321952] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Tirnenn Villager",
			["npcID"] = 164929,
		},
		[321725] = {
			["encounterName"] = "Mistcaller",
			["type"] = "BUFF",
			["source"] = "Illusionary Clone",
			["npcID"] = 165108,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2392,
		},
		[321968] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tirnenn Villager",
			["npcID"] = 164929,
		},
		[336759] = {
			["encounterName"] = "Mistcaller",
			["source"] = "Mistcaller",
			["npcID"] = 164501,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2392,
		},
		[321772] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "BUFF",
			["source"] = "Droman Oulfarran",
			["npcID"] = 164804,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[322939] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Drust Harvester",
			["npcID"] = 164921,
		},
		[322938] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Drust Harvester",
			["npcID"] = 164921,
		},
		[326319] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drust Harvester",
			["npcID"] = 164921,
		},
		[320763] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mana Tide Totem",
			["npcID"] = 10467,
		},
		[331721] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mistveil Defender",
			["npcID"] = 171772,
		},
		[325174] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spirit Link Totem",
			["npcID"] = 53006,
		},
		[368103] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Vy Relic",
			["npcID"] = 185680,
		},
		[323177] = {
			["encounterName"] = "Ingra Maloch",
			["type"] = "BUFF",
			["source"] = "Droman Oulfarran",
			["npcID"] = 164804,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2397,
		},
		[324987] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mistveil Stalker",
			["npcID"] = 166301,
		},
		[356134] = {
			["type"] = "BUFF",
			["source"] = "Spectral Feline",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 180016,
		},
		[368104] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Vy Relic",
			["npcID"] = 185680,
		},
		[336752] = {
			["encounterName"] = "Mistcaller",
			["type"] = "DEBUFF",
			["source"] = "Mistcaller",
			["npcID"] = 164501,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2392,
		},
		[336499] = {
			["encounterName"] = "Mistcaller",
			["type"] = "BUFF",
			["source"] = "Mistcaller",
			["npcID"] = 164501,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2392,
		},
		[322450] = {
			["encounterName"] = "Tred'ova",
			["source"] = "Tred'ova",
			["npcID"] = 164517,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2393,
		},
		[3600] = {
			["encounterName"] = "Mistcaller",
			["type"] = "DEBUFF",
			["source"] = "Earthbind Totem",
			["npcID"] = 2630,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 2392,
		},
		[300155] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tirnenn Villager",
			["npcID"] = 164929,
		},
		[339848] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[325021] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mistveil Stalker",
			["npcID"] = 166301,
		},
		[322767] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drust Harvester",
			["npcID"] = 164921,
		},
		[329911] = {
			["source"] = "Shadowlands Wormhole",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 169501,
		},
		[261616] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Katy Stampwhistle",
			["npcID"] = 132969,
		},
	},
	["profiles"] = {
		["MyNewProfile"] = {
			["non_targeted_alpha_enabled"] = true,
			["use_health_animation"] = true,
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 156,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Name"] = "Unit - Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1537884697,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 399,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Add the buff name in the trigger box.",
					["Name"] = "Aura - Buff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["Time"] = 1539013601,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 391,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Bombad�o-Azralon",
					["ScriptType"] = 2,
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Very Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["PlaterCore"] = 1,
					["Time"] = 1561923707,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Author"] = "Bombad�o-Azralon",
					["ScriptType"] = 2,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Name"] = "Explosion Affix M+ [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Time"] = 1540663131,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 232,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Add the debuff name in the trigger box.",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1538429739,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 574,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 2,
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Big Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["PlaterCore"] = 1,
					["Time"] = 1561924439,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 376,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 2,
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Small Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["PlaterCore"] = 1,
					["Time"] = 1539201768,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 106,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 1,
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["PlaterCore"] = 1,
					["Time"] = 1538256464,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["Name"] = "Color Change [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1543253273,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 1,
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1547991413,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 1,
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["Name"] = "Aura - Border Color [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1543680853,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["Icon"] = 136048,
					["Author"] = "Celian-Sylvanas",
					["ScriptType"] = 3,
					["Desc"] = "Show the energy amount above the nameplate",
					["Name"] = "UnitPower [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1539015649,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 171,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 2,
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["Time"] = 1539201849,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 190,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Author"] = "Celian-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Name"] = "Fixate [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["Time"] = 1539187387,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Icon"] = 841383,
					["Author"] = "Tecno-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Name"] = "Fixate On You [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Time"] = 1543250950,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
				}, -- [15]
			},
			["target_indicator"] = "Ornament",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["LastHookEdited"] = "",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Time"] = 1554138845,
					["PlaterCore"] = 1,
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 136207,
					["LastHookEdited"] = "",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133689,
					["LastHookEdited"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 1990989,
					["LastHookEdited"] = "",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["LastHookEdited"] = "",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["LastHookEdited"] = "",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 135358,
					["LastHookEdited"] = "",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 88,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1548077443,
					["PlaterCore"] = 1,
					["Name"] = "Reorder Nameplate [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 574574,
					["LastHookEdited"] = "",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["LastHookEdited"] = "",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["Name"] = "M+ Bwonsamdi Reaping",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 2446016,
					["LastHookEdited"] = "",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["Icon"] = 135426,
					["LastHookEdited"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 1966587,
					["LastHookEdited"] = "",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["Name"] = "Current Target Color [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 878211,
					["LastHookEdited"] = "",
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 272,
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n\n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1553450957,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["LastHookEdited"] = "",
				}, -- [14]
			},
			["first_run3"] = true,
			["transparency_behavior"] = 3,
			["target_shady_alpha"] = 0.5976743698120117,
			["spell_animations"] = false,
			["ui_parent_scale_tune"] = 1.562500034924597,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["nameplateShowSelf"] = "0",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.025",
				["nameplateGlobalScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowEnemyMinions"] = "0",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.5004963874817",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateSelfAlpha"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateOccludedAlphaMult"] = "0.4",
				["nameplateMinScale"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateSelfTopInset"] = "0.5",
				["NamePlateVerticalScale"] = "1",
			},
			["spell_animations_scale"] = 1.251752853393555,
			["aura_timer_text_anchor"] = {
				["y"] = -4.160000801086426,
				["side"] = 11,
			},
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Blockade Encounter"] = 1,
				["Jaina Encounter"] = 6,
				["Execute Range"] = 1,
				["Extra Border"] = 2,
				["Hide Neutral Units"] = 1,
				["Attacking Specific Unit"] = 1,
				["Target Color"] = 3,
				["Aura Reorder"] = 1,
				["Combo Points"] = 3,
			},
			["aura_timer_text_size"] = 7,
			["update_throttle"] = 0.05000000074505806,
			["border_thickness"] = 1.001471042633057,
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["npc_cache"] = {
				[69134] = {
					"Kazra'jin", -- [1]
					"Throne of Thunder", -- [2]
				},
				[40788] = {
					"Mindbender Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
				},
				[69390] = {
					"Zandalari Storm-Caller", -- [1]
					"Throne of Thunder", -- [2]
				},
				[34775] = {
					"Demolisher", -- [1]
					"Isle of Conquest", -- [2]
				},
				[45266] = {
					"Twilight Dark Mender", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[111354] = {
					"Taintheart Befouler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[76811] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[10413] = {
					"Crypt Beast", -- [1]
					"Stratholme", -- [2]
				},
				[93955] = {
					"Delusional Zealot", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136160] = {
					"King Dazar", -- [1]
					"Kings' Rest", -- [2]
				},
				[111355] = {
					"Taintheart Tormenter", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[76812] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[138464] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[34776] = {
					"Siege Engine", -- [1]
					"Isle of Conquest", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[94724] = {
					"Bryanda", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[82698] = {
					"Night-Twisted Devout", -- [1]
					"Highmaul", -- [2]
				},
				[27983] = {
					"Dark Rune Protector", -- [1]
					"Halls of Stone", -- [2]
				},
				[77325] = {
					"Blackhand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[92038] = {
					"Salivating Bloodthirster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[69905] = {
					"Gurubashi Berserker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[54543] = {
					"Time-Twisted Drake", -- [1]
					"End Time", -- [2]
				},
				[74383] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[141282] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[11197] = {
					"Mindless Skeleton", -- [1]
					"Stratholme", -- [2]
				},
				[93830] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[161241] = {
					"Voidweaver Mal'thir", -- [1]
					"Kings' Rest", -- [2]
				},
				[34777] = {
					"Siege Turret", -- [1]
					"Isle of Conquest", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[69906] = {
					"Zandalari High Priest", -- [1]
					"Throne of Thunder", -- [2]
				},
				[61644] = {
					"Dark Shaman Researcher", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[53648] = {
					"Inferno Hawk", -- [1]
					"Firelands", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[161243] = {
					"Samh'rek, Beckoner of Chaos", -- [1]
					"Waycrest Manor", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[13596] = {
					"Rotgrip", -- [1]
					"Maraudon", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129526] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
				},
				[80526] = {
					"Stubborn Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[161244] = {
					"Blood of the Corruptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[80782] = {
					"Icespine Stinger", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[152033] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[34778] = {
					"Flame Turret", -- [1]
					"Isle of Conquest", -- [2]
				},
				[11789] = {
					"Deep Borer", -- [1]
					"Maraudon", -- [2]
				},
				[155872] = {
					"Trapped Saurok", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[90378] = {
					"Kilrogg Deadeye", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[19668] = {
					"Shadowfiend", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[161502] = {
					"Ravenous Fleshfiend", -- [1]
					"Kings' Rest", -- [2]
				},
				[76945] = {
					"Ironcrusher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[27984] = {
					"Dark Rune Stormcaller", -- [1]
					"Halls of Stone", -- [2]
				},
				[131821] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				[156641] = {
					"Enthralled Weaponsmith", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[54161] = {
					"Flame Archon", -- [1]
					"Firelands", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[126969] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
				},
				[69909] = {
					"Amani'shi Flame Chanter", -- [1]
					"Throne of Thunder", -- [2]
				},
				[92554] = {
					"Mek'barash", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[156642] = {
					"Enthralled Laborer", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[44566] = {
					"Ozumat", -- [1]
					"Throne of the Tides", -- [2]
				},
				[76946] = {
					"Faultline", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[158690] = {
					"Cultist Tormenter", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[79505] = {
					"Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[135406] = {
					"Animated Gold", -- [1]
					"Kings' Rest", -- [2]
				},
				[69910] = {
					"Drakkari Frost Warden", -- [1]
					"Throne of Thunder", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[10382] = {
					"Mangled Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[10398] = {
					"Thuzadin Shadowcaster", -- [1]
					"Stratholme", -- [2]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				[3637] = {
					"Deviate Guardian", -- [1]
					"Wailing Caverns", -- [2]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[150249] = {
					"Pistonhead Scrapper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[94859] = {
					"Armored Skullsmasher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[93068] = {
					"Xhul'horac", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[151785] = {
					"Void-Twisted Wyrmkiller", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[462] = {
					"Carrion Bird", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[153065] = {
					"Voidbound Ravager", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[94604] = {
					"Gorebound Corruptor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[127484] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[161510] = {
					"Mindrend Tentacle", -- [1]
					"Kings' Rest", -- [2]
				},
				[74902] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
				},
				[49813] = {
					"Evolved Drakonaar", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[8895] = {
					"Anvilrage Officer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[8911] = {
					"Fireguard Destroyer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[134388] = {
					"A Knot of Snakes", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[126845] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
				},
				[154347] = {
					"Void-Twisted Corruptor", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[127485] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				[134389] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[137204] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[137716] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150254] = {
					"Scraphound", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140787] = {
					"Ember Elemental", -- [1]
					"Isle of Conquest", -- [2]
				},
				[157419] = {
					"Void-Twisted Whelp", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
				},
				[95630] = {
					"Construct Peacekeeper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
				},
				[94607] = {
					"Gorebound Cauterizer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[80534] = {
					"Ornery Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[56915] = {
					"Sun", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[17271] = {
					"Bonechewer Destroyer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[93968] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
				},
				[11790] = {
					"Putridus Satyr", -- [1]
					"Maraudon", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[127488] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[138489] = {
					"Shadow of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[162030] = {
					"Darkwhisper Ritualist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[156145] = {
					"Burrowing Appendage", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[95632] = {
					"Sargerei Enforcer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[77337] = {
					"Aknor Steelbringer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
				},
				[156146] = {
					"Voidbound Shieldbearer", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[78233] = {
					"Darkshard Crystalback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[70557] = {
					"Zandalari Prophet", -- [1]
					"Throne of Thunder", -- [2]
				},
				[12206] = {
					"Primordial Behemoth", -- [1]
					"Maraudon", -- [2]
				},
				[91539] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[53206] = {
					"Hell Hound", -- [1]
					"Firelands", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[80409] = {
					"Markog Aba'dir", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[159219] = {
					"Umbral Seer", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[10399] = {
					"Thuzadin Acolyte", -- [1]
					"Stratholme", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[91540] = {
					"Illusionary Outcast", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[10463] = {
					"Shrieking Banshee", -- [1]
					"Stratholme", -- [2]
				},
				[69791] = {
					"Xuenray", -- [1]
					"Isle of Conquest", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[156406] = {
					"Voidbound Honor Guard", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[78491] = {
					"Brackenspore", -- [1]
					"Highmaul", -- [2]
				},
				[94995] = {
					"Graggra", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[125828] = {
					"Galdrelin", -- [1]
					"Atal'Dazar", -- [2]
				},
				[141566] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[91541] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
				},
				[100497] = {
					"Ursoc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[102672] = {
					"Nythendra", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[80411] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[76829] = {
					"Slag Elemental", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[137474] = {
					"King Timalji", -- [1]
					"Kings' Rest", -- [2]
				},
				[49817] = {
					"Bound Inferno", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[95636] = {
					"Sargerei Adjutant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[93717] = {
					"Volatile Firebomb", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[78237] = {
					"Phemos", -- [1]
					"Highmaul", -- [2]
				},
				[154619] = {
					"Watcher Aum-ka", -- [1]
					"Halls of Origination", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[91543] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[67235] = {
					"Shadowfiend", -- [1]
					"Isle of Conquest", -- [2]
				},
				[161273] = {
					"Abyssal Spawn", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
				},
				[78238] = {
					"Pol", -- [1]
					"Highmaul", -- [2]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[95638] = {
					"Sargerei Bannerman", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[91672] = {
					"Jailer Zerus", -- [1]
					"Broken Shore", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[54552] = {
					"Time-Twisted Breaker", -- [1]
					"End Time", -- [2]
				},
				[78623] = {
					"Cho'gall", -- [1]
					"Highmaul", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[11791] = {
					"Putridus Trickster", -- [1]
					"Maraudon", -- [2]
				},
				[45213] = {
					"Sinestra", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[123402] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[152834] = {
					"Azerite Skitterer", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[156161] = {
					"Inquisitor Gnshal", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[95640] = {
					"Sargerei Soul Cleaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[157441] = {
					"Void Wraith", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[151812] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[56472] = {
					"Fragrant Lotus", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[94617] = {
					"Glynevere", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[54553] = {
					"Time-Twisted Seer", -- [1]
					"End Time", -- [2]
				},
				[94873] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[12207] = {
					"Thessala Hydra", -- [1]
					"Maraudon", -- [2]
				},
				[12223] = {
					"Cavern Lurker", -- [1]
					"Maraudon", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[128649] = {
					"Sergeant Bainbridge", -- [1]
					"Siege of Boralus", -- [2]
				},
				[137485] = {
					"Bloodsworn Agent", -- [1]
					"Kings' Rest", -- [2]
				},
				[94618] = {
					"Cattwen", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
				},
				[53786] = {
					"Blazing Monstrosity", -- [1]
					"Firelands", -- [2]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[10416] = {
					"Bile Spewer", -- [1]
					"Stratholme", -- [2]
				},
				[95642] = {
					"Korvos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[90269] = {
					"Tyrant Velhari", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[69927] = {
					"Zandalari Prelate", -- [1]
					"Throne of Thunder", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[52571] = {
					"Majordomo Staghelm", -- [1]
					"Firelands", -- [2]
				},
				[129802] = {
					"Earthrager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136976] = {
					"T'zala", -- [1]
					"Kings' Rest", -- [2]
				},
				[17306] = {
					"Watchkeeper Gargolmar", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[128651] = {
					"Hadal Darkfathom", -- [1]
					"Siege of Boralus", -- [2]
				},
				[153097] = {
					"Voidbound Shaman", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[61463] = {
					"Slagmaw", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[90270] = {
					"Ancient Enforcer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[78116] = {
					"Water Elemental", -- [1]
					"Waycrest Manor", -- [2]
				},
				[43296] = {
					"Chimaeron", -- [1]
					"Blackwing Descent", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[49821] = {
					"Bound Zephyr", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[81315] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[69161] = {
					"Demossauro", -- [1]
					"Isle of Conquest", -- [2]
				},
				[77477] = {
					"Marak the Blooded", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77605] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[75814] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[90271] = {
					"Ancient Harbinger", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[84386] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[80676] = {
					"Iron Flametwister", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[87841] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[139284] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[61528] = {
					"Lava Guard Gordoth", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[80677] = {
					"Iron Journeyman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[41570] = {
					"Magmaw", -- [1]
					"Blackwing Descent", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[62360] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[94239] = {
					"Omnus", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[127119] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[80422] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[136984] = {
					"Reban", -- [1]
					"Kings' Rest", -- [2]
				},
				[79015] = {
					"Ko'ragh", -- [1]
					"Highmaul", -- [2]
				},
				[13743] = {
					"Corrupt Force of Nature", -- [1]
					"Maraudon", -- [2]
				},
				[81318] = {
					"Iron Gunnery Sergeant", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[17307] = {
					"Nazan", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[89890] = {
					"Fel Lord Zakuun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[11792] = {
					"Putridus Shadowstalker", -- [1]
					"Maraudon", -- [2]
				},
				[135706] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				[70060] = {
					"Shadowed Voodoo Spirit", -- [1]
					"Throne of Thunder", -- [2]
				},
				[150547] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[80551] = {
					"Shard of Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[92961] = {
					"Gorebound Brute", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[97567] = {
					"Ravenous Felstalker", -- [1]
					"Broken Shore", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[93985] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[78121] = {
					"Gorian Warmage", -- [1]
					"Highmaul", -- [2]
				},
				[150293] = {
					"Mechagon Prowler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[74411] = {
					"Death's Head Necrolyte", -- [1]
					"Razorfen Downs", -- [2]
				},
				[70445] = {
					"Stormbringer Draz'kil", -- [1]
					"Throne of Thunder", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[46753] = {
					"Al'Akir", -- [1]
					"Throne of the Four Winds", -- [2]
				},
				[12224] = {
					"Cavern Shambler", -- [1]
					"Maraudon", -- [2]
				},
				[112153] = {
					"Dire Shaman", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[93858] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[134686] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[47265] = {
					"Twilight Whelp", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[61658] = {
					"Mature Flame Hound", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[74412] = {
					"Aarux", -- [1]
					"Razorfen Downs", -- [2]
				},
				[10417] = {
					"Venom Belcher", -- [1]
					"Stratholme", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[136735] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[161812] = {
					"Faceless Ruiner", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[152089] = {
					"Thrall", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[17308] = {
					"Omor the Unscarred", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[87719] = {
					"Ogron Hauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[159510] = {
					"Eye of the Depths", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[161813] = {
					"K'thir Assassin", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[127124] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
				},
				[76205] = {
					"Blooded Bladefeather", -- [1]
					"Skyreach", -- [2]
				},
				[134691] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[53791] = {
					"Blazing Monstrosity", -- [1]
					"Firelands", -- [2]
				},
				[76973] = {
					"Hans'gar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[49825] = {
					"Bound Deluge", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[6498] = {
					"Devilsaur", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
				},
				[136483] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[86185] = {
					"Night-Twisted Supplicant", -- [1]
					"Highmaul", -- [2]
				},
				[54431] = {
					"Echo of Baine", -- [1]
					"End Time", -- [2]
				},
				[127381] = {
					"Silt Crab", -- [1]
					"Tol Dagor", -- [2]
				},
				[54687] = {
					"Time-Twisted Footman", -- [1]
					"End Time", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[76974] = {
					"Franzok", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[42789] = {
					"Stonecore Magmalord", -- [1]
					"The Stonecore", -- [2]
				},
				[145185] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131112] = {
					"Cutwater Striker", -- [1]
					"Tol Dagor", -- [2]
				},
				[80557] = {
					"Mote of Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[161562] = {
					"General Shar'az", -- [1]
					"Halls of Origination", -- [2]
				},
				[81197] = {
					"Iron Raider", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77231] = {
					"Enforcer Sorka", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[153119] = {
					"Lesser Void Elemental", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[54432] = {
					"Murozond", -- [1]
					"End Time", -- [2]
				},
				[52577] = {
					"Left Foot", -- [1]
					"Firelands", -- [2]
				},
				[82733] = {
					"Night-Twisted Shadowsworn", -- [1]
					"Highmaul", -- [2]
				},
				[91305] = {
					"Fel Iron Summoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[130582] = {
					"Despondent Scallywag", -- [1]
					"Tol Dagor", -- [2]
				},
				[153377] = {
					"Goop", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[11793] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
				},
				[90410] = {
					"Felfire Crusher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[152866] = {
					"Hardened Azerite", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[43430] = {
					"Stonecore Berserker", -- [1]
					"The Stonecore", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[43686] = {
					"Ignacious", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Waycrest Manor", -- [2]
				},
				[78641] = {
					"Night-Twisted Faithful", -- [1]
					"Highmaul", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[12225] = {
					"Celebras the Cursed", -- [1]
					"Maraudon", -- [2]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[40936] = {
					"Faceless Watcher", -- [1]
					"Throne of the Tides", -- [2]
				},
				[155684] = {
					"Depthcaller Xith'el", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[90284] = {
					"Iron Reaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[133935] = {
					"Animated Guardian", -- [1]
					"Kings' Rest", -- [2]
				},
				[74548] = {
					"Blazing Servitor", -- [1]
					"Razorfen Downs", -- [2]
				},
				[155685] = {
					"Deephive Soldier", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[43687] = {
					"Feludius", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[112162] = {
					"Grisly Trapper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[112290] = {
					"Horrid Eagle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[135472] = {
					"Zanazal the Wise", -- [1]
					"Kings' Rest", -- [2]
				},
				[154663] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[54690] = {
					"Time-Twisted Priest", -- [1]
					"End Time", -- [2]
				},
				[131123] = {
					"Enchanted Tiki Mask", -- [1]
					"Atal'Dazar", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[69944] = {
					"Sand Elemental", -- [1]
					"Throne of Thunder", -- [2]
				},
				[84401] = {
					"Swift Sproutling", -- [1]
					"The Everbloom", -- [2]
				},
				[59808] = {
					"Shado-Pan Stormbringer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[53795] = {
					"Egg Pile", -- [1]
					"Firelands", -- [2]
				},
				[135475] = {
					"Kula the Butcher", -- [1]
					"Kings' Rest", -- [2]
				},
				[43688] = {
					"Arion", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[54435] = {
					"Ahriak", -- [1]
					"End Time", -- [2]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[54691] = {
					"Time-Twisted Sorceress", -- [1]
					"End Time", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[46951] = {
					"Chosen Warrior", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[61408] = {
					"Adarogg", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[76087] = {
					"Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[133943] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[94894] = {
					"Keen-Eyed Gronnstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[53732] = {
					"Unbound Smoldering Elemental", -- [1]
					"Firelands", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[43689] = {
					"Terrastra", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[133944] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[45992] = {
					"Valiona", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
				},
				[13601] = {
					"Tinkerer Gizlock", -- [1]
					"Maraudon", -- [2]
				},
				[46248] = {
					"Riverpaw Basher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[70587] = {
					"Shale Stalker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[93616] = {
					"Dreadstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
				},
				[46952] = {
					"Chosen Seer", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[157231] = {
					"Shad'har the Insatiable", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
				},
				[149555] = {
					"Abomination", -- [1]
					"Isle of Conquest", -- [2]
				},
				[136250] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[111528] = {
					"Deathroot Ancient", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[93233] = {
					"Lord Aram'el", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[45993] = {
					"Theralion", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
				},
				[46249] = {
					"Riverpaw Slayer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[54693] = {
					"Time-Twisted Rifleman", -- [1]
					"End Time", -- [2]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[53094] = {
					"Patriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[47017] = {
					"Fire Elemental", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[47081] = {
					"Elemental Firelord", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[86326] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[61666] = {
					"Corrupted Houndmaster", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[14465] = {
					"Alliance Battle Standard", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[95282] = {
					"Azgalor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[10435] = {
					"Magistrate Barthilas", -- [1]
					"Stratholme", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[151096] = {
					"Hati", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[86071] = {
					"Rokkaa", -- [1]
					"Highmaul", -- [2]
				},
				[75964] = {
					"Ranjit", -- [1]
					"Skyreach", -- [2]
				},
				[46250] = {
					"Riverpaw Poacher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[157238] = {
					"Prophet Skitra", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
				},
				[17280] = {
					"Shattered Hand Warhound", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[53095] = {
					"Matriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[53223] = {
					"Flamewaker Beast Handler", -- [1]
					"Firelands", -- [2]
				},
				[135234] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129699] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
				},
				[161334] = {
					"Gnashing Terror", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[148797] = {
					"Magus of the Dead", -- [1]
					"Isle of Conquest", -- [2]
				},
				[161335] = {
					"Void Horror", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[86073] = {
					"Lokk", -- [1]
					"Highmaul", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[86329] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[52648] = {
					"Boris", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[151613] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[53096] = {
					"Fire Turtle Hatchling", -- [1]
					"Firelands", -- [2]
				},
				[53224] = {
					"Flamewaker Taskmaster", -- [1]
					"Firelands", -- [2]
				},
				[155708] = {
					"Tentacle", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[90296] = {
					"Soulbound Construct", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[86330] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[45676] = {
					"Faceless Guardian", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[11459] = {
					"Ironbark Protector", -- [1]
					"Dire Maul", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[151872] = {
					"Grip of Horror", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[46252] = {
					"Riverpaw Shaman", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[158781] = {
					"Shredded Psyche", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[61029] = {
					"Primal Fire Elemental", -- [1]
					"Isle of Conquest", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[77504] = {
					"Slag Behemoth", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[94008] = {
					"Dark Devourer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[34802] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				[76097] = {
					"Solar Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[133963] = {
					"Test Subject", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[53545] = {
					"Molten Spewer", -- [1]
					"Firelands", -- [2]
				},
				[74434] = {
					"Amnennar the Coldbringer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[43438] = {
					"Corborus", -- [1]
					"The Stonecore", -- [2]
				},
				[130087] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[93625] = {
					"Phantasmal Resonance", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[93881] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[94777] = {
					"Morkronn", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[70341] = {
					"Tormented Spirit", -- [1]
					"Throne of Thunder", -- [2]
				},
				[135245] = {
					"Bilge Rat Demolisher", -- [1]
					"Siege of Boralus", -- [2]
				},
				[87229] = {
					"Iron Blood Mage", -- [1]
					"Highmaul", -- [2]
				},
				[75331] = {
					"Death's Head Ghoul Wrangler", -- [1]
					"Razorfen Downs", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
				},
				[43119] = {
					"Spirit of Angerforge", -- [1]
					"Blackwing Descent", -- [2]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59751] = {
					"Shado-Pan Warden", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[134991] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[152135] = {
					"Void-Twisted Spellweaver", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[45870] = {
					"Anshal", -- [1]
					"Throne of the Four Winds", -- [2]
				},
				[157253] = {
					"Ka'zir", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[127019] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[94779] = {
					"Sovokk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[157254] = {
					"Tek'ris", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[134993] = {
					"Mchimba the Embalmer", -- [1]
					"Kings' Rest", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				[42800] = {
					"Golem Sentry", -- [1]
					"Blackwing Descent", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[47150] = {
					"Earth Ravager", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[158279] = {
					"Haywire Clockwork Rocket Bot", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[59752] = {
					"Shado-Pan Ambusher", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[159303] = {
					"Monstrous Behemoth", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[74950] = {
					"Gelatanized Plague Gunk", -- [1]
					"Razorfen Downs", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[133972] = {
					"Heavy Cannon", -- [1]
					"Tol Dagor", -- [2]
				},
				[45871] = {
					"Nezir", -- [1]
					"Throne of the Four Winds", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[152396] = {
					"Guardian of Azeroth", -- [1]
					"Isle of Conquest", -- [2]
				},
				[46383] = {
					"Randolph Moloch", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[159305] = {
					"Maddened Conscript", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[155723] = {
					"Swarmguard Kzaz", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[135765] = {
					"Torrent Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[47087] = {
					"Azureborne Destroyer", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[47151] = {
					"Wind Breaker", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[133463] = {
					"Venture Co. War Machine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[90432] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61672] = {
					"Dark Shaman Acolyte", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Isle of Conquest", -- [2]
				},
				[158284] = {
					"Craggle Wobbletop", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[48047] = {
					"Twilight Whelp", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[75976] = {
					"Low-Born Arakkoa", -- [1]
					"Skyreach", -- [2]
				},
				[158285] = {
					"Tinkered Shieldbot", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[56747] = {
					"Gu Cloudstrike", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[74953] = {
					"Congealed Droplet", -- [1]
					"Razorfen Downs", -- [2]
				},
				[158286] = {
					"Reprogrammed Warbot", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[79303] = {
					"Adorned Bladetalon", -- [1]
					"Skyreach", -- [2]
				},
				[42802] = {
					"Drakonid Slayer", -- [1]
					"Blackwing Descent", -- [2]
				},
				[47152] = {
					"Twilight Elementalist", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[80071] = {
					"Bladespire Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[139097] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[48048] = {
					"Twilight Whelp", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[96192] = {
					"Wrathguard Cleaver", -- [1]
					"Broken Shore", -- [2]
				},
				[90435] = {
					"Kormrok", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[91331] = {
					"Archimonde", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[42803] = {
					"Drakeadon Mongrel", -- [1]
					"Blackwing Descent", -- [2]
				},
				[136541] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
				},
				[94018] = {
					"Shadow Burster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
				},
				[151638] = {
					"Crazed Earth Rager", -- [1]
					"Neltharion's Lair - HoA Scenario", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[153942] = {
					"Annihilator Lak'hal", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[81737] = {
					"Unchecked Growth", -- [1]
					"The Everbloom", -- [2]
				},
				[153943] = {
					"Decimator Shiq'voth", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[88902] = {
					"Mol'dana Two-Blade", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[10741] = {
					"Cat", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[94916] = {
					"Fel Touched Seer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76877] = {
					"Gruul", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[8902] = {
					"Shadowforge Citizen", -- [1]
					"Blackrock Depths", -- [2]
				},
				[48050] = {
					"Twilight Whelp", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[96196] = {
					"Eredar Deathspeaker", -- [1]
					"Broken Shore", -- [2]
				},
				[162647] = {
					"Willing Sacrifice", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[44404] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[152669] = {
					"Void Globule", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[157275] = {
					"Darkwhisper Disciple", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[43125] = {
					"Spirit of Moltenfist", -- [1]
					"Blackwing Descent", -- [2]
				},
				[41270] = {
					"Onyxia", -- [1]
					"Blackwing Descent", -- [2]
				},
				[53616] = {
					"Kar the Everburning", -- [1]
					"Firelands", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[132713] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[139110] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[46260] = {
					"Searing Destroyer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[75857] = {
					"Unstable Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[43126] = {
					"Spirit of Thaurissan", -- [1]
					"Blackwing Descent", -- [2]
				},
				[152162] = {
					"Void-Twisted Skystriker", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[53617] = {
					"Molten Erupter", -- [1]
					"Firelands", -- [2]
				},
				[80719] = {
					"Iron Smith", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[74834] = {
					"Web Wrap", -- [1]
					"Razorfen Downs", -- [2]
				},
				[144231] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
				},
				[129208] = {
					"Dread Captain Lockwood", -- [1]
					"Siege of Boralus", -- [2]
				},
				[46261] = {
					"Enraged Fire Elemental", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[113088] = {
					"Corrupted Feeler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[48436] = {
					"Twilight Drake", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[5053] = {
					"Deviate Crocolisk", -- [1]
					"Wailing Caverns", -- [2]
				},
				[78801] = {
					"Darkshard Acidback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[46965] = {
					"Cho'gall", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[90316] = {
					"Shadow-Lord Iskar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61678] = {
					"Corrupted Reaver", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[70230] = {
					"Zandalari Blade Initiate", -- [1]
					"Throne of Thunder", -- [2]
				},
				[10390] = {
					"Skeletal Guardian", -- [1]
					"Stratholme", -- [2]
				},
				[10406] = {
					"Ghoul Ravener", -- [1]
					"Stratholme", -- [2]
				},
				[134739] = {
					"Purification Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[10438] = {
					"Maleki the Pallid", -- [1]
					"Stratholme", -- [2]
				},
				[159514] = {
					"Blood of Ny'alotha", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[85711] = {
					"Aquatic Technician", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151144] = {
					"Hati", -- [1]
					"Isle of Conquest", -- [2]
				},
				[162828] = {
					"Corrosive Digester", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[94283] = {
					"Shadow Infuser", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[161312] = {
					"Crushing Tendril", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[76116] = {
					"Diving Chakram Spinner", -- [1]
					"Skyreach", -- [2]
				},
				[158168] = {
					"Dark Disciple", -- [1]
					"Halls of Origination", -- [2]
				},
				[86607] = {
					"Iron Flame Technician", -- [1]
					"Highmaul", -- [2]
				},
				[161124] = {
					"Urg'roth, Breaker of Heroes", -- [1]
					"Kings' Rest", -- [2]
				},
				[159309] = {
					"Leeching Parasite", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[53167] = {
					"Unbound Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[74379] = {
					"Splinterbone Frostweaver", -- [1]
					"Razorfen Downs", -- [2]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
				},
				[87989] = {
					"Forgemistress Flamehand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[42808] = {
					"Stonecore Flayer", -- [1]
					"The Stonecore", -- [2]
				},
				[40825] = {
					"Erunak Stonespeaker", -- [1]
					"Throne of the Tides", -- [2]
				},
				[45872] = {
					"Rohash", -- [1]
					"Throne of the Four Winds", -- [2]
				},
				[93615] = {
					"Felborne Overfiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94284] = {
					"Fiery Enkindler", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[43128] = {
					"Spirit of Anvilrage", -- [1]
					"Blackwing Descent", -- [2]
				},
				[133384] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[158567] = {
					"Tormented Kor'kron Annihilator", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[94924] = {
					"Iron Peon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[151859] = {
					"Tomb Scarab", -- [1]
					"Halls of Origination", -- [2]
				},
				[155090] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[131445] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[151639] = {
					"Crazed Gyreworm", -- [1]
					"Neltharion's Lair - HoA Scenario", -- [2]
				},
				[59804] = {
					"Gripping Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[95280] = {
					"Kaz'rogal", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[53901] = {
					"Unstable Magma", -- [1]
					"Firelands", -- [2]
				},
				[69465] = {
					"Jin'rokh the Breaker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[94285] = {
					"Fel Extractor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17990] = {
					"Underbog Mushroom", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[46263] = {
					"Slag Fury", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[134005] = {
					"Shalebiter", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[86609] = {
					"Iron Warmaster", -- [1]
					"Highmaul", -- [2]
				},
				[78549] = {
					"Gorian Reaver", -- [1]
					"Highmaul", -- [2]
				},
				[153196] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[11142] = {
					"Undead Postman", -- [1]
					"Stratholme", -- [2]
				},
				[78933] = {
					"Herald of Sunrise", -- [1]
					"Skyreach", -- [2]
				},
				[91697] = {
					"Dark Inquisitor", -- [1]
					"Broken Shore", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[43286] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
				},
				[97566] = {
					"Wrathguard Cleaver", -- [1]
					"Broken Shore", -- [2]
				},
				[96005] = {
					"Burning Crusher", -- [1]
					"Broken Shore", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[158169] = {
					"Devout Disciple", -- [1]
					"Halls of Origination", -- [2]
				},
				[139790] = {
					"Stag", -- [1]
					"Isle of Conquest", -- [2]
				},
				[43129] = {
					"Spirit of Shadowforge", -- [1]
					"Blackwing Descent", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[42845] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[74584] = {
					"Plague-Rotted Webslinger", -- [1]
					"Razorfen Downs", -- [2]
				},
				[69388] = {
					"Zandalari Spear-Shaper", -- [1]
					"Throne of Thunder", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[69132] = {
					"High Priestess Mar'li", -- [1]
					"Throne of Thunder", -- [2]
				},
				[91521] = {
					"Vindicator Bramu", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[10400] = {
					"Thuzadin Necromancer", -- [1]
					"Stratholme", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[94733] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[163690] = {
					"Shath'Yar Scribe", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[76376] = {
					"Skyreach Arcanologist", -- [1]
					"Skyreach", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[46264] = {
					"Lord Overheat", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[144244] = {
					"The Platinum Pummeler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				[42362] = {
					"Drakonid Drudge", -- [1]
					"Blackwing Descent", -- [2]
				},
				[60849] = {
					"Jade Serpent Statue", -- [1]
					"Isle of Conquest", -- [2]
				},
				[155706] = {
					"Yox'ith", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[127486] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[93392] = {
					"Captured Prisoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[66652] = {
					"Lesser Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[42810] = {
					"Crystalspawn Giant", -- [1]
					"The Stonecore", -- [2]
				},
				[69899] = {
					"Farraki Sand Conjurer", -- [1]
					"Throne of Thunder", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[153141] = {
					"Endless Hunger Totem", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[43130] = {
					"Spirit of Burningeye", -- [1]
					"Blackwing Descent", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[5925] = {
					"Grounding Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[86612] = {
					"Spore Shooter", -- [1]
					"Highmaul", -- [2]
				},
				[80599] = {
					"Night-Twisted Earthwarper", -- [1]
					"Highmaul", -- [2]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[105419] = {
					"Dire Basilisk", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[27970] = {
					"Raging Construct", -- [1]
					"Halls of Stone", -- [2]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[91520] = {
					"Adjunct Kuroh", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[40943] = {
					"Gilgoblin Aquamage", -- [1]
					"Throne of the Tides", -- [2]
				},
				[56754] = {
					"Azure Serpent", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56541] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
				},
				[8897] = {
					"Doomforge Craftsman", -- [1]
					"Blackrock Depths", -- [2]
				},
				[10464] = {
					"Wailing Banshee", -- [1]
					"Stratholme", -- [2]
				},
				[144248] = {
					"Head Machinist Sparkflux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[132056] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[58803] = {
					"Residual Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[58856] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56884] = {
					"Corrupted Taran Zhu", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[27963] = {
					"Dark Rune Theurgist", -- [1]
					"Halls of Stone", -- [2]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[144249] = {
					"Omega Buster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[74435] = {
					"Mushlump", -- [1]
					"Razorfen Downs", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[17478] = {
					"Bleeding Hollow Scryer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[47161] = {
					"Twilight Brute", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[36272] = {
					"Apothecary Frye", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[53494] = {
					"Baleroc", -- [1]
					"Firelands", -- [2]
				},
				[94802] = {
					"Voidscribe Aathalos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[8898] = {
					"Anvilrage Marshal", -- [1]
					"Blackrock Depths", -- [2]
				},
				[157812] = {
					"Billibub Cogspinner", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[10407] = {
					"Fleshflayer Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[130028] = {
					"Ashvane Priest", -- [1]
					"Tol Dagor", -- [2]
				},
				[10439] = {
					"Ramstein the Gorger", -- [1]
					"Stratholme", -- [2]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[106317] = {
					"Storm Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[157813] = {
					"Sprite Jumpsprocket", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[27965] = {
					"Dark Rune Shaper", -- [1]
					"Halls of Stone", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[70153] = {
					"Fungal Growth", -- [1]
					"Throne of Thunder", -- [2]
				},
				[42428] = {
					"Devout Follower", -- [1]
					"The Stonecore", -- [2]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[27962] = {
					"Dark Rune Elementalist", -- [1]
					"Halls of Stone", -- [2]
				},
				[91349] = {
					"Mannoroth", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[27966] = {
					"Dark Rune Controller", -- [1]
					"Halls of Stone", -- [2]
				},
				[46842] = {
					"Pulsing Twilight Egg", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[77404] = {
					"The Butcher", -- [1]
					"Highmaul", -- [2]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[27969] = {
					"Dark Rune Giant", -- [1]
					"Halls of Stone", -- [2]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[11121] = {
					"Black Guard Swordsmith", -- [1]
					"Stratholme", -- [2]
				},
				[17309] = {
					"Hellfire Watcher", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[158327] = {
					"Crackling Shard", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[76253] = {
					"Dread Raven Hatchling", -- [1]
					"Skyreach", -- [2]
				},
				[94804] = {
					"Shambling Hulk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[46381] = {
					"Shifty Thief", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[79068] = {
					"Iron Grunt", -- [1]
					"Highmaul", -- [2]
				},
				[150396] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[27971] = {
					"Unrelenting Construct", -- [1]
					"Halls of Stone", -- [2]
				},
				[158328] = {
					"Il'gynoth", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[8904] = {
					"Shadowforge Senator", -- [1]
					"Blackrock Depths", -- [2]
				},
				[42973] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
				},
				[87768] = {
					"Night-Twisted Fanatic", -- [1]
					"Highmaul", -- [2]
				},
				[106319] = {
					"Ember Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
				},
				[90199] = {
					"Gorefiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[14303] = {
					"Petrified Guardian", -- [1]
					"Dire Maul", -- [2]
				},
				[128652] = {
					"Viq'Goth", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150397] = {
					"King Mechagon", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[13142] = {
					"Deeprot Tangler", -- [1]
					"Maraudon", -- [2]
				},
				[158437] = {
					"Fallen Taskmaster", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[9056] = {
					"Fineous Darkvire", -- [1]
					"Blackrock Depths", -- [2]
				},
				[69792] = {
					"Xuenray", -- [1]
					"Isle of Conquest", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129214] = {
					"Coin-Operated Crowd Pummeler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[111004] = {
					"Gelatinized Decay", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[10391] = {
					"Skeletal Berserker", -- [1]
					"Stratholme", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[17269] = {
					"Bleeding Hollow Darkcaster", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[150143] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[10383] = {
					"Broken Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[94806] = {
					"Fel Hellweaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[8913] = {
					"Twilight Emissary", -- [1]
					"Blackrock Depths", -- [2]
				},
				[11030] = {
					"Mindless Undead", -- [1]
					"Stratholme", -- [2]
				},
				[8900] = {
					"Doomforge Arcanasmith", -- [1]
					"Blackrock Depths", -- [2]
				},
				[81117] = {
					"Karnor the Cruel", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[70236] = {
					"Zandalari Storm-Caller", -- [1]
					"Throne of Thunder", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[88589] = {
					"Boar", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[106321] = {
					"Tailwind Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[11458] = {
					"Petrified Treant", -- [1]
					"Dire Maul", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[52409] = {
					"Ragnaros", -- [1]
					"Firelands", -- [2]
				},
				[10405] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
				},
				[152704] = {
					"Crawling Corruption", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[135254] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				[151752] = {
					"Voidswarm", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[1860] = {
					"Jhazdok", -- [1]
					"Isle of Conquest", -- [2]
				},
				[99541] = {
					"Risen Skulker", -- [1]
					"Isle of Conquest", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[87515] = {
					"Iron Flame Binder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[90272] = {
					"Ancient Sovereign", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[87771] = {
					"Slagshop Worker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[76815] = {
					"Primal Elementalist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11783] = {
					"Theradrim Shardling", -- [1]
					"Maraudon", -- [2]
				},
				[53793] = {
					"Harbinger of Flame", -- [1]
					"Firelands", -- [2]
				},
				[135562] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[28384] = {
					"Lesser Air Elemental", -- [1]
					"Halls of Stone", -- [2]
				},
				[137989] = {
					"Embalming Fluid", -- [1]
					"Kings' Rest", -- [2]
				},
				[94808] = {
					"Hellfire Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[93435] = {
					"Felfire Transporter", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17270] = {
					"Bleeding Hollow Archer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[27972] = {
					"Lightning Construct", -- [1]
					"Halls of Stone", -- [2]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[92041] = {
					"Bleeding Darkcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[54073] = {
					"Flamewaker Hound Master", -- [1]
					"Firelands", -- [2]
				},
				[93913] = {
					"Fel Scorcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[45267] = {
					"Twilight Phase-Twister", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				[79200] = {
					"Blackrock Forge Specialist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11794] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
				},
				[46254] = {
					"Hogger", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[70245] = {
					"Training Dummy", -- [1]
					"Throne of Thunder", -- [2]
				},
				[76306] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[161408] = {
					"Malicious Growth", -- [1]
					"Kings' Rest", -- [2]
				},
				[95613] = {
					"Binder Hallaani", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[46262] = {
					"Rumbling Earth", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[45412] = {
					"Lord Aurius Rivendare", -- [1]
					"Stratholme", -- [2]
				},
				[8910] = {
					"Blazing Fireguard", -- [1]
					"Blackrock Depths", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[135231] = {
					"Spectral Brute", -- [1]
					"Kings' Rest", -- [2]
				},
				[26686] = {
					"Ferocious Rhino", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[90409] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[69078] = {
					"Sul the Sandcrawler", -- [1]
					"Throne of Thunder", -- [2]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[158146] = {
					"Fallen Riftwalker", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[82400] = {
					"Ogron Brute", -- [1]
					"Highmaul", -- [2]
				},
				[70246] = {
					"Spirit Flayer", -- [1]
					"Throne of Thunder", -- [2]
				},
				[43391] = {
					"Millhouse Manastorm", -- [1]
					"The Stonecore", -- [2]
				},
				[151659] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
				},
				[10408] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
				},
				[137614] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[76884] = {
					"Cruelfang", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[74371] = {
					"Splinterbone Captain", -- [1]
					"Razorfen Downs", -- [2]
				},
				[154758] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[69351] = {
					"Greater Cave Bat", -- [1]
					"Throne of Thunder", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[93952] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[49826] = {
					"Bound Rumbler", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[137940] = {
					"Safety Shark", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[76132] = {
					"Soaring Chakram Master", -- [1]
					"Skyreach", -- [2]
				},
				[26125] = {
					"Battaker", -- [1]
					"Isle of Conquest", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[127479] = {
					"The Sand Queen", -- [1]
					"Tol Dagor", -- [2]
				},
				[154744] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[150154] = {
					"Saurolisk Bonenipper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
				},
				[152201] = {
					"Darkspear Headhunter", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[43662] = {
					"Unbound Earth Rager", -- [1]
					"The Stonecore", -- [2]
				},
				[53115] = {
					"Molten Lord", -- [1]
					"Firelands", -- [2]
				},
				[69352] = {
					"Vampiric Cave Bat", -- [1]
					"Throne of Thunder", -- [2]
				},
				[417] = {
					"Khuunam", -- [1]
					"Isle of Conquest", -- [2]
				},
				[144246] = {
					"K.U.-J.0.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[47086] = {
					"Crimsonborne Firestarter", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[129227] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[158343] = {
					"Organ of Corruption", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[43214] = {
					"Slabhide", -- [1]
					"The Stonecore", -- [2]
				},
				[53691] = {
					"Shannox", -- [1]
					"Firelands", -- [2]
				},
				[43127] = {
					"Spirit of Ironstar", -- [1]
					"Blackwing Descent", -- [2]
				},
				[78948] = {
					"Tectus", -- [1]
					"Highmaul", -- [2]
				},
				[27973] = {
					"Crystalline Shardling", -- [1]
					"Halls of Stone", -- [2]
				},
				[8889] = {
					"Anvilrage Overseer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[8905] = {
					"Warbringer Construct", -- [1]
					"Blackrock Depths", -- [2]
				},
				[130635] = {
					"Stonefury", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[151836] = {
					"Void Horror", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[82519] = {
					"Highmaul Conscript", -- [1]
					"Highmaul", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[105427] = {
					"Skyfury Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[9017] = {
					"Lord Incendius", -- [1]
					"Blackrock Depths", -- [2]
				},
				[76309] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[138247] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[91103] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[161895] = {
					"Thing From Beyond", -- [1]
					"Tol Dagor", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[111856] = {
					"Guardian Gorroc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[87521] = {
					"Iron Slag-Shaper", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[53116] = {
					"Unbound Blazing Elemental", -- [1]
					"Firelands", -- [2]
				},
				[71529] = {
					"Demossauro", -- [1]
					"Isle of Conquest", -- [2]
				},
				[53244] = {
					"Flamewaker Trainee", -- [1]
					"Firelands", -- [2]
				},
				[94861] = {
					"Grim Ambusher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[150159] = {
					"King Gobbamak", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[82532] = {
					"Krush", -- [1]
					"Highmaul", -- [2]
				},
				[87619] = {
					"Gorian Warden", -- [1]
					"Highmaul", -- [2]
				},
				[93023] = {
					"Siegemaster Mar'tak", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135761] = {
					"Thundering Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[158092] = {
					"Fallen Heartpiercer", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[95813] = {
					"Weaponlord Mehlkhior", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[79462] = {
					"Blinding Solar Flare", -- [1]
					"Skyreach", -- [2]
				},
				[48049] = {
					"Twilight Whelp", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[141565] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[143985] = {
					"Absorb-o-Tron", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[163978] = {
					"Darkwhisper Cultist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[43917] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[82533] = {
					"Smash", -- [1]
					"Highmaul", -- [2]
				},
				[56763] = {
					"Regenerating Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[58810] = {
					"Fragment of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[69455] = {
					"Zandalari Water-Binder", -- [1]
					"Throne of Thunder", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[17259] = {
					"Bonechewer Hungerer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[3671] = {
					"Lady Anacondra", -- [1]
					"Wailing Caverns", -- [2]
				},
				[79463] = {
					"Radiant Supernova", -- [1]
					"Skyreach", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
				},
				[82534] = {
					"Spike", -- [1]
					"Highmaul", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				[135322] = {
					"The Golden Serpent", -- [1]
					"Kings' Rest", -- [2]
				},
				[137625] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
				},
				[94816] = {
					"Togdrov", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[152722] = {
					"Fallen Voidspeaker", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[53640] = {
					"Flamewaker Sentinel", -- [1]
					"Firelands", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				[127490] = {
					"Knight Captain Valyri", -- [1]
					"Tol Dagor", -- [2]
				},
				[137626] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[151742] = {
					"Void-Twisted Invader", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[87780] = {
					"Slagshop Brute", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[156818] = {
					"Wrathion", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[92514] = {
					"Shao'ghun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76266] = {
					"High Sage Viryx", -- [1]
					"Skyreach", -- [2]
				},
				[74347] = {
					"Mordresh Fire Eye", -- [1]
					"Razorfen Downs", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[56764] = {
					"Consuming Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[76778] = {
					"Life-Pact Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[76906] = {
					"Operator Thogar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[42691] = {
					"Stonecore Rift Conjurer", -- [1]
					"The Stonecore", -- [2]
				},
				[12216] = {
					"Poison Sprite", -- [1]
					"Maraudon", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[157700] = {
					"Agustus Moulaine", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[130896] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				[54445] = {
					"Echo of Jaina", -- [1]
					"End Time", -- [2]
				},
				[53619] = {
					"Druid of the Flame", -- [1]
					"Firelands", -- [2]
				},
				[113113] = {
					"Essence of Nightmare", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[76267] = {
					"Solar Zealot", -- [1]
					"Skyreach", -- [2]
				},
				[123476] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[53630] = {
					"Unstable Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[53694] = {
					"Riplimb", -- [1]
					"Firelands", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[155797] = {
					"Animated Guardian", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[10409] = {
					"Rockwing Screecher", -- [1]
					"Stratholme", -- [2]
				},
				[150168] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[79466] = {
					"Initiate of the Rising Sun", -- [1]
					"Skyreach", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[87910] = {
					"Gorian Rune-Mender", -- [1]
					"Highmaul", -- [2]
				},
				[90981] = {
					"Balnazzar", -- [1]
					"Broken Shore", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[100576] = {
					"Nightmare Image", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[94563] = {
					"Gorebound Fanatic", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[27975] = {
					"Maiden of Grief", -- [1]
					"Halls of Stone", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[94947] = {
					"Fel-Starved Trainee", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[56765] = {
					"Destroying Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[93156] = {
					"Eredar Faithbreaker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[48266] = {
					"Defias Cannon", -- [1]
					"Deadmines", -- [2]
				},
				[42692] = {
					"Stonecore Bruiser", -- [1]
					"The Stonecore", -- [2]
				},
				[10697] = {
					"Bile Slime", -- [1]
					"Stratholme", -- [2]
				},
				[79467] = {
					"Adept of the Dawn", -- [1]
					"Skyreach", -- [2]
				},
				[53119] = {
					"Flamewaker Forward Guard", -- [1]
					"Firelands", -- [2]
				},
				[84841] = {
					"Iron Dockworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[85225] = {
					"Gorian Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[54143] = {
					"Molten Flamefather", -- [1]
					"Firelands", -- [2]
				},
				[46083] = {
					"Drakeadon Mongrel", -- [1]
					"Blackwing Descent", -- [2]
				},
				[76141] = {
					"Araknath", -- [1]
					"Skyreach", -- [2]
				},
				[144286] = {
					"Asset Manager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[123478] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[74478] = {
					"Death's Head Shadowmender", -- [1]
					"Razorfen Downs", -- [2]
				},
				[53695] = {
					"Rageface", -- [1]
					"Firelands", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[45699] = {
					"Twilight Shadow Mender", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[54015] = {
					"Majordomo Staghelm", -- [1]
					"Firelands", -- [2]
				},
				[8922] = {
					"Bloodhound Mastiff", -- [1]
					"Blackrock Depths", -- [2]
				},
				[152987] = {
					"Faceless Willbreaker", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[157337] = {
					"Spawn of Shad'har", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[44164] = {
					"Raptor", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[94693] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[43735] = {
					"Elementium Monstrosity", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[152988] = {
					"Faceless Shadowcaller", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[56766] = {
					"Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[157594] = {
					"Lesser Void Elemental", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[160183] = {
					"Void Fanatic", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[36296] = {
					"Apothecary Hummel", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[79469] = {
					"Whirling Dervish", -- [1]
					"Skyreach", -- [2]
				},
				[154524] = {
					"K'thir Mindcarver", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[26536] = {
					"Mindless Servant", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[53120] = {
					"Flamewaker Pathfinder", -- [1]
					"Firelands", -- [2]
				},
				[58959] = {
					"Piptoc", -- [1]
					"Isle of Conquest", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[76143] = {
					"Rukhran", -- [1]
					"Skyreach", -- [2]
				},
				[53575] = {
					"Lava Wielder", -- [1]
					"Firelands", -- [2]
				},
				[152718] = {
					"Alleria Windrunner", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[74480] = {
					"Splinterbone Shadowcaster", -- [1]
					"Razorfen Downs", -- [2]
				},
				[76094] = {
					"Sun Trinket", -- [1]
					"Skyreach", -- [2]
				},
				[69131] = {
					"Frost King Malakk", -- [1]
					"Throne of Thunder", -- [2]
				},
				[80822] = {
					"Night-Twisted Berserker", -- [1]
					"Highmaul", -- [2]
				},
				[45700] = {
					"Twilight Portal Shaper", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[152479] = {
					"Void-Twisted Whelp", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[157811] = {
					"Lilliam Sparkspindle", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[92391] = {
					"Gorebound Bloodletter", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[152836] = {
					"Azerite Borer", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[154552] = {
					"Amathet Zealot", -- [1]
					"Halls of Origination", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[95603] = {
					"Mystic Aaran", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[81985] = {
					"Everbloom Tender", -- [1]
					"The Everbloom", -- [2]
				},
				[42649] = {
					"Drakonid Chainwielder", -- [1]
					"Blackwing Descent", -- [2]
				},
				[56767] = {
					"Shado-Pan Fire Archer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[76102] = {
					"Air Familiar", -- [1]
					"Skyreach", -- [2]
				},
				[153760] = {
					"Enthralled Footman", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[43324] = {
					"Cho'gall", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[53185] = {
					"Flamewaker Overseer", -- [1]
					"Firelands", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[53121] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[161437] = {
					"Explosive Scarab", -- [1]
					"Kings' Rest", -- [2]
				},
				[43014] = {
					"Imp", -- [1]
					"The Stonecore", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[17517] = {
					"Hellfire Sentry", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[42188] = {
					"Ozruk", -- [1]
					"The Stonecore", -- [2]
				},
				[76310] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[153401] = {
					"K'thir Dominator", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[78832] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[156577] = {
					"Therum Deepforge", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[76146] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[121564] = {
					"Stagatha", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144295] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[157602] = {
					"Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[154550] = {
					"Amathet Sun Priest", -- [1]
					"Halls of Origination", -- [2]
				},
				[94185] = {
					"Vanguard Akkelion", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[74483] = {
					"Death's Head Arachnomancer", -- [1]
					"Razorfen Downs", -- [2]
				},
				[12217] = {
					"Corruptor", -- [1]
					"Maraudon", -- [2]
				},
				[93162] = {
					"Umbral Supplicant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76914] = {
					"Coldtusk", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[40584] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[42695] = {
					"Stonecore Sentry", -- [1]
					"The Stonecore", -- [2]
				},
				[127497] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[94697] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[84983] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[53140] = {
					"Son of Flame", -- [1]
					"Firelands", -- [2]
				},
				[74492] = {
					"Bubonic Geist", -- [1]
					"Razorfen Downs", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[41096] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144298] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[127503] = {
					"Overseer Korgus", -- [1]
					"Tol Dagor", -- [2]
				},
				[135192] = {
					"Honored Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[92523] = {
					"Vazeel'fazag", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76814] = {
					"Flamebender Ka'graz", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130521] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[3640] = {
					"Evolving Ectoplasm", -- [1]
					"Wailing Caverns", -- [2]
				},
				[93931] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[43122] = {
					"Spirit of Corehammer", -- [1]
					"Blackwing Descent", -- [2]
				},
				[163746] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144299] = {
					"Workshop Defender", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144300] = {
					"Mechagon Citizen", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[3680] = {
					"Serpentbloom Snake", -- [1]
					"Wailing Caverns", -- [2]
				},
				[144301] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[53187] = {
					"Flamewaker Animator", -- [1]
					"Firelands", -- [2]
				},
				[81272] = {
					"Gorian Runemaster", -- [1]
					"Highmaul", -- [2]
				},
				[42696] = {
					"Stonecore Warbringer", -- [1]
					"The Stonecore", -- [2]
				},
				[130522] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
				},
				[77428] = {
					"Imperator Mar'gok", -- [1]
					"Highmaul", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[44999] = {
					"Shen'dralar Watcher", -- [1]
					"Dire Maul", -- [2]
				},
				[133389] = {
					"Galvazzt", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[74875] = {
					"Death Speaker Blackthorn", -- [1]
					"Razorfen Downs", -- [2]
				},
				[86256] = {
					"Gorian High Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[129371] = {
					"Riptide Shredder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[81522] = {
					"Witherbark", -- [1]
					"The Everbloom", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[53635] = {
					"Cinderweb Drone", -- [1]
					"Firelands", -- [2]
				},
				[74486] = {
					"Freezing Spirit", -- [1]
					"Razorfen Downs", -- [2]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[45687] = {
					"Twilight-Shifter", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[45703] = {
					"Faceless Minion", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[144303] = {
					"G.U.A.R.D.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[137473] = {
					"Guard Captain Atu", -- [1]
					"Kings' Rest", -- [2]
				},
				[77557] = {
					"Admiral Gar'an", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[81779] = {
					"Ogron Mauler", -- [1]
					"Highmaul", -- [2]
				},
				[92142] = {
					"Blademaster Jubei'thos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[52498] = {
					"Beth'tilac", -- [1]
					"Firelands", -- [2]
				},
				[129372] = {
					"Blacktar Bomber", -- [1]
					"Siege of Boralus", -- [2]
				},
				[92526] = {
					"Zerik'shekor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135971] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
				},
				[111333] = {
					"Taintheart Trickster", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[79093] = {
					"Skyreach Sun Talon", -- [1]
					"Skyreach", -- [2]
				},
				[61056] = {
					"Primal Earth Elemental", -- [1]
					"Isle of Conquest", -- [2]
				},
				[150190] = {
					"HK-8 Aerial Oppression Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				[53188] = {
					"Flamewaker Subjugator", -- [1]
					"Firelands", -- [2]
				},
				[3840] = {
					"Druid of the Fang", -- [1]
					"Wailing Caverns", -- [2]
				},
				[80708] = {
					"Iron Taskmaster", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[135366] = {
					"Blacktooth Arsonist", -- [1]
					"Tol Dagor", -- [2]
				},
				[74488] = {
					"Frozen Soul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[129373] = {
					"Dockhound Packmaster", -- [1]
					"Siege of Boralus", -- [2]
				},
				[92913] = {
					"Gorebound Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[92911] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[157356] = {
					"Extractor Thelsara", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[157612] = {
					"Eye of Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[93295] = {
					"Darkcaster Adept", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[81269] = {
					"Warden Thul'tok", -- [1]
					"Highmaul", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[130653] = {
					"Wanton Sapper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[77559] = {
					"Solar Magnifier", -- [1]
					"Skyreach", -- [2]
				},
				[77687] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[92144] = {
					"Dia Darkwhisper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135258] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[3636] = {
					"Deviate Ravager", -- [1]
					"Wailing Caverns", -- [2]
				},
				[141495] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135699] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
				},
				[88818] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[68476] = {
					"Horridon", -- [1]
					"Throne of Thunder", -- [2]
				},
				[157614] = {
					"Tentacle of Drest'agath", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[78583] = {
					"Dominator Turret", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[87411] = {
					"Workshop Guardian", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[81270] = {
					"Gorian Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[118244] = {
					"Spirit Beast", -- [1]
					"Isle of Conquest", -- [2]
				},
				[150295] = {
					"Tank Buster MK1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[85748] = {
					"Iron Mauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[74489] = {
					"Thorn Eater Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[135975] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[17455] = {
					"Bonechewer Beastmaster", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[75975] = {
					"Skyreach Overlord", -- [1]
					"Skyreach", -- [2]
				},
				[150195] = {
					"Gnome-Eating Slime", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[94832] = {
					"Gorebound Assassin", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[74490] = {
					"Boneflayer Ghoul", -- [1]
					"Razorfen Downs", -- [2]
				},
				[92527] = {
					"Dag'gorath", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[80423] = {
					"Thunderlord Beast-Tender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[27978] = {
					"Sjonnir The Ironshaper", -- [1]
					"Halls of Stone", -- [2]
				},
				[81780] = {
					"Guard Captain Thag", -- [1]
					"Highmaul", -- [2]
				},
				[91634] = {
					"Wrathguard Cleaver", -- [1]
					"Broken Shore", -- [2]
				},
				[130655] = {
					"Bobby Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[95984] = {
					"Mo'arg Brutalizer", -- [1]
					"Broken Shore", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[92146] = {
					"Gurtogg Bloodboil", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
				},
				[85241] = {
					"Night-Twisted Brute", -- [1]
					"Highmaul", -- [2]
				},
				[76154] = {
					"Skyreach Raven Whisperer", -- [1]
					"Skyreach", -- [2]
				},
				[138369] = {
					"Footbomb Hooligan", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[27977] = {
					"Krystallus", -- [1]
					"Halls of Stone", -- [2]
				},
				[88820] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[137233] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[93298] = {
					"Shadowheart Fiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135470] = {
					"Aka'ali the Conqueror", -- [1]
					"Kings' Rest", -- [2]
				},
				[130400] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[52530] = {
					"Alysrazor", -- [1]
					"Firelands", -- [2]
				},
				[151798] = {
					"Vexiona", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[127482] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[95408] = {
					"Anetheron", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[137405] = {
					"Gripping Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[41376] = {
					"Nefarian", -- [1]
					"Blackwing Descent", -- [2]
				},
				[53134] = {
					"Ancient Core Hound", -- [1]
					"Firelands", -- [2]
				},
				[86072] = {
					"Oro", -- [1]
					"Highmaul", -- [2]
				},
				[88821] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[78714] = {
					"Kargath Bladefist", -- [1]
					"Highmaul", -- [2]
				},
				[157620] = {
					"Prophet Skitra", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[12201] = {
					"Princess Theradras", -- [1]
					"Maraudon", -- [2]
				},
				[95602] = {
					"Mystic Velruun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[91636] = {
					"Ravenous Felstalker", -- [1]
					"Broken Shore", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129231] = {
					"Rixxa Fluxflame", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[44600] = {
					"Halfus Wyrmbreaker", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[41918] = {
					"Animated Bone Warrior", -- [1]
					"Blackwing Descent", -- [2]
				},
				[34793] = {
					"Catapult", -- [1]
					"Isle of Conquest", -- [2]
				},
				[158478] = {
					"Corruption Tumor", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[90485] = {
					"Felfire Artillery", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76145] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[48521] = {
					"Defias Squallshaper", -- [1]
					"Deadmines", -- [2]
				},
				[91241] = {
					"Doom Lord", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[84984] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[84399] = {
					"Vicious Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[17264] = {
					"Bonechewer Ravener", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[42764] = {
					"Pyrecraw", -- [1]
					"Blackwing Descent", -- [2]
				},
				[155094] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[53127] = {
					"Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[77692] = {
					"Kromog", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				[160182] = {
					"Void Initiate", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[41378] = {
					"Maloriak", -- [1]
					"Blackwing Descent", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[53639] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[157368] = {
					"Velinaria", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[84985] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[151739] = {
					"Ma'haat the Indomitable", -- [1]
					"Neltharion's Lair - HoA Scenario", -- [2]
				},
				[27979] = {
					"Forged Iron Trogg", -- [1]
					"Halls of Stone", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[154554] = {
					"Amathet Guardian", -- [1]
					"Halls of Origination", -- [2]
				},
				[93813] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[159416] = {
					"Spiked Tentacle", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[53631] = {
					"Cinderweb Spiderling", -- [1]
					"Firelands", -- [2]
				},
				[140447] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[78077] = {
					"Volatile Anomaly", -- [1]
					"Highmaul", -- [2]
				},
				[58812] = {
					"Hateful Essence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[154555] = {
					"Amathet Artificer", -- [1]
					"Halls of Origination", -- [2]
				},
				[42180] = {
					"Toxitron", -- [1]
					"Blackwing Descent", -- [2]
				},
				[48522] = {
					"Defias Pirate", -- [1]
					"Deadmines", -- [2]
				},
				[157333] = {
					"Darkwhisper Cultist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[60932] = {
					"ash", -- [1]
					"Isle of Conquest", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[77182] = {
					"Oregorger", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[76865] = {
					"Beastlord Darmac", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[53128] = {
					"Giant Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[93154] = {
					"Gorebound Crone", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[79208] = {
					"Blackrock Enforcer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[12222] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
				},
				[127480] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				[153022] = {
					"Snang", -- [1]
					"Horrific Vision of Orgrimmar", -- [2]
				},
				[84859] = {
					"Iron Cleaver", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[11784] = {
					"Theradrim Guardian", -- [1]
					"Maraudon", -- [2]
				},
				[93303] = {
					"Slavering Hound", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[111858] = {
					"Guardian Rurson", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[131785] = {
					"Buzzing Drone", -- [1]
					"Tol Dagor", -- [2]
				},
				[151579] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[53222] = {
					"Flamewaker Centurion", -- [1]
					"Firelands", -- [2]
				},
				[152835] = {
					"Crystalized Azerite", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[137029] = {
					"Ordnance Specialist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133379] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[129550] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
				},
				[135759] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[53087] = {
					"Right Foot", -- [1]
					"Firelands", -- [2]
				},
				[41442] = {
					"Atramedes", -- [1]
					"Blackwing Descent", -- [2]
				},
				[84860] = {
					"Iron Earthbinder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[119990] = {
					"Wolf", -- [1]
					"Isle of Conquest", -- [2]
				},
				[86611] = {
					"Mind Fungus", -- [1]
					"Highmaul", -- [2]
				},
				[54920] = {
					"Infinite Suppressor", -- [1]
					"End Time", -- [2]
				},
				[82528] = {
					"Gorian Arcanist", -- [1]
					"Highmaul", -- [2]
				},
				[87448] = {
					"Ironworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[76307] = {
					"Grand Defense Construct", -- [1]
					"Skyreach", -- [2]
				},
				[134602] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[151658] = {
					"Strider Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[87520] = {
					"Animated Slag", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[45261] = {
					"Twilight Shadow Knight", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[150253] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[70276] = {
					"No'ku Stormsayer", -- [1]
					"Throne of Thunder", -- [2]
				},
				[10381] = {
					"Ravaged Cadaver", -- [1]
					"Stratholme", -- [2]
				},
				[152833] = {
					"Azerite Giant", -- [1]
					"The Maelstrom - Heart of Azeroth", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[162238] = {
					"Darkwhisper Cultist", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[81114] = {
					"Gronnling Laborer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[158056] = {
					"Rat", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[80400] = {
					"Iron Assembly Warden", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
				},
				[61412] = {
					"Dark Shaman Koranthal", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[95652] = {
					"Grand Corruptor U'rogg", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[144160] = {
					"Chopper Redhook", -- [1]
					"Siege of Boralus", -- [2]
				},
				[92039] = {
					"Bleeding Grunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[129640] = {
					"Snarling Dockhound", -- [1]
					"Siege of Boralus", -- [2]
				},
				[158452] = {
					"Mindtwist Tendril", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[159425] = {
					"Occult Shadowmender", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[130024] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
				},
				[137969] = {
					"Interment Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[12203] = {
					"Landslide", -- [1]
					"Maraudon", -- [2]
				},
				[48415] = {
					"Twilight Spitecaller", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[42767] = {
					"Ivoroc", -- [1]
					"Blackwing Descent", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[78932] = {
					"Driving Gale-Caller", -- [1]
					"Skyreach", -- [2]
				},
				[92330] = {
					"Soul of Socrethar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[10436] = {
					"Baroness Anastari", -- [1]
					"Stratholme", -- [2]
				},
				[58807] = {
					"Vestige of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[69916] = {
					"Gurubashi Berserker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[53642] = {
					"Cinderweb Spinner", -- [1]
					"Firelands", -- [2]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[130025] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[78978] = {
					"Darkshard Gnasher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[10412] = {
					"Crypt Crawler", -- [1]
					"Stratholme", -- [2]
				},
				[13599] = {
					"Stolid Snapjaw", -- [1]
					"Maraudon", -- [2]
				},
				[13141] = {
					"Deeprot Stomper", -- [1]
					"Maraudon", -- [2]
				},
				[61657] = {
					"Adolescent Flame Hound", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[69639] = {
					"Humming Crystal", -- [1]
					"Throne of Thunder", -- [2]
				},
				[8477] = {
					"Skeletal Servant", -- [1]
					"Stratholme", -- [2]
				},
				[81806] = {
					"Gorian Royal Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[74583] = {
					"Festering Spiderling", -- [1]
					"Razorfen Downs", -- [2]
				},
				[76292] = {
					"Skyreach Shield Construct", -- [1]
					"Skyreach", -- [2]
				},
				[7343] = {
					"Splinterbone Skeleton", -- [1]
					"Razorfen Downs", -- [2]
				},
				[56713] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[86275] = {
					"Gorian Enforcer", -- [1]
					"Highmaul", -- [2]
				},
				[130026] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[93308] = {
					"Portal Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[44687] = {
					"Proto-Behemoth", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[80048] = {
					"Vul'gor", -- [1]
					"Highmaul", -- [2]
				},
				[42768] = {
					"Maimgor", -- [1]
					"Blackwing Descent", -- [2]
				},
				[17281] = {
					"Bonechewer Ripper", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[102392] = {
					"Resonance Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[151754] = {
					"Void Haunt", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
				},
				[67977] = {
					"Tortos", -- [1]
					"Throne of Thunder", -- [2]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[150251] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[12236] = {
					"Lord Vyletongue", -- [1]
					"Maraudon", -- [2]
				},
				[10876] = {
					"Undead Scarab", -- [1]
					"Stratholme", -- [2]
				},
				[130027] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[151755] = {
					"Shadehound", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[27981] = {
					"Malformed Ooze", -- [1]
					"Halls of Stone", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[91646] = {
					"Grim Collaborator", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[56658] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[27964] = {
					"Dark Rune Scholar", -- [1]
					"Halls of Stone", -- [2]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
				},
				[8896] = {
					"Shadowforge Peasant", -- [1]
					"Blackrock Depths", -- [2]
				},
				[46251] = {
					"Riverpaw Looter", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Isle of Conquest", -- [2]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
				},
				[12221] = {
					"Noxious Slime", -- [1]
					"Maraudon", -- [2]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[76806] = {
					"Heart of the Mountain", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
				},
				[54923] = {
					"Infinite Warden", -- [1]
					"End Time", -- [2]
				},
				[150222] = {
					"Gunker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[10437] = {
					"Nerub'enkan", -- [1]
					"Stratholme", -- [2]
				},
				[65414] = {
					"Ethereal Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[13323] = {
					"Subterranean Diemetradon", -- [1]
					"Maraudon", -- [2]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[27961] = {
					"Dark Rune Worker", -- [1]
					"Halls of Stone", -- [2]
				},
				[45264] = {
					"Twilight Crossfire", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[53141] = {
					"Molten Surger", -- [1]
					"Firelands", -- [2]
				},
				[58198] = {
					"Shado-Pan Disciple", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[43537] = {
					"Stonecore Earthshaper", -- [1]
					"The Stonecore", -- [2]
				},
				[26685] = {
					"Massive Jormungar", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[95614] = {
					"Binder Eloah", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[91648] = {
					"Somber Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[39960] = {
					"Deep Murloc Drudge", -- [1]
					"Throne of the Tides", -- [2]
				},
				[134616] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[129599] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
				},
				[56395] = {
					"Shado-Pan Novice", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[27985] = {
					"Iron Golem Custodian", -- [1]
					"Halls of Stone", -- [2]
				},
				[26687] = {
					"Gortok Palehoof", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[134617] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[27960] = {
					"Dark Rune Warrior", -- [1]
					"Halls of Stone", -- [2]
				},
				[158158] = {
					"Forge-Guard Hurrul", -- [1]
					"Horrific Vision of Stormwind", -- [2]
				},
				[36565] = {
					"Apothecary Baxter", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[162764] = {
					"Twisted Appendage", -- [1]
					"Waycrest Manor", -- [2]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
				},
				[136665] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[126832] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
				},
				[90114] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[137487] = {
					"Skeletal Hunting Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[42333] = {
					"High Priestess Azil", -- [1]
					"The Stonecore", -- [2]
				},
				[45265] = {
					"Twilight Soul Blade", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[61705] = {
					"Corrupted Flamecaller", -- [1]
					"Ragefire Chasm", -- [2]
				},
				[91681] = {
					"Ravenous Felstalker", -- [1]
					"Broken Shore", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56719] = {
					"Sha of Violence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[76809] = {
					"Foreman Feldspar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[56473] = {
					"Flying Snow", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[27982] = {
					"Forged Iron Dwarf", -- [1]
					"Halls of Stone", -- [2]
				},
				[91522] = {
					"Protector Bajunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[157709] = {
					"Dreliana", -- [1]
					"Blackwing Descent Scenario", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[157137] = {
					"Terror Tendril", -- [1]
					"Halls of Origination", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
				},
				[154727] = {
					"Sun Prophet Tenhamen", -- [1]
					"Halls of Origination", -- [2]
				},
				[155680] = {
					"Deephive Summoner", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[155930] = {
					"Deephive Chosen", -- [1]
					"Mogu'shan Scenario", -- [2]
				},
				[159767] = {
					"Sanguimar", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[52558] = {
					"Lord Rhyolith", -- [1]
					"Firelands", -- [2]
				},
				[18131] = {
					"Nether Ray", -- [1]
					"Isle of Conquest", -- [2]
				},
				[159312] = {
					"Living Blood", -- [1]
					"Ny'alotha, the Waking City", -- [2]
				},
				[76810] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[158171] = {
					"Faceless Destroyer", -- [1]
					"Halls of Origination", -- [2]
				},
				[157483] = {
					"Ysedra the Darkener", -- [1]
					"Halls of Origination", -- [2]
				},
				[161815] = {
					"K'thir Voidcaller", -- [1]
					"Chamber of Heart - Scenario", -- [2]
				},
				[144232] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.8400000035762787, -- [4]
			},
			["captured_spells"] = {
				[164815] = {
					["source"] = "Atonathiu-Azshara",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268604] = {
					["source"] = "Magotovca-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215479] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115192] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214968] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183752] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[275773] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[255909] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[313643] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[315179] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Razorlich-Mal'Ganis",
					["npcID"] = 0,
				},
				[85256] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[285500] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[153561] = {
					["source"] = "Kalizek-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[31821] = {
					["source"] = "Leshar-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123254] = {
					["source"] = "Joseywalez-Nazjatar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264520] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Maddened Survivalist",
					["npcID"] = 131850,
				},
				[275779] = {
					["source"] = "Datbal-Nordrassil",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280385] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115834] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[271174] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Pallid Gorger",
					["npcID"] = 137830,
				},
				[315697] = {
					["source"] = "Zara'thik Hive-Guard",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162886,
				},
				[118521] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59181,
				},
				[6552] = {
					["source"] = "Pepeluka-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20243] = {
					["source"] = "Badicus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264525] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Maddened Survivalist",
					["npcID"] = 131850,
				},
				[162264] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221883] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[194249] = {
					["source"] = "Shirayukî-Nazjatar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190411] = {
					["source"] = "Døzzer-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[228537] = {
					["source"] = "Khaotíc-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[45524] = {
					["source"] = "Frostiie-Icecrown",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[57934] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[124280] = {
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[255661] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Killedan-Mal'Ganis",
					["npcID"] = 0,
				},
				[118779] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221886] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[313148] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203975] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ledon-Mal'Ganis",
					["npcID"] = 0,
				},
				[273232] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272721] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1719] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ariastrasza-Illidan",
					["npcID"] = 0,
				},
				[280398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Mechx",
					["npcID"] = 0,
				},
				[288075] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Wfbutler-Tanaris",
					["npcID"] = 0,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Paradoxsis",
					["npcID"] = 0,
				},
				[313663] = {
					["source"] = "Yomatéagalán-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302917] = {
					["source"] = "Turaaf-Sargeras",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315711] = {
					["source"] = "Vil'thik Swarmkeeper",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153267,
				},
				[235450] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gølm-BlackDragonflight",
					["npcID"] = 0,
				},
				[23922] = {
					["source"] = "Badicus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[313666] = {
					["source"] = "Harrier Nir'verash",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160868,
				},
				[273238] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[204490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[264027] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Heartsbane Runeweaver",
					["npcID"] = 131677,
				},
				[228287] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[278869] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232893] = {
					["source"] = "Zåkiyå-Alexstrasza",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267611] = {
					["source"] = "Utheror-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313669] = {
					["source"] = "Hive-Guard Naz'ruzek",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160826,
				},
				[271194] = {
					["source"] = "Chopsui-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116095] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["encounterID"] = 2113,
				},
				[268125] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[295248] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[305484] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280409] = {
					["source"] = "Lidraena-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303438] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[316744] = {
					["source"] = "Healzcookie-Dalaran",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5225] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287063] = {
					["source"] = "Chopsui-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198097] = {
					["source"] = "Zaleara-Stormrage",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[7328] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[280412] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Tryick-BleedingHollow",
					["npcID"] = 0,
				},
				[7384] = {
					["source"] = "Executiex-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279902] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264038] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Coven Thornshaper",
					["npcID"] = 131666,
				},
				[226757] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288091] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[307026] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Then-Kargath",
					["npcID"] = 0,
				},
				[213708] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298839] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210126] = {
					["source"] = "Cutierawr",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295258] = {
					["source"] = "Atonathiu-Azshara",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201427] = {
					["source"] = "Kargorath-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Tonkka-Magtheridon",
					["npcID"] = 0,
				},
				[201939] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[204242] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[317265] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[264556] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thornguard",
					["npcID"] = 131858,
				},
				[24275] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[251836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Threeyedrave",
					["npcID"] = 0,
				},
				[205523] = {
					["source"] = "Niz-Skullcrusher",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[185565] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[299869] = {
					["source"] = "Zulpally-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300893] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[123904] = {
					["source"] = "Chopsui-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1943] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[185311] = {
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[210643] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[251839] = {
					["source"] = "Baralion-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[156910] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[273264] = {
					["source"] = "Kocharka-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298852] = {
					["source"] = "Geonus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[498] = {
					["source"] = "Leshar-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[82326] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[298855] = {
					["source"] = "Geonus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280433] = {
					["source"] = "Zaleara-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193759] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Ralily",
					["npcID"] = 0,
				},
				[187874] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[255937] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[192225] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Fido-Sargeras",
					["npcID"] = 0,
				},
				[48792] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202461] = {
					["source"] = "Atonathiu-Azshara",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115080] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["encounterID"] = 2113,
				},
				[286581] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6201] = {
					["source"] = "Zombore-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[147193] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188389] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2098] = {
					["source"] = "Hoök",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187878] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[252359] = {
					["source"] = "Geonus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[204255] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[298357] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286587] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[273794] = {
					["source"] = "Thartuk",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[546] = {
					["source"] = "Dârkshock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256455] = {
					["source"] = "Noobl",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260805] = {
					["type"] = "BUFF",
					["source"] = "Sister Solena",
					["npcID"] = 131824,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[272260] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300919] = {
					["source"] = "Tacticaltree-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Deerrunner-Zul'jin",
					["npcID"] = 0,
				},
				[315761] = {
					["source"] = "Kri'vin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161672,
				},
				[33697] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[235219] = {
					["source"] = "Áraujo-Goldrinn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260551] = {
					["npcID"] = 131667,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Soulbound Goliath",
					["encounterID"] = 2114,
				},
				[315763] = {
					["source"] = "Emowrists-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[200166] = {
					["source"] = "Khaotíc-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[212704] = {
					["source"] = "Jmvõ-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Íñsáiýáñ-Eredar",
					["npcID"] = 0,
				},
				[256459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Imatrapxo-Stormrage",
					["npcID"] = 0,
				},
				[11327] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[589] = {
					["source"] = "Shirayukî-Nazjatar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276876] = {
					["source"] = "Kunchong Destroyer",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153278,
				},
				[273294] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16953] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[117516] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59700,
				},
				[210660] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190446] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199658] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273298] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[34914] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273299] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[106898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Itheathrubas",
					["npcID"] = 0,
				},
				[272276] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272790] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124682] = {
					["source"] = "Rokgor-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316801] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[279956] = {
					["source"] = "Havynn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210152] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275351] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[275863] = {
					["source"] = "Lidraena-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231390] = {
					["source"] = "Jmvõ-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295310] = {
					["source"] = "Havynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288146] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alsolina-BleedingHollow",
					["npcID"] = 0,
				},
				[276888] = {
					["source"] = "Vil'thik Amber-Shaper",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 157757,
				},
				[200174] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[642] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[269214] = {
					["source"] = "Zulpally-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287638] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287639] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315787] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[278431] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Devouring Maggot",
					["npcID"] = 142587,
				},
				[132627] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Poram",
					["npcID"] = 0,
				},
				[267685] = {
					["source"] = "Tacticaltree-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Partyanimoo",
					["npcID"] = 0,
				},
				[53595] = {
					["source"] = "Datbal-Nordrassil",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[155145] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["encounterID"] = 2115,
				},
				[190456] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79140] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["encounterID"] = 2114,
				},
				[288158] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Paradoxsis",
					["npcID"] = 0,
				},
				[124430] = {
					["source"] = "Shadowgames-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204018] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312211] = {
					["source"] = "Kri'vin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161672,
				},
				[265642] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Diseased Mastiff",
					["npcID"] = 135234,
				},
				[135700] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268202] = {
					["npcID"] = 135552,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Deathtouched Slaver",
					["encounterID"] = 2117,
				},
				[312213] = {
					["source"] = "Kunchong Destroyer",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153278,
				},
				[192249] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295838] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264110] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Marked Sister",
					["npcID"] = 131818,
				},
				[703] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[61336] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20473] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[274346] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[295840] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193530] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204021] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[316823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[184575] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[295842] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ledon-Mal'Ganis",
					["npcID"] = 0,
				},
				[16827] = {
					["source"] = "Knave",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 69946,
				},
				[278444] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Devouring Maggot",
					["npcID"] = 134024,
				},
				[176644] = {
					["source"] = "Dualix-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316826] = {
					["source"] = "Twisted Appendage",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 162764,
				},
				[740] = {
					["source"] = "Nikzul-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256735] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57755] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[310690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[278962] = {
					["source"] = "Lidraena-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269239] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[139546] = {
					["source"] = "Hoök",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275382] = {
					["source"] = "Ember Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140787,
				},
				[316835] = {
					["source"] = "Twisted Appendage",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162764,
				},
				[300971] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Nicole-BleedingHollow",
					["npcID"] = 0,
				},
				[317859] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Imatrapxo-Stormrage",
					["npcID"] = 0,
				},
				[277943] = {
					["source"] = "Yomatéagalán-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295855] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Devouring Maggot",
					["npcID"] = 134024,
				},
				[295856] = {
					["source"] = "Guardian of Azeroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 152396,
				},
				[256739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Meleehunter-AeriePeak",
					["npcID"] = 0,
				},
				[193538] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[47585] = {
					["source"] = "Shadowgames-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[213241] = {
					["source"] = "Sanamy-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280506] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Unknown",
					["npcID"] = 144324,
				},
				[783] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Xoah-Mal'Ganis",
					["npcID"] = 0,
				},
				[155158] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193796] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318378] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[213243] = {
					["source"] = "Zåkiyå-Alexstrasza",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[85288] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[158486] = {
					["source"] = "Latefordinnr",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278463] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Maddened Survivalist",
					["npcID"] = 131850,
				},
				[8690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lidokane-AeriePeak",
					["npcID"] = 0,
				},
				[115098] = {
					["source"] = "Havynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190984] = {
					["source"] = "Atonathiu-Azshara",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118297] = {
					["source"] = "Primal Fire Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61029,
				},
				[319919] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Chiskills-Thrall",
					["npcID"] = 0,
				},
				[312243] = {
					["source"] = "Vil'thik Amber-Mender",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 153255,
				},
				[108446] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Unknown",
					["npcID"] = 58965,
				},
				[278468] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304056] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[268234] = {
					["npcID"] = 136541,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bile Oozeling",
					["encounterID"] = 2115,
				},
				[260072] = {
					["source"] = "Pa'kura Priest",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131834,
				},
				[277960] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300989] = {
					["source"] = "Zahmerdurid",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264655] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Infected Peasant",
					["npcID"] = 134041,
				},
				[236021] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298431] = {
					["source"] = "Rjeezy-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53600] = {
					["source"] = "Datbal-Nordrassil",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278474] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Coven Thornshaper",
					["npcID"] = 131666,
				},
				[22842] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318391] = {
					["source"] = "Great Worm From Beyond",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152550,
				},
				[257260] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thornguard",
					["npcID"] = 131858,
				},
				[106785] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[853] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[297412] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[157982] = {
					["source"] = "Nikzul-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264150] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thornguard",
					["npcID"] = 131858,
				},
				[268756] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[266198] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["encounterID"] = 2117,
				},
				[295368] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[871] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Tatteredshun-Illidan",
					["npcID"] = 0,
				},
				[314304] = {
					["source"] = "Grand Empress Shek'zara",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154638,
				},
				[264153] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Devouring Maggot",
					["npcID"] = 134024,
				},
				[263642] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[77489] = {
					["source"] = "Ðåshieß",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[4987] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[264667] = {
					["source"] = "Wolf",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129124,
				},
				[314307] = {
					["source"] = "Grand Empress Shek'zara",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 154638,
				},
				[295373] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[30455] = {
					["source"] = "Áraujo-Goldrinn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[312262] = {
					["source"] = "Vil'thik Amber-Shaper",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 157757,
				},
				[278999] = {
					["source"] = "Badicus",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303564] = {
					["source"] = "Mìnìgun",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Enfuego-Kargath",
					["npcID"] = 0,
				},
				[263648] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[274395] = {
					["source"] = "Zulpally-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107428] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[24858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bearskin-Staghelm",
					["npcID"] = 0,
				},
				[295378] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[269279] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[116768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[303568] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314315] = {
					["source"] = "Zara'thik Swarmguard",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161370,
				},
				[314316] = {
					["source"] = "Zara'thik Swarmguard",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161370,
				},
				[303570] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297941] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cuteoverlord-Illidan",
					["npcID"] = 0,
				},
				[260852] = {
					["npcID"] = 131824,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Solena",
					["encounterID"] = 2113,
				},
				[132403] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271843] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[216331] = {
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2114,
				},
				[101545] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[314321] = {
					["source"] = "Zara'thik Ambershaper",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161371,
				},
				[203538] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Warsnark-Dalaran",
					["npcID"] = 0,
				},
				[228358] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268776] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Amani Battle Bear",
					["npcID"] = 130257,
				},
				[275429] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Seddrick-Icecrown",
					["npcID"] = 0,
				},
				[178207] = {
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2115,
				},
				[203539] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ecksy-Stormreaver",
					["npcID"] = 0,
				},
				[203795] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[188443] = {
					["source"] = "Regasan-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[101546] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[304603] = {
					["source"] = "Fiendfinder",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303580] = {
					["source"] = "Hoök",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203285] = {
					["source"] = "Isaaku-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[250878] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[157228] = {
					["source"] = "Newt-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22812] = {
					["source"] = "Newt-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Killedan-Mal'Ganis",
					["npcID"] = 0,
				},
				[203286] = {
					["source"] = "Magotovca-Quel'Thalas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304606] = {
					["source"] = "Joseywalez-Nazjatar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266225] = {
					["npcID"] = 131864,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gorak Tul",
					["encounterID"] = 2117,
				},
				[308189] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alfs",
					["npcID"] = 0,
				},
				[31224] = {
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2116,
				},
				[308190] = {
					["source"] = "Harrier Nir'verash",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160868,
				},
				[100780] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[44457] = {
					["source"] = "Magotovca-Quel'Thalas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[315356] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162001,
				},
				[264693] = {
					["npcID"] = 131863,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Raal the Gluttonous",
					["encounterID"] = 2115,
				},
				[314333] = {
					["source"] = "Grand Empress Shek'zara",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154638,
				},
				[313310] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Vendarius-Stormrage",
					["npcID"] = 0,
				},
				[264694] = {
					["npcID"] = 131863,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Raal the Gluttonous",
					["encounterID"] = 2115,
				},
				[145205] = {
					["source"] = "Nikzul-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304612] = {
					["source"] = "Joseywalez-Nazjatar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201754] = {
					["source"] = "Knave",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 69946,
				},
				[111400] = {
					["source"] = "Zombore-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274420] = {
					["source"] = "Zombore-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236298] = {
					["source"] = "Señorclean-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8042] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[32216] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279028] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236299] = {
					["source"] = "Señorclean-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279029] = {
					["source"] = "Regasan-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279541] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1022] = {
					["source"] = "Thartuk",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188196] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274426] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108843] = {
					["source"] = "Magotovca-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80313] = {
					["source"] = "Nomura-LaughingSkull",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279033] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1044] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[193315] = {
					["source"] = "Hoök",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[100784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[274431] = {
					["source"] = "Lidraena-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194084] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[254471] = {
					["source"] = "Sorwat-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[209693] = {
					["source"] = "Kargorath-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[317420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Appleqt-Illidan",
					["npcID"] = 0,
				},
				[8676] = {
					["source"] = "Rigityrogued-Exodar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[184362] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299510] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[43308] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sendesisina-Thrall",
					["npcID"] = 0,
				},
				[264712] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2115,
				},
				[305141] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 156289,
				},
				[289277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[148541] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279555] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272903] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[254474] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ventorkail-Illidan",
					["npcID"] = 0,
				},
				[148542] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116011] = {
					["source"] = "Kalizek-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[93622] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77758] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[305147] = {
					["source"] = "Shadow-Pan Munitions",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 156300,
				},
				[290819] = {
					["source"] = "Firion-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[305149] = {
					["source"] = "Zaleara-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271374] = {
					["source"] = "Daignix-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[296962] = {
					["source"] = "Rÿvlan-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48107] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266258] = {
					["npcID"] = 133435,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Drust Slaver Summoning Portal",
					["encounterID"] = 2117,
				},
				[2383] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Deerrunner-Zul'jin",
					["npcID"] = 0,
				},
				[273935] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195627] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292359] = {
					["source"] = "Zahmerdurid",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[178740] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[292360] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Konar-Norgannon",
					["npcID"] = 0,
				},
				[305154] = {
					["source"] = "Zaleara-Stormrage",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292361] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[292362] = {
					["source"] = "Organicheals",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303621] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292363] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xoah-Mal'Ganis",
					["npcID"] = 0,
				},
				[268311] = {
					["source"] = "Cute-Baelgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116014] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292364] = {
					["source"] = "Baralion-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195630] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204330] = {
					["source"] = "Regasan-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48108] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296971] = {
					["source"] = "Rÿvlan-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33907] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Broll Bearmantle",
					["npcID"] = 142294,
				},
				[119085] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Chiskills-Thrall",
					["npcID"] = 0,
				},
				[308742] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[203819] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[204331] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[204843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[236060] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246807] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alsolina-BleedingHollow",
					["npcID"] = 0,
				},
				[275481] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77762] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316422] = {
					["source"] = "Tuupac-Wildhammer",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260881] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xarazona-Zul'jin",
					["npcID"] = 0,
				},
				[265760] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Matron Bryndle",
					["npcID"] = 135329,
				},
				[265761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Matron Bryndle",
					["npcID"] = 135329,
				},
				[48045] = {
					["source"] = "Joseywalez-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[311308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Skylinx-Thrall",
					["npcID"] = 0,
				},
				[285721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Milkmedäddy-Zul'jin",
					["npcID"] = 0,
				},
				[2643] = {
					["source"] = "Jmvõ-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5308] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1330] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[294935] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gølm-BlackDragonflight",
					["npcID"] = 0,
				},
				[287771] = {
					["source"] = "Palden-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77764] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Itheathrubas",
					["npcID"] = 0,
				},
				[108853] = {
					["source"] = "Kalizek-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[154953] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107574] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298009] = {
					["source"] = "Jessekan",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[209967] = {
					["source"] = "Unknown",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 105419,
				},
				[272934] = {
					["source"] = "Isaaku-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[155722] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288800] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263725] = {
					["source"] = "Tuupac-Wildhammer",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191034] = {
					["source"] = "Atonathiu-Azshara",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278567] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Matron Bryndle",
					["npcID"] = 135329,
				},
				[204596] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[2823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Paradoxsis",
					["npcID"] = 0,
				},
				[289315] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[18562] = {
					["source"] = "Ziv-Skullcrusher",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272940] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Then-Kargath",
					["npcID"] = 0,
				},
				[160331] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Snicklefrizz-Kel'Thuzad",
					["npcID"] = 0,
				},
				[267824] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Soul Essence",
					["npcID"] = 135240,
				},
				[199736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Craak",
					["npcID"] = 0,
				},
				[204598] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[165961] = {
					["source"] = "Zulábár-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[307742] = {
					["source"] = "Vil'thik Amber-Mender",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 157724,
				},
				[273455] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Pâtches-Zul'jin",
					["npcID"] = 0,
				},
				[312350] = {
					["source"] = "Harrier Nir'verash",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160868,
				},
				[268852] = {
					["source"] = "Eviaeri",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2963] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Deianeirys",
					["npcID"] = 0,
				},
				[195901] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[2983] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[190784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[287790] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Deerrunner-Zul'jin",
					["npcID"] = 0,
				},
				[201787] = {
					["source"] = "Havynn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268856] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[287280] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[218164] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[264764] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[115767] = {
					["source"] = "Badicus",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176458] = {
					["source"] = "Blacksmithing Follower - Alliance",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 88403,
				},
				[118455] = {
					["source"] = "Jmvõ-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294966] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[264774] = {
					["source"] = "Señorclean-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[235313] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Abrua",
					["npcID"] = 0,
				},
				[1604] = {
					["source"] = "Thundermaw",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 156778,
				},
				[59628] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[293946] = {
					["source"] = "Lemmie",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[225080] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44212] = {
					["source"] = "Kaysadeeya",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6572] = {
					["source"] = "Badicus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273992] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273481] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[114108] = {
					["source"] = "Nikzul-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272970] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287811] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212800] = {
					["source"] = "Khaotíc-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268877] = {
					["source"] = "Jmvõ-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205636] = {
					["source"] = "Atonathiu-Azshara",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51505] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20707] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Nemesîs-Malfurion",
					["npcID"] = 0,
				},
				[208963] = {
					["source"] = "Skyfury Totem",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 105427,
				},
				[211522] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[207684] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[296003] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[6788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Mechx",
					["npcID"] = 0,
				},
				[193356] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199753] = {
					["source"] = "Rigityrogued-Exodar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[119611] = {
					["source"] = "Rokgor-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206662] = {
					["source"] = "Evérwyn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17253] = {
					["source"] = "Wolf",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129124,
				},
				[193357] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280654] = {
					["source"] = "Señorclean-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313918] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Dhonrue-Thrall",
					["npcID"] = 0,
				},
				[6940] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[193358] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203849] = {
					["source"] = "Kocharka-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204361] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196941] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193359] = {
					["source"] = "Lidraena-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297034] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Latalok",
					["npcID"] = 0,
				},
				[116670] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[297035] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Dhonrue-Thrall",
					["npcID"] = 0,
				},
				[1766] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[40120] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xoah-Mal'Ganis",
					["npcID"] = 0,
				},
				[198222] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Mechx",
					["npcID"] = 0,
				},
				[188499] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1784] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[272986] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[212552] = {
					["source"] = "Martalock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297039] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Irønsight",
					["npcID"] = 0,
				},
				[272987] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[115008] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Chiskills-Thrall",
					["npcID"] = 0,
				},
				[205644] = {
					["source"] = "Unknown",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 103822,
				},
				[78674] = {
					["source"] = "Newt-Anvilmar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5221] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1822] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[16870] = {
					["source"] = "Nikzul-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288343] = {
					["source"] = "Shadowgames-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313932] = {
					["source"] = "Infused Amber Ooze",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160930,
				},
				[252216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Vendarius-Stormrage",
					["npcID"] = 0,
				},
				[316492] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1850] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xoah-Mal'Ganis",
					["npcID"] = 0,
				},
				[116] = {
					["source"] = "Áraujo-Goldrinn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1856] = {
					["source"] = "Rigityrogued-Exodar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[205648] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31935] = {
					["source"] = "Datbal-Nordrassil",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268904] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312915] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Appleqt-Illidan",
					["npcID"] = 0,
				},
				[33917] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48438] = {
					["source"] = "Nikzul-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280165] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204883] = {
					["source"] = "Ðåshieß",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[256314] = {
					["source"] = "Docile Porcupine",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 156759,
				},
				[221771] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[156779] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cyzergy-Garona",
					["npcID"] = 0,
				},
				[192090] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[223819] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[211793] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11366] = {
					["source"] = "Kalizek-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[152175] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[273006] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278124] = {
					["source"] = "Deyclapper-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109128] = {
					["source"] = "Pepeluka-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1966] = {
					["source"] = "Lostaroll-Kil'jaeden",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312413] = {
					["source"] = "Zara'thik Hive-Guard",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162886,
				},
				[261947] = {
					["source"] = "Havynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[305249] = {
					["source"] = "Joseywalez-Nazjatar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287338] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317020] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Deerrunner-Zul'jin",
					["npcID"] = 0,
				},
				[246851] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[134522] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Honorahbull",
					["npcID"] = 0,
				},
				[312415] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 157947,
				},
				[49143] = {
					["source"] = "Frostiie-Icecrown",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[53365] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281711] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246852] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280177] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19750] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[265337] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gorestained Piglet",
					["npcID"] = 135048,
				},
				[264314] = {
					["source"] = "Rabbids-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261438] = {
					["npcID"] = 131527,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lord Waycrest",
					["encounterID"] = 2116,
				},
				[8092] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[261439] = {
					["npcID"] = 131527,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lord Waycrest",
					["encounterID"] = 2116,
				},
				[292463] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[263806] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288882] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[261440] = {
					["npcID"] = 131527,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lord Waycrest",
					["encounterID"] = 2116,
				},
				[300141] = {
					["source"] = "Horrorscope-Drakkari",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[284277] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45242] = {
					["source"] = "Shirayukî-Nazjatar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280184] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[130] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Abrua",
					["npcID"] = 0,
				},
				[293491] = {
					["source"] = "Havynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281721] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[258883] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300145] = {
					["source"] = "Palden-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280187] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[133] = {
					["source"] = "Kalizek-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316522] = {
					["source"] = "Rÿvlan-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109132] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[267907] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2114,
				},
				[114250] = {
					["source"] = "Daignix-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281215] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Fløww-Arthas",
					["npcID"] = 0,
				},
				[106830] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278145] = {
					["source"] = "Leshar-Frostmane",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[216411] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265352] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Blight Toad",
					["npcID"] = 135052,
				},
				[278147] = {
					["source"] = "Leshar-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108238] = {
					["source"] = "Newt-Anvilmar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Feardadeath-Thrall",
					["npcID"] = 0,
				},
				[229206] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316530] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261447] = {
					["npcID"] = 131527,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lord Waycrest",
					["encounterID"] = 2116,
				},
				[34433] = {
					["source"] = "Shadowgames-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[55095] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270987] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Disciple of Nalorakk",
					["npcID"] = 120949,
				},
				[194153] = {
					["source"] = "Atonathiu-Azshara",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268429] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[90328] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Unknown",
					["npcID"] = 113201,
				},
				[217694] = {
					["source"] = "Magotovca-Quel'Thalas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280200] = {
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2116,
				},
				[105809] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278155] = {
					["source"] = "Tuupac-Wildhammer",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[247121] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280204] = {
					["source"] = "Palden-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265364] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Blight Toad",
					["npcID"] = 135052,
				},
				[280205] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kÿlé-Stormrage",
					["npcID"] = 0,
				},
				[208997] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[13750] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295047] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126664] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190319] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[182387] = {
					["source"] = "Regasan-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45181] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195181] = {
					["source"] = "Riverknight",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265368] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bewitched Captain",
					["npcID"] = 131587,
				},
				[202602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cyruk",
					["npcID"] = 0,
				},
				[155777] = {
					["source"] = "Nikzul-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294027] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[196718] = {
					["source"] = "Khaotíc-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[265371] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bewitched Captain",
					["npcID"] = 131587,
				},
				[115151] = {
					["source"] = "Rokgor-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268954] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[265372] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Enthralled Guard",
					["npcID"] = 131585,
				},
				[93402] = {
					["source"] = "Atonathiu-Azshara",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268956] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[299662] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Hitokuijinsh-Stormreaver",
					["npcID"] = 0,
				},
				[300174] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80353] = {
					["source"] = "Isaaku-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264352] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gølm-BlackDragonflight",
					["npcID"] = 0,
				},
				[281240] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gølm-BlackDragonflight",
					["npcID"] = 0,
				},
				[35395] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[299664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Solaryn-Illidan",
					["npcID"] = 0,
				},
				[317065] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cargoshortz-Dalaran",
					["npcID"] = 0,
				},
				[80354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Dhonrue-Thrall",
					["npcID"] = 0,
				},
				[297108] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5302] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279709] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300691] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113746] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[209261] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[300693] = {
					["source"] = "Rjeezy-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53563] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[138130] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Earth Spirit",
					["npcID"] = 69792,
				},
				[8921] = {
					["source"] = "Atonathiu-Azshara",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[312467] = {
					["source"] = "Zara'thik Soldier",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 157793,
				},
				[274598] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279204] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[234084] = {
					["source"] = "Newt-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297116] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sendesisina-Thrall",
					["npcID"] = 0,
				},
				[44544] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297117] = {
					["source"] = "Bleddynt-Arthas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297118] = {
					["source"] = "Rosè-Arthas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22568] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265391] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Banquet Steward",
					["npcID"] = 131586,
				},
				[201846] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[84963] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[22888] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317592] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[217200] = {
					["source"] = "Mìnìgun",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260699] = {
					["npcID"] = 131824,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Solena",
					["encounterID"] = 2113,
				},
				[258908] = {
					["source"] = "Zara'thik Skirmisher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 158052,
				},
				[260700] = {
					["npcID"] = 131823,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Malady",
					["encounterID"] = 2113,
				},
				[317596] = {
					["source"] = "Thartuk",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[55164] = {
					["source"] = "Zåkiyå-Alexstrasza",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2948] = {
					["source"] = "Kalizek-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285357] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Nov",
					["npcID"] = 0,
				},
				[260701] = {
					["npcID"] = 131825,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Briar",
					["encounterID"] = 2113,
				},
				[57723] = {
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2115,
				},
				[303044] = {
					["source"] = "Limelife",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268907] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Dathroar",
					["npcID"] = 0,
				},
				[123986] = {
					["source"] = "Chopsui-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[221885] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Colethebig",
					["npcID"] = 0,
				},
				[297995] = {
					["source"] = "Buddhafet",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290608] = {
					["source"] = "Soljani",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199804] = {
					["source"] = "Hoök",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198013] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297993] = {
					["source"] = "Tenzinlane",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298848] = {
					["source"] = "Geonus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290468] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Killedan-Mal'Ganis",
					["npcID"] = 0,
				},
				[53390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xenzs",
					["npcID"] = 0,
				},
				[260703] = {
					["npcID"] = 131823,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Malady",
					["encounterID"] = 2113,
				},
				[148540] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317602] = {
					["source"] = "Golden Lotus Warrior",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 162836,
				},
				[132157] = {
					["source"] = "Ðåshieß",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[3166] = {
					["source"] = "Ánathéma",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58875] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198589] = {
					["source"] = "Ollodin-Barthilas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[85222] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[293032] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[205691] = {
					["source"] = "Kocharka-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267288] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Earthen Ring Shaman",
					["npcID"] = 135671,
				},
				[55900] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Fozzey",
					["npcID"] = 0,
				},
				[157331] = {
					["source"] = "Primal Storm Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 77942,
				},
				[79849] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Unknown",
					["npcID"] = 47248,
				},
				[55899] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Fozzey",
					["npcID"] = 0,
				},
				[191837] = {
					["source"] = "Rokgor-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259161] = {
					["source"] = "Géo-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195457] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Then-Kargath",
					["npcID"] = 0,
				},
				[300144] = {
					["source"] = "Horrorscope-Drakkari",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57724] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Ledon-Mal'Ganis",
					["npcID"] = 0,
				},
				[61882] = {
					["source"] = "Regasan-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[242975] = {
					["source"] = "Horrorscope-Drakkari",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[306715] = {
					["source"] = "Evérwyn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198121] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12472] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101643] = {
					["source"] = "Spicyleaf-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268086] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[6262] = {
					["source"] = "Zombore-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265410] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Waycrest Reveler",
					["npcID"] = 131847,
				},
				[27576] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[12294] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277181] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[267458] = {
					["source"] = "Ghôul",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[302769] = {
					["source"] = "Hoök",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[772] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198368] = {
					["source"] = "Oneill-Azralon",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202425] = {
					["source"] = "Ziv-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121411] = {
					["source"] = "Cute-Baelgun",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[65081] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Selkket-Zul'jin",
					["npcID"] = 0,
				},
				[199042] = {
					["source"] = "Deyclapper-Tichondrius",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[207203] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[73326] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alextree",
					["npcID"] = 0,
				},
				[11426] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Hauk-TheForgottenCoast",
					["npcID"] = 0,
				},
				[197051] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121253] = {
					["source"] = "Niz-Skullcrusher",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266036] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thistle Acolyte",
					["npcID"] = 135474,
				},
				[289467] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286393] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[285482] = {
					["source"] = "Isaaku-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31884] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[268998] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Vendarius-Stormrage",
					["npcID"] = 0,
				},
				[185123] = {
					["source"] = "Khaotíc-BleedingHollow",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280404] = {
					["source"] = "Tompouu-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196741] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[277187] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[208683] = {
					["source"] = "Pepeluka-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207744] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[183436] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[278134] = {
					["source"] = "Døzzer-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271559] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[266266] = {
					["npcID"] = 131864,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gorak Tul",
					["encounterID"] = 2117,
				},
				[196742] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[313733] = {
					["source"] = "Harbinger Il'koxik",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160810,
				},
				[269513] = {
					["source"] = "Lidraena-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[258920] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280772] = {
					["source"] = "Døzzer-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[210191] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[158792] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[280773] = {
					["source"] = "Døzzer-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[305252] = {
					["source"] = "Joseywalez-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277703] = {
					["source"] = "Isaaku-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[315573] = {
					["source"] = "Utheror-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[209746] = {
					["source"] = "Rfdudex-Azralon",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257642] = {
					["source"] = "Zara'thik Hive-Guard",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 162886,
				},
				[34428] = {
					["source"] = "Badicus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[313113] = {
					["source"] = "Kargorath-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285381] = {
					["source"] = "Scar-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[223500] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Partyanimoo",
					["npcID"] = 0,
				},
				[16595] = {
					["source"] = "Cutierawr",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280776] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16589] = {
					["source"] = "Cutierawr",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[210294] = {
					["source"] = "Rjeezy-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186254] = {
					["source"] = "Firion-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115804] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[268278] = {
					["npcID"] = 131545,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lady Waycrest",
					["encounterID"] = 2116,
				},
				[268905] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Rioki-Kargath",
					["npcID"] = 0,
				},
				[45438] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281178] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[85739] = {
					["source"] = "Døzzer-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257946] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[15407] = {
					["source"] = "Shirayukî-Nazjatar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198793] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sineex-Illidan",
					["npcID"] = 0,
				},
				[137639] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[3408] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Paradoxsis",
					["npcID"] = 0,
				},
				[192081] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280780] = {
					["source"] = "Magotovca-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[633] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[49184] = {
					["source"] = "Deathcrater-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257541] = {
					["source"] = "Isaaku-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Appleqt-Illidan",
					["npcID"] = 0,
				},
				[261446] = {
					["npcID"] = 131545,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lady Waycrest",
					["encounterID"] = 2116,
				},
				[81262] = {
					["source"] = "Efflorescence",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 47649,
				},
				[267612] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268271] = {
					["npcID"] = 131545,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Lady Waycrest",
					["encounterID"] = 2116,
				},
				[203651] = {
					["source"] = "Nikzul-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264040] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[96231] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sylvianna-Arthas",
					["npcID"] = 0,
				},
				[184367] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[205448] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268314] = {
					["source"] = "Cute-Baelgun",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[228477] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[296059] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[186258] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Aimbotkiller",
					["npcID"] = 0,
				},
				[51714] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289308] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267799] = {
					["source"] = "Thartuk",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296138] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kreettip-Garona",
					["npcID"] = 0,
				},
				[242551] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Rubypenguin-Illidan",
					["npcID"] = 0,
				},
				[297162] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297126] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12654] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[304722] = {
					["source"] = "Leshar-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264923] = {
					["npcID"] = 131863,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Raal the Gluttonous",
					["encounterID"] = 2115,
				},
				[298837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ryoka-Illidan",
					["npcID"] = 0,
				},
				[264050] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Coven Thornshaper",
					["npcID"] = 131666,
				},
				[313734] = {
					["source"] = "Harbinger Il'koxik",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 160810,
				},
				[41425] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298700] = {
					["source"] = "Havynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202636] = {
					["source"] = "Shadowfangz-Arthas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44614] = {
					["source"] = "Áraujo-Goldrinn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297037] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sineex-Illidan",
					["npcID"] = 0,
				},
				[275672] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23881] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[191634] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266181] = {
					["npcID"] = 131864,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gorak Tul",
					["encounterID"] = 2117,
				},
				[8219] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Wästëd",
					["npcID"] = 0,
				},
				[34827] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59180,
				},
				[264415] = {
					["source"] = "Dualix-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19574] = {
					["source"] = "Firion-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[36554] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[298703] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ellerla-BleedingHollow",
					["npcID"] = 0,
				},
				[297168] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300751] = {
					["source"] = "Lemmie",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[157348] = {
					["source"] = "Primal Storm Elemental",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 77942,
				},
				[263905] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Heartsbane Runeweaver",
					["npcID"] = 131677,
				},
				[314332] = {
					["source"] = "Grand Empress Shek'zara",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154638,
				},
				[57984] = {
					["source"] = "Primal Fire Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61029,
				},
				[289324] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[308188] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cargoshortz-Dalaran",
					["npcID"] = 0,
				},
				[285979] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lèktra-Zul'jin",
					["npcID"] = 0,
				},
				[271071] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118000] = {
					["source"] = "Døzzer-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gølm-BlackDragonflight",
					["npcID"] = 0,
				},
				[251838] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ledon-Mal'Ganis",
					["npcID"] = 0,
				},
				[264931] = {
					["npcID"] = 131863,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Raal the Gluttonous",
					["encounterID"] = 2115,
				},
				[203407] = {
					["source"] = "Nikzul-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1329] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[264420] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162794] = {
					["source"] = "Kargorath-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[138927] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Tehrocksor-Thrall",
					["npcID"] = 0,
				},
				[87023] = {
					["source"] = "Magotovca-Quel'Thalas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[167105] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Padhung-Dalaran",
					["npcID"] = 0,
				},
				[298197] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278954] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246853] = {
					["source"] = "Jmvõ-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318219] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Rioki-Kargath",
					["npcID"] = 0,
				},
				[247675] = {
					["source"] = "Daignix-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304851] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285976] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Spirulina-BurningLegion",
					["npcID"] = 0,
				},
				[251837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Konar-Norgannon",
					["npcID"] = 0,
				},
				[213644] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["encounterID"] = 2116,
				},
				[8936] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288988] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268893] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[60103] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[87024] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Abrua",
					["npcID"] = 0,
				},
				[172193] = {
					["source"] = "Zara'thik Soldier",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 157793,
				},
				[121557] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Mechx",
					["npcID"] = 0,
				},
				[271590] = {
					["type"] = "BUFF",
					["source"] = "Lady Waycrest",
					["npcID"] = 131545,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2116,
				},
				[265741] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Matron Bryndle",
					["npcID"] = 135329,
				},
				[5487] = {
					["source"] = "Irônfur-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[69369] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[247677] = {
					["source"] = "Daignix-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300761] = {
					["source"] = "Yomatéagalán-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58867] = {
					["source"] = "Spirit Wolf",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 29264,
				},
				[196840] = {
					["source"] = "Regasan-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281036] = {
					["source"] = "Kocharka-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268062] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300832] = {
					["source"] = "Draenorxd-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210320] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[184662] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[270058] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Latalok",
					["npcID"] = 0,
				},
				[8221] = {
					["source"] = "Martalock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199754] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[219788] = {
					["source"] = "Riverknight",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185245] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[154796] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Snicklefrizz-Kel'Thuzad",
					["npcID"] = 0,
				},
				[233397] = {
					["source"] = "Deathcrater-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275689] = {
					["source"] = "Släpchöp-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299789] = {
					["source"] = "Havynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45182] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193641] = {
					["source"] = "Thegoodtouch-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300612] = {
					["source"] = "Yomatéagalán-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278249] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295137] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Vendarius-Stormrage",
					["npcID"] = 0,
				},
				[318211] = {
					["source"] = "Koos-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212799] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Gølm-BlackDragonflight",
					["npcID"] = 0,
				},
				[203720] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[211881] = {
					["source"] = "Shuriki-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268887] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[287379] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[206151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[268528] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290512] = {
					["source"] = "Havynn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270674] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17364] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270576] = {
					["source"] = "Hoök",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Chiskills-Thrall",
					["npcID"] = 0,
				},
				[274443] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[34026] = {
					["source"] = "Mìnìgun",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[44425] = {
					["source"] = "Señorclean-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[210324] = {
					["source"] = "Thartuk",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197214] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278551] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Coven Thornshaper",
					["npcID"] = 131666,
				},
				[26297] = {
					["source"] = "Newt-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[143625] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Lèktra-Zul'jin",
					["npcID"] = 0,
				},
				[225919] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[263961] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Heartsbane Soulcharmer",
					["npcID"] = 131812,
				},
				[202188] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202137] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[6770] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271175] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Pallid Gorger",
					["npcID"] = 137830,
				},
				[300806] = {
					["source"] = "Shadowgames-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192106] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alfs",
					["npcID"] = 0,
				},
				[213652] = {
					["source"] = "Datbal-Nordrassil",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279793] = {
					["source"] = "Ziv-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[25771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[202138] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[198300] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270070] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Zaxar-Bronzebeard",
					["npcID"] = 0,
				},
				[197277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[263959] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Heartsbane Soulcharmer",
					["npcID"] = 131812,
				},
				[260734] = {
					["source"] = "Yomatéagalán-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185763] = {
					["source"] = "Hoök",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257422] = {
					["source"] = "Doinked-Thrall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257408] = {
					["source"] = "Itoshike-Quel'Thalas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[216413] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[137619] = {
					["source"] = "Dunkeh-Thrall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[313571] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131894] = {
					["source"] = "Kocharka-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281843] = {
					["source"] = "Havynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115175] = {
					["source"] = "Rokgor-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188370] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210824] = {
					["source"] = "Señorclean-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281844] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[258860] = {
					["source"] = "Zåkiyå-Alexstrasza",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268080] = {
					["npcID"] = 0,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[246407] = {
					["source"] = "Horrorscope-Drakkari",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273657] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gloom Horror",
					["npcID"] = 139269,
				},
				[193786] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115181] = {
					["source"] = "Niz-Skullcrusher",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257410] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Looselock",
					["npcID"] = 0,
				},
				[273658] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gloom Horror",
					["npcID"] = 139269,
				},
				[79865] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Unknown",
					["npcID"] = 47247,
				},
				[51271] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246152] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210391] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[90361] = {
					["source"] = "Hati",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 151145,
				},
				[8004] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270661] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[179057] = {
					["source"] = "Khaotíc-BleedingHollow",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314306] = {
					["source"] = "Grand Empress Shek'zara",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 154638,
				},
				[186265] = {
					["source"] = "Jmvõ-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Adrià-Stormreaver",
					["npcID"] = 0,
				},
				[278326] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[272126] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Pâtches-Zul'jin",
					["npcID"] = 0,
				},
				[303344] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[271103] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[188070] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102383] = {
					["source"] = "Gretathorn-BlackwingLair",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196770] = {
					["source"] = "Frostiie-Icecrown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48265] = {
					["source"] = "Iocorcian-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264760] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Latalok",
					["npcID"] = 0,
				},
				[120679] = {
					["source"] = "Kocharka-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303345] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[271105] = {
					["source"] = "Deyclapper-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318187] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6343] = {
					["source"] = "Badicus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[245388] = {
					["source"] = "Dunkeh-Thrall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1079] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269571] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[213915] = {
					["source"] = "Døzzer-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Mechx",
					["npcID"] = 0,
				},
				[271107] = {
					["source"] = "Fatkitty-Scilla",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281854] = {
					["source"] = "Rÿvlan-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263943] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Heartsbane Runeweaver",
					["npcID"] = 131677,
				},
				[116841] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[264761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[260741] = {
					["npcID"] = 131825,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Briar",
					["encounterID"] = 2113,
				},
				[115178] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[264456] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Crazed Marksman",
					["npcID"] = 131849,
				},
				[257415] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Hoodwinks-LaughingSkull",
					["npcID"] = 0,
				},
				[245389] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288509] = {
					["source"] = "Leshar-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279810] = {
					["source"] = "Mìnìgun",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[213405] = {
					["source"] = "Khaotíc-BleedingHollow",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205473] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285496] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[774] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268854] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[280400] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288803] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277185] = {
					["source"] = "Daignix-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271115] = {
					["source"] = "Rumpllawll-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279397] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273323] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199845] = {
					["source"] = "Psyfiend",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 101398,
				},
				[214222] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[155835] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20271] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[124007] = {
					["source"] = "Xuen",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 63508,
				},
				[276743] = {
					["source"] = "Señorclean-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294926] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295367] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[301308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[108271] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2580] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sylvianna-Arthas",
					["npcID"] = 0,
				},
				[122278] = {
					["source"] = "Chopsui-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275391] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[63619] = {
					["source"] = "Shadowfiend",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 19668,
				},
				[115356] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[49821] = {
					["source"] = "Joseywalez-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115308] = {
					["source"] = "Niz-Skullcrusher",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[305483] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[261769] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[122470] = {
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[114018] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[114165] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[285959] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199721] = {
					["source"] = "Thairha-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301312] = {
					["source"] = "Lemmie",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118507] = {
					["source"] = "Enraged Enforcer",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 60995,
				},
				[83242] = {
					["source"] = "Kocharka-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300801] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[54149] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[6807] = {
					["source"] = "Fatkitty-Scilla",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[204157] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[300802] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[2818] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[116705] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[245686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Dhonrue-Thrall",
					["npcID"] = 0,
				},
				[204262] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Padhung-Dalaran",
					["npcID"] = 0,
				},
				[124009] = {
					["source"] = "Xuen",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 63508,
				},
				[13877] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119381] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[183218] = {
					["source"] = "Daignix-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287062] = {
					["source"] = "Chopsui-Mal'Ganis",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[291593] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Inert Voodoo Mask",
					["npcID"] = 150412,
				},
				[157375] = {
					["source"] = "Primal Storm Elemental",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 77942,
				},
				[128999] = {
					["source"] = "Thundermaw",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 156778,
				},
				[273653] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Gloom Horror",
					["npcID"] = 139269,
				},
				[53385] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[265759] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Matron Bryndle",
					["npcID"] = 135329,
				},
				[313088] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[279584] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[225921] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[266008] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Infected Peasant",
					["npcID"] = 134041,
				},
				[5217] = {
					["source"] = "Scar-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281413] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Johnnysiins-Sargeras",
					["npcID"] = 0,
				},
				[273685] = {
					["source"] = "Sorwat-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193455] = {
					["source"] = "Mìnìgun",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264024] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Heartsbane Soulcharmer",
					["npcID"] = 131812,
				},
				[257424] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Draggato-Hyjal",
					["npcID"] = 0,
				},
				[194223] = {
					["source"] = "Tacticaltree-BleedingHollow",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300809] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315176] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[287504] = {
					["source"] = "Havynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193316] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kylindros",
					["npcID"] = 0,
				},
				[30451] = {
					["source"] = "Señorclean-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187827] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[268306] = {
					["type"] = "BUFF",
					["source"] = "Lady Waycrest",
					["npcID"] = 131545,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2116,
				},
				[268122] = {
					["type"] = "BUFF",
					["source"] = "Sister Briar",
					["npcID"] = 131825,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[19577] = {
					["source"] = "Kocharka-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299788] = {
					["source"] = "Twïñk-Illidan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[154797] = {
					["source"] = "Zaine-Kalecgos",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312248] = {
					["source"] = "Rÿvlan-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261264] = {
					["type"] = "BUFF",
					["source"] = "Sister Solena",
					["npcID"] = 131824,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[26573] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[267798] = {
					["source"] = "Thartuk",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2565] = {
					["source"] = "Badicus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116847] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sawachika-Blackhand",
					["npcID"] = 0,
				},
				[263840] = {
					["source"] = "Wolf",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129124,
				},
				[319237] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ledon-Mal'Ganis",
					["npcID"] = 0,
				},
				[261265] = {
					["type"] = "BUFF",
					["source"] = "Sister Briar",
					["npcID"] = 131825,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[225787] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Deerrunner-Zul'jin",
					["npcID"] = 0,
				},
				[210657] = {
					["source"] = "Siggmaster-Cho'gall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51723] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[295186] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Vendarius-Stormrage",
					["npcID"] = 0,
				},
				[277731] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[164545] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Konar-Norgannon",
					["npcID"] = 0,
				},
				[199600] = {
					["source"] = "Rigityrogued-Exodar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261266] = {
					["type"] = "BUFF",
					["source"] = "Sister Malady",
					["npcID"] = 131823,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[318216] = {
					["source"] = "Legstabber-Stormrage",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[266018] = {
					["source"] = "Newt-Anvilmar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33763] = {
					["source"] = "Nikzul-Mal'Ganis",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[162243] = {
					["source"] = "Shuriki-Zul'jin",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[248473] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Adrià-Stormreaver",
					["npcID"] = 0,
				},
				[319241] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293142] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2649] = {
					["source"] = "Wolf",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129124,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Deerrunner-Zul'jin",
					["npcID"] = 0,
				},
				[1680] = {
					["source"] = "Executiex-Tichondrius",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[124013] = {
					["source"] = "Pikè-Blackhand",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126188] = {
					["source"] = "Unknown",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 163386,
				},
				[164547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Konar-Norgannon",
					["npcID"] = 0,
				},
				[228260] = {
					["source"] = "Shirayukî-Nazjatar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286031] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[198067] = {
					["source"] = "Regasan-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190356] = {
					["source"] = "Áraujo-Goldrinn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273942] = {
					["source"] = "Thartuk",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303380] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[231843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Bannedban-Ragnaros",
					["npcID"] = 0,
				},
				[285981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sendesisina-Thrall",
					["npcID"] = 0,
				},
				[199603] = {
					["source"] = "Hoök",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233395] = {
					["source"] = "Deathcrater-Zul'jin",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302932] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212653] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xoah-Mal'Ganis",
					["npcID"] = 0,
				},
				[304611] = {
					["source"] = "Joseywalez-Nazjatar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[96312] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267560] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Meleehunter-AeriePeak",
					["npcID"] = 0,
				},
				[196608] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[272678] = {
					["source"] = "Jmvõ-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285472] = {
					["source"] = "Sorwat-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61684] = {
					["source"] = "Hati",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 151149,
				},
				[198149] = {
					["source"] = "Áraujo-Goldrinn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[132404] = {
					["source"] = "Badicus",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314040] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[62124] = {
					["source"] = "Datbal-Nordrassil",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[262652] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298343] = {
					["source"] = "Kargorath-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202164] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Tonkka-Magtheridon",
					["npcID"] = 0,
				},
				[253595] = {
					["source"] = "Martalock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281209] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Vanhowlseng",
					["npcID"] = 0,
				},
				[275909] = {
					["source"] = "Nomura-LaughingSkull",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318227] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[313948] = {
					["source"] = "Áraujo-Goldrinn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20572] = {
					["source"] = "Pepeluka-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288371] = {
					["source"] = "Joseywalez-Nazjatar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Alsolina-BleedingHollow",
					["npcID"] = 0,
				},
				[183998] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[268077] = {
					["type"] = "BUFF",
					["source"] = "Sister Solena",
					["npcID"] = 131824,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[2825] = {
					["source"] = "Regasan-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268769] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[408] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Elexus-Mal'Ganis",
					["npcID"] = 0,
				},
				[256337] = {
					["source"] = "Docile Porcupine",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 156759,
				},
				[51533] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187837] = {
					["source"] = "Zuull-Zuluhed",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[231895] = {
					["source"] = "Tompouu-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[157644] = {
					["source"] = "Kalizek-Tichondrius",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Thartuk",
					["npcID"] = 0,
				},
				[131493] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Khawi-Stormrage",
					["npcID"] = 0,
				},
				[268955] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[197561] = {
					["source"] = "Datbal-Nordrassil",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49998] = {
					["source"] = "Frostiie-Icecrown",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[312091] = {
					["source"] = "Vil'thik Amber-Mender",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153255,
				},
				[288813] = {
					["source"] = "Vil'thik Warrior",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 157759,
				},
				[260569] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116680] = {
					["source"] = "Rokgor-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260697] = {
					["npcID"] = 131825,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Sister Briar",
					["encounterID"] = 2113,
				},
				[1449] = {
					["source"] = "Tuupac-Wildhammer",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266035] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Thistle Acolyte",
					["npcID"] = 135474,
				},
				[21169] = {
					["source"] = "Siggmaster-Cho'gall",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[109304] = {
					["source"] = "Jmvõ-Ragnaros",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279715] = {
					["source"] = "Isaaku-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294694] = {
					["source"] = "Thartuk",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280149] = {
					["source"] = "Iocorcian-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260508] = {
					["npcID"] = 131667,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Soulbound Goliath",
					["encounterID"] = 2114,
				},
				[316036] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Mizurah",
					["npcID"] = 0,
				},
				[264378] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Coven Diviner",
					["npcID"] = 131819,
				},
				[191840] = {
					["source"] = "Rokgor-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273714] = {
					["source"] = "Sorwat-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287835] = {
					["source"] = "Rokgor-Ragnaros",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271538] = {
					["source"] = "Gretathorn-BlackwingLair",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264140] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Jagged Hound",
					["npcID"] = 131669,
				},
				[264510] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Crazed Marksman",
					["npcID"] = 131849,
				},
				[164812] = {
					["source"] = "Atonathiu-Azshara",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80868] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xelixae",
					["npcID"] = 0,
				},
				[271178] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Pallid Gorger",
					["npcID"] = 137830,
				},
				[316703] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Rowp-LaughingSkull",
					["npcID"] = 0,
				},
				[252353] = {
					["source"] = "Geonus",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[312257] = {
					["source"] = "Vil'thik Amber-Mender",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 153255,
				},
				[3219] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Stnulb",
					["npcID"] = 0,
				},
				[298950] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Sumbeers",
					["npcID"] = 0,
				},
				[268088] = {
					["type"] = "BUFF",
					["source"] = "Sister Malady",
					["npcID"] = 131823,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2113,
				},
				[315681] = {
					["source"] = "Blisterinkut",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3409] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[52174] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Tonkka-Magtheridon",
					["npcID"] = 0,
				},
				[178119] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Shathin",
					["npcID"] = 0,
				},
				[236645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Muffinelf",
					["npcID"] = 0,
				},
				[60971] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Fozzey",
					["npcID"] = 0,
				},
				[61295] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xenzs",
					["npcID"] = 0,
				},
				[115191] = {
					["source"] = "Dunkeh-Thrall",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[216251] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Xenzs",
					["npcID"] = 0,
				},
				[207685] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Myeyesburnn-Zul'jin",
					["npcID"] = 0,
				},
				[114051] = {
					["source"] = "Zuull-Zuluhed",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113656] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Jheezus-Rexxar",
					["npcID"] = 0,
				},
				[1953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Elinya",
					["npcID"] = 0,
				},
				[260512] = {
					["type"] = "BUFF",
					["source"] = "Soulbound Goliath",
					["npcID"] = 131667,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2114,
				},
				[124275] = {
					["source"] = "Niz-Skullcrusher",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275936] = {
					["source"] = "Shuriki-Zul'jin",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
			},
			["number_region_first_run"] = true,
			["health_statusbar_bgcolor"] = {
				0.1137254901960784, -- [1]
				0.1137254901960784, -- [2]
				0.1137254901960784, -- [3]
				0.8900000005960464, -- [4]
			},
			["health_animation_time_dilatation"] = 2.619999885559082,
			["login_counter"] = 776,
			["health_selection_overlay_alpha"] = 0.1015491858124733,
			["target_highlight_alpha"] = 0.7527135610580444,
			["target_highlight_height"] = 15,
			["patch_version"] = 9,
			["not_affecting_combat_alpha"] = 0.5976737141609192,
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Explosion Affix M+"] = 3,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Color Change"] = 1,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
		},
		["PRIEST"] = {
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Hide Neutral Units"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Combo Points"] = 4,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 1,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
					},
					["version"] = -1,
					["Name"] = "Unit - Important [Plater]",
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						323149, -- [1]
						324392, -- [2]
						340544, -- [3]
						342189, -- [4]
						333227, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604674264,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 695,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
					["SpellIds"] = {
						332329, -- [1]
						320103, -- [2]
						321406, -- [3]
						335817, -- [4]
						321061, -- [5]
						320141, -- [6]
						326171, -- [7]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604696442,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 970,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						320170, -- [1]
						320171, -- [2]
						320462, -- [3]
						330712, -- [4]
						332170, -- [5]
						333875, -- [6]
						326836, -- [7]
						342135, -- [8]
						333861, -- [9]
						341969, -- [10]
						317963, -- [11]
						327481, -- [12]
						328331, -- [13]
						322614, -- [14]
						325701, -- [15]
						326438, -- [16]
						323538, -- [17]
						321764, -- [18]
						296523, -- [19]
						330755, -- [20]
						295929, -- [21]
						296019, -- [22]
						335685, -- [23]
						170751, -- [24]
						342207, -- [25]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Main Target [P]",
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1611856720,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 369,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Blink Enabled",
							["Value"] = true,
							["Key"] = "blinkEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = true,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Change NamePlate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Name"] = "Timeleft to Blink",
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Name"] = "Blink Speed",
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Name"] = "Blink Max Alpha",
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Blink Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "blinkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Timer Color Enabled",
							["Value"] = true,
							["Key"] = "timerColorEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Warning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Critical",
						}, -- [15]
						{
							["Type"] = 1,
							["Name"] = "Warning Color",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "warningColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Critical Color",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "criticalColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Unit - Health Markers [P]",
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						323489, -- [1]
						323496, -- [2]
						319941, -- [3]
						319592, -- [4]
						334266, -- [5]
						325258, -- [6]
						334913, -- [7]
						326221, -- [8]
						322936, -- [9]
						323236, -- [10]
						321834, -- [11]
						336752, -- [12]
						325418, -- [13]
						324667, -- [14]
						327233, -- [15]
						324368, -- [16]
						324205, -- [17]
						323943, -- [18]
						319713, -- [19]
						320596, -- [20]
						320729, -- [21]
						323608, -- [22]
						330614, -- [23]
						320063, -- [24]
						332708, -- [25]
						334023, -- [26]
						317231, -- [27]
						317943, -- [28]
						320966, -- [29]
						334053, -- [30]
						328458, -- [31]
						321968, -- [32]
						331718, -- [33]
						325793, -- [34]
						330453, -- [35]
						326997, -- [36]
						334051, -- [37]
						292903, -- [38]
						330843, -- [39]
						294173, -- [40]
						189200, -- [41]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
						"165560", -- [1]
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604593143,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 833,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 25,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 30,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
				}, -- [18]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [19]
			},
			["aura2_x_offset"] = 0,
			["aura2_y_offset"] = 5,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547392935,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["version"] = -1,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Time"] = 1547406548,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Name"] = "Execute Range [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["version"] = -1,
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547993111,
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["version"] = -1,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1541606242,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["version"] = -1,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 254,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1603567332,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Time"] = 1547409079,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["version"] = -1,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Reorder Nameplate [Plater]",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["HooksTemp"] = {
					},
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1548278227,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["version"] = -1,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Aura Reorder [Plater]",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["HooksTemp"] = {
					},
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1552354619,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["version"] = -1,
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["ui_parent_scale_tune"] = 1.75,
			["script_auto_imported"] = {
				["Unit - Important"] = 11,
				["Aura - Buff Alert"] = 13,
				["Cast - Very Important"] = 11,
				["Explosion Affix M+"] = 11,
				["Aura - Debuff Alert"] = 11,
				["Cast - Ultra Important"] = 11,
				["Cast - Big Alert"] = 11,
				["Cast - Small Alert"] = 11,
				["Auto Set Skull"] = 11,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 12,
				["Countdown"] = 11,
				["Unit - Health Markers"] = 12,
				["Cast - Frontal Cone"] = 11,
				["Fixate"] = 11,
				["Cast - Tank Interrupt"] = 11,
				["Fixate On You"] = 11,
				["Spiteful Affix"] = 3,
				["Unit - Show Energy"] = 11,
			},
			["update_throttle"] = 0.1200000047683716,
			["patch_version"] = 13,
			["aura_y_offset"] = 5,
		},
		["Default"] = {
			["aura_height"] = 9.830873489379883,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Skull Texture",
							["Value"] = "Skull Texture",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Skull Color",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "skullColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Key"] = "skullAlpha",
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Scale",
						}, -- [13]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						323149, -- [1]
						324392, -- [2]
						340544, -- [3]
						342189, -- [4]
						333227, -- [5]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
						350687, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						332329, -- [1]
						320103, -- [2]
						321406, -- [3]
						335817, -- [4]
						321061, -- [5]
						320141, -- [6]
						326171, -- [7]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Name"] = "Health Bar Height Mod",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Health Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996691,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1060,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						329239, -- [62]
						328400, -- [63]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						320170, -- [1]
						320171, -- [2]
						320462, -- [3]
						330712, -- [4]
						332170, -- [5]
						333875, -- [6]
						326836, -- [7]
						342135, -- [8]
						333861, -- [9]
						341969, -- [10]
						317963, -- [11]
						327481, -- [12]
						328331, -- [13]
						322614, -- [14]
						325701, -- [15]
						326438, -- [16]
						323538, -- [17]
						321764, -- [18]
						296523, -- [19]
						330755, -- [20]
						295929, -- [21]
						296019, -- [22]
						335685, -- [23]
						170751, -- [24]
						342207, -- [25]
						350554, -- [26]
						348513, -- [27]
						351779, -- [28]
						328180, -- [29]
						319898, -- [30]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = true,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Only in Combat",
							["Value"] = false,
							["Key"] = "onlyInCombat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
						179124, -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Main Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "indicatorAlpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						323489, -- [1]
						323496, -- [2]
						319941, -- [3]
						319592, -- [4]
						334266, -- [5]
						325258, -- [6]
						334913, -- [7]
						326221, -- [8]
						322936, -- [9]
						323236, -- [10]
						321834, -- [11]
						336752, -- [12]
						325418, -- [13]
						324667, -- [14]
						327233, -- [15]
						324368, -- [16]
						324205, -- [17]
						323943, -- [18]
						319713, -- [19]
						320596, -- [20]
						320729, -- [21]
						323608, -- [22]
						330614, -- [23]
						320063, -- [24]
						332708, -- [25]
						334023, -- [26]
						317231, -- [27]
						317943, -- [28]
						320966, -- [29]
						334053, -- [30]
						328458, -- [31]
						321968, -- [32]
						331718, -- [33]
						325793, -- [34]
						330453, -- [35]
						326997, -- [36]
						334051, -- [37]
						292903, -- [38]
						330843, -- [39]
						294173, -- [40]
						189200, -- [41]
						352833, -- [42]
						330403, -- [43]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.275,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Key"] = "animSpeed",
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "script desc",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show at 80% of Energy",
							["Value"] = true,
							["Key"] = "showLater",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Font Color",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Key"] = "fontColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Enable Text Outline",
							["Value"] = true,
							["Key"] = "outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1625697537,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
					["Enabled"] = true,
					["Revision"] = 282,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When a spell resembles more a timer than a spell being cast",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
					["SpellIds"] = {
						354080, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 7,
							["Key"] = "customSize",
							["Value"] = {
								{
									"17", -- [1]
									"120, 16", -- [2]
								}, -- [1]
							},
							["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 120,
							["Name"] = "Cast Bar Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "width",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 5,
							["Name"] = "Cast Bar Height",
							["Value"] = 16,
							["Key"] = "height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Set the size of the cast time",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 12,
							["Name"] = "Cast Timer Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timerFontSize",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option7",
							["Value"] = "Time Separators",
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "separatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.5992676615715027, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 1,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "separatorWidth",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Cast - Castbar is Timer [P]",
					["NpcNames"] = {
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1625696653,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 836,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						354173, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Name"] = "Frame Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Key"] = "targetFrameHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1626467946,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1162,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [22]
			},
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Ornament",
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1646863444,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = false,
					["Revision"] = 51,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Prio"] = 99,
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "Constructor",
					["version"] = -1,
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1646863353,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 349,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Prio"] = 99,
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Key"] = "textureHeightMod",
							["Value"] = 0,
							["Name"] = "Texture Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1646863320,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["Enabled"] = false,
					["Revision"] = 88,
					["Options"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Prio"] = 99,
					["Name"] = "Execute Range [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["Time"] = 1541606242,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1646863304,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Enabled"] = false,
					["Revision"] = 179,
					["Options"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Prio"] = 99,
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1646863366,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 96,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Prio"] = 99,
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Nameplate Added",
					["version"] = -1,
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["PlaterCore"] = 1,
					["Time"] = 1554138845,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1646863356,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Enabled"] = false,
					["Revision"] = 184,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Prio"] = 99,
					["Name"] = "Players Targeting a Target [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["Time"] = 1552354619,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["aura_cache_by_name"] = {
				["divine shield"] = {
					642, -- [1]
					13874, -- [2]
					29382, -- [3]
					33581, -- [4]
					40733, -- [5]
					41367, -- [6]
					54322, -- [7]
					63148, -- [8]
					66010, -- [9]
					67251, -- [10]
					71550, -- [11]
					133093, -- [12]
					164410, -- [13]
					169631, -- [14]
					173086, -- [15]
					179493, -- [16]
					183248, -- [17]
					184028, -- [18]
					186521, -- [19]
					189679, -- [20]
					210377, -- [21]
					218344, -- [22]
					228050, -- [23]
					228177, -- [24]
					263323, -- [25]
					264115, -- [26]
					283627, -- [27]
					317131, -- [28]
					335103, -- [29]
					343150, -- [30]
				},
				["bolster"] = {
					209859, -- [1]
					280001, -- [2]
				},
			},
			["aura_stack_size"] = 8.829120635986328,
			["aura_width"] = 18.76195335388184,
			["aura_height2"] = 9.143861770629883,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateOverlapV"] = "0.39999997615814",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.3999999761581",
				["nameplateShowFriends"] = "1",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateLargeTopInset"] = "0.085",
				["ShowClassColorInNameplate"] = "1",
			},
			["aura2_y_offset"] = 5,
			["login_counter"] = 4542,
			["plate_config"] = {
				["global_health_height"] = 9,
				["friendlyplayer"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["only_damaged"] = false,
					["spellpercent_text_font"] = "Accidental Presidency",
					["cast_incombat"] = {
						92, -- [1]
					},
					["actorname_use_class_color"] = true,
					["cast"] = {
						92, -- [1]
					},
					["spellname_text_size"] = 9.604843139648438,
					["health"] = {
						71.21449279785156, -- [1]
						9, -- [2]
					},
					["health_incombat"] = {
						68.95458984375, -- [1]
						9, -- [2]
					},
					["percent_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Accidental Presidency",
					["level_text_font"] = "Accidental Presidency",
					["only_thename"] = true,
				},
				["global_health_width"] = 92,
				["friendlynpc"] = {
					["enabled"] = false,
					["actorname_text_spacing"] = 9.529054641723633,
					["percent_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Accidental Presidency",
					["cast_incombat"] = {
						92, -- [1]
					},
					["actorname_text_color"] = {
						nil, -- [1]
						0.00392156862745098, -- [2]
						0.7215686274509804, -- [3]
					},
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						92, -- [1]
					},
					["health_incombat"] = {
						92, -- [1]
						9, -- [2]
					},
					["health"] = {
						92, -- [1]
						9, -- [2]
					},
					["big_actorname_text_font"] = "Accidental Presidency",
					["actorname_text_size"] = 10.52905464172363,
					["spellname_text_font"] = "Accidental Presidency",
					["level_text_font"] = "Accidental Presidency",
					["actorname_text_font"] = "Accidental Presidency",
				},
				["enemyplayer"] = {
					["cast"] = {
						92, -- [1]
					},
					["cast_incombat"] = {
						92, -- [1]
					},
					["health"] = {
						92, -- [1]
						9, -- [2]
					},
					["health_incombat"] = {
						92, -- [1]
						9, -- [2]
					},
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["big_actorname_text_size"] = 11,
					["spellpercent_text_font"] = "Accidental Presidency",
					["actorname_text_size"] = 8,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						92, -- [1]
					},
					["big_actortitle_text_size"] = 11,
					["percent_text_size"] = 8,
					["actorname_text_spacing"] = 7,
					["percent_text_font"] = "Accidental Presidency",
					["cast_incombat"] = {
						92, -- [1]
					},
					["health_incombat"] = {
						92, -- [1]
						9, -- [2]
					},
					["health"] = {
						92, -- [1]
						9, -- [2]
					},
					["big_actorname_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Accidental Presidency",
					["percent_text_anchor"] = {
						["y"] = 0.5,
					},
					["level_text_font"] = "Accidental Presidency",
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
				},
			},
			["aura_y_offset"] = 5,
			["use_ui_parent"] = true,
			["aura_stack_font"] = "Accidental Presidency",
			["script_auto_imported"] = {
				["Unit - Important"] = 11,
				["Aura - Buff Alert"] = 13,
				["Cast - Very Important"] = 12,
				["Explosion Affix M+"] = 11,
				["Aura - Debuff Alert"] = 11,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 11,
				["Cast - Big Alert"] = 12,
				["Cast - Small Alert"] = 11,
				["Auto Set Skull"] = 11,
				["Unit - Show Energy"] = 11,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Cast - Important Target [P]"] = 1,
				["Countdown"] = 11,
				["Unit - Health Markers"] = 12,
				["Cast - Frontal Cone"] = 11,
				["Fixate"] = 11,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Alert + Timer [P]"] = 2,
				["Spiteful Affix"] = 3,
				["Fixate On You"] = 11,
			},
			["aura_timer_text_size"] = 11.6013069152832,
			["update_throttle"] = 0.05000000074505806,
			["number_region_first_run"] = true,
			["resources_settings"] = {
				["chr"] = {
					["Player-61-0EA51CA7"] = "ArcaneCharges",
					["Player-61-0EA6E225"] = "ComboPoints",
				},
			},
			["health_animation_time_dilatation"] = 2.619999885559082,
			["npc_cache"] = {
				[65414] = {
					"Ethereal Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[69899] = {
					"Farraki Sand Conjurer", -- [1]
					"Throne of Thunder", -- [2]
				},
				[37133] = {
					"Ymirjar Warlord", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[111361] = {
					"Kelorn Nightblade", -- [1]
					"Black Rook Hold", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[29064] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29128] = {
					"Anub'ar Prime Guard", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[80649] = {
					"Black Iron Wyrmcaller", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[42764] = {
					"Pyrecraw", -- [1]
					"Blackwing Descent", -- [2]
				},
				[69388] = {
					"Zandalari Spear-Shaper", -- [1]
					"Throne of Thunder", -- [2]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[178671] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[164339] = {
					"Mawsworn Bowman", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[69133] = {
					"Unharnessed Power", -- [1]
					"Throne of Thunder", -- [2]
				},
				[77579] = {
					"Mongrethod", -- [1]
					"Teron'gor's Confrontation", -- [2]
				},
				[61448] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[37134] = {
					"Ymirjar Huntress", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53642] = {
					"Cinderweb Spinner", -- [1]
					"Firelands", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[23178] = {
					"Tarren Mill Lookout", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[177650] = {
					"Lordaeron Knight", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[175091] = {
					"Necrotic Droplet", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[69390] = {
					"Zandalari Storm-Caller", -- [1]
					"Throne of Thunder", -- [2]
				},
				[164342] = {
					"Mawsworn Defender", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178163] = {
					"Murkbrine Shorerunner", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164343] = {
					"Mawsworn Debilitator", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[73742] = {
					"Thresher Turret", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37007] = {
					"Deathbound Ward", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[100360] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[164345] = {
					"Scavenging Soul Eater", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[25354] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[8904] = {
					"Shadowforge Senator", -- [1]
					"Blackrock Depths", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[36880] = {
					"Decaying Colossus", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[164348] = {
					"Wandering Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[79631] = {
					"Iron Shieldbearer", -- [1]
					"Defense of Karabor", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[157695] = {
					"Lurking Bonemauler", -- [1]
					"Plaguefall", -- [2]
				},
				[118022] = {
					"Infernal Chaosbringer", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[42767] = {
					"Ivoroc", -- [1]
					"Blackwing Descent", -- [2]
				},
				[175611] = {
					"The Tarragrue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[73745] = {
					"Kor'kron Iron Sentinel", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[69906] = {
					"Zandalari High Priest", -- [1]
					"Throne of Thunder", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[59915] = {
					"Jasper Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[60043] = {
					"Jade Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[79632] = {
					"Grom'kar Grunt", -- [1]
					"Defense of Karabor", -- [2]
				},
				[164351] = {
					"Fading Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[36497] = {
					"Bronjahm", -- [1]
					"The Forge of Souls", -- [2]
				},
				[172030] = {
					"Tormenter Overlord", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[123398] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[53901] = {
					"Unstable Magma", -- [1]
					"Firelands", -- [2]
				},
				[79633] = {
					"Iron Boltblaster", -- [1]
					"Defense of Karabor", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168960] = {
					"Fulfir the Scarred", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[166913] = {
					"Corrupted Guardian", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[171520] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168961] = {
					"The Hungering Ones", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[173568] = {
					"Anima Crazed Worker", -- [1]
					"Castle Nathria", -- [2]
				},
				[166914] = {
					"Fallen Keeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[171521] = {
					"Dread Evoker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168962] = {
					"Reborn Phoenix", -- [1]
					"Castle Nathria", -- [2]
				},
				[56717] = {
					"Hoptallus", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[171522] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[69909] = {
					"Amani'shi Flame Chanter", -- [1]
					"Throne of Thunder", -- [2]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
				},
				[18701] = {
					"Dark Vortex", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[177154] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169476] = {
					"Highway Serf", -- [1]
					"Halls of Atonement", -- [2]
				},
				[72981] = {
					"Aggron", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[166917] = {
					"Grove Wrecker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[93968] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94224] = {
					"Petrifying Totem", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[69910] = {
					"Drakkari Frost Warden", -- [1]
					"Throne of Thunder", -- [2]
				},
				[5925] = {
					"Grounding Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[75285] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[168966] = {
					"Brightsparkle", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[56718] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[36499] = {
					"Soulguard Reaper", -- [1]
					"The Forge of Souls", -- [2]
				},
				[36627] = {
					"Rotface", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[122890] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[69911] = {
					"Zandalari Warlord", -- [1]
					"Throne of Thunder", -- [2]
				},
				[168967] = {
					"Gerwyn", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[74518] = {
					"Executioner Gore", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[103695] = {
					"Corruption Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166920] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[72983] = {
					"Corrupted Skullsplitter", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[166921] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[177159] = {
					"Soulburner Fraxin", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[9033] = {
					"General Angerforge", -- [1]
					"Blackrock Depths", -- [2]
				},
				[56719] = {
					"Sha of Violence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[72728] = {
					"Kor'kron Blood Axe", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[18318] = {
					"Sethekk Initiate", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[69657] = {
					"Zeb'tula Beastcaller", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[37012] = {
					"Ancient Skeletal Soldier", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[177161] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[53648] = {
					"Inferno Hawk", -- [1]
					"Firelands", -- [2]
				},
				[13448] = {
					"Sergeant Yazra Bloodsnarl", -- [1]
					"Alterac Valley", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[18894] = {
					"Felguard Brute", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[177162] = {
					"Mawsworn Interrogator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167949] = {
					"Plague-Ridden Survivor", -- [1]
					"Plaguefall", -- [2]
				},
				[74009] = {
					"Crawler Mine", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[19598] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[177164] = {
					"Mawsworn Pillager", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[72986] = {
					"Shanna Sparkfizz", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[28684] = {
					"Krik'thir the Gatewatcher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[177165] = {
					"Mawsworn Destroyer", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[75034] = {
					"Twilight Tormentor", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[83480] = {
					"Black Iron Wyrm Rider", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[54161] = {
					"Flame Archon", -- [1]
					"Firelands", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[76314] = {
					"Sentry Cannon", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[172048] = {
					"Illusionary Mauler", -- [1]
					"Spires of Ascension", -- [2]
				},
				[69916] = {
					"Gurubashi Berserker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[26125] = {
					"Mudgobbler", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[52498] = {
					"Beth'tilac", -- [1]
					"Firelands", -- [2]
				},
				[36502] = {
					"Devourer of Souls", -- [1]
					"The Forge of Souls", -- [2]
				},
				[18319] = {
					"Time-Lost Scryer", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[37782] = {
					"Flesh-eating Insect", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[101398] = {
					"Psyfiend", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[175123] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[174100] = {
					"Nathrian Singuard", -- [1]
					"Castle Nathria", -- [2]
				},
				[19919] = {
					"Thorn Lasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[79900] = {
					"Captain Hoodrych", -- [1]
					"Ashran", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[102679] = {
					"Ysondre", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[185363] = {
					"Manifestor Krugan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[120851] = {
					"Hippogryph Lord Varah", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[118804] = {
					"Domatrax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59794] = {
					"Krik'thik Disruptor", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[8906] = {
					"Ragereaver Golem", -- [1]
					"Blackrock Depths", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[18320] = {
					"Time-Lost Shadowmage", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[53140] = {
					"Son of Flame", -- [1]
					"Firelands", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[102681] = {
					"Taerar", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[37144] = {
					"Skybreaker Marksman", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[107288] = {
					"Vilethorn Sapling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166429] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[102682] = {
					"Lethon", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[60051] = {
					"Cobalt Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[19920] = {
					"Thorn Flayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[48278] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[14185] = {
					"Najak Hexxen", -- [1]
					"Alterac Valley", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[73250] = {
					"Kor'kron Wild Gun", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53141] = {
					"Molten Surger", -- [1]
					"Firelands", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[102683] = {
					"Emeriss", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[70179] = {
					"Ritual Guard", -- [1]
					"Throne of Thunder", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[112153] = {
					"Dire Shaman", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[175646] = {
					"P.O.S.T. Master", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[72483] = {
					"Sarok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[122135] = {
					"Shatug", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[21904] = {
					"Avian Warhawk", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[48279] = {
					"Goblin Overseer", -- [1]
					"Deadmines", -- [2]
				},
				[72484] = {
					"Zazo", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18321] = {
					"Sethekk Talon Lord", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[93983] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[37146] = {
					"Kor'kron Sniper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[166436] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[72485] = {
					"Goma", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[42649] = {
					"Drakonid Chainwielder", -- [1]
					"Blackwing Descent", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Eye of the Storm", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[78116] = {
					"Water Elemental", -- [1]
					"Isle of Conquest", -- [2]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[11946] = {
					"Drek'Thar", -- [1]
					"Alterac Valley", -- [2]
				},
				[175652] = {
					"Lord of Woe", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
				},
				[172581] = {
					"Slimelet", -- [1]
					"Theater of Pain", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[93985] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102431] = {
					"Blood-Princess Thal'ena", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[69927] = {
					"Zandalari Prelate", -- [1]
					"Throne of Thunder", -- [2]
				},
				[119579] = {
					"Fel Commander Erixtol", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[37531] = {
					"Frostwarden Handler", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[75814] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[180773] = {
					"Vigilant Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[68904] = {
					"Suen", -- [1]
					"Throne of Thunder", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[8907] = {
					"Wrath Hammer Construct", -- [1]
					"Blackrock Depths", -- [2]
				},
				[172073] = {
					"Hazebroken Guardian", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173609] = {
					"Nathrian Conservator", -- [1]
					"Castle Nathria", -- [2]
				},
				[72744] = {
					"Kor'kron Skullsplitter", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[68905] = {
					"Lu'lin", -- [1]
					"Throne of Thunder", -- [2]
				},
				[18322] = {
					"Sethekk Ravenguard", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[61334] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[37148] = {
					"Skybreaker Summoner", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37532] = {
					"Frostwing Whelp", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[9547] = {
					"Guzzling Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[77096] = {
					"Vilemaw Hatchling", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
				},
				[71466] = {
					"Iron Juggernaut", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[79912] = {
					"Commander Tharbek", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[180779] = {
					"Terrorspine", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173613] = {
					"Nathrian Registrar", -- [1]
					"Castle Nathria", -- [2]
				},
				[178732] = {
					"Mawsworn Runesmith", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[14282] = {
					"Frost Wolf Bloodhound", -- [1]
					"Alterac Valley", -- [2]
				},
				[37021] = {
					"Skybreaker Vicar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37149] = {
					"Kor'kron Necrolyte", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[174126] = {
					"Baron Duskhollow", -- [1]
					"Castle Nathria", -- [2]
				},
				[178733] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[71979] = {
					"Kor'kron Warbringer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[178734] = {
					"Mawsworn Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175663] = {
					"Hylbrande", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[112162] = {
					"Grisly Trapper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72236] = {
					"Embodied Doubt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72492] = {
					"Shimra", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[166451] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[18323] = {
					"Sethekk Guard", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[37022] = {
					"Blighted Abomination", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[70445] = {
					"Stormbringer Draz'kil", -- [1]
					"Throne of Thunder", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[37534] = {
					"Spinestalker", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37662] = {
					"Darkfallen Commander", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[62360] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[184880] = {
					"Dominated Disrupter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[72493] = {
					"Trak'gen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[166453] = {
					"Darkturned Clawguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[164406] = {
					"Shriekwing", -- [1]
					"Castle Nathria", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[164407] = {
					"Sludgefist", -- [1]
					"Castle Nathria", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[61337] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[37023] = {
					"Plague Scientist", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[174134] = {
					"Lord Evershade", -- [1]
					"Castle Nathria", -- [2]
				},
				[120099] = {
					"Fel-crazed Magus", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[37663] = {
					"Darkfallen Noble", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[73775] = {
					"War Master Kragg", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[111398] = {
					"Nightmare Amalgamation", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[178743] = {
					"Terrified Glitterfeather", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[72496] = {
					"Overseer Thathung", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178744] = {
					"Mawsworn Raider", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[102185] = {
					"First Mate DeGauza", -- [1]
					"Azsuna", -- [2]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179257] = {
					"Burning Shade", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167485] = {
					"Starving Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[19668] = {
					"Shadowfiend", -- [1]
					"Eye of the Storm", -- [2]
				},
				[71474] = {
					"Embodied Despair", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[76593] = {
					"Frost Wolf", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[93485] = {
					"Forsaken Crewman", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[69427] = {
					"Dark Animus", -- [1]
					"Throne of Thunder", -- [2]
				},
				[167999] = {
					"Echo of Sin", -- [1]
					"Castle Nathria", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24723] = {
					"Selin Fireheart", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[75058] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[37665] = {
					"Darkfallen Lieutenant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[71475] = {
					"Rook Stonetoe", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[152644] = {
					"Deadsoul Drifter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93486] = {
					"Dread-Captain Tattersail", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[43296] = {
					"Chimaeron", -- [1]
					"Blackwing Descent", -- [2]
				},
				[59804] = {
					"Gripping Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[73012] = {
					"Klaxxi Skirmisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18325] = {
					"Sethekk Prophet", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[61340] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37026] = {
					"Skybreaker Sorcerer", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37666] = {
					"Darkfallen Tactician", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[168004] = {
					"Empowered Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95280] = {
					"Kaz'rogal", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[60701] = {
					"Zian of the Endless Shadow", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[76597] = {
					"Frost Wolf Alpha", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[93233] = {
					"Lord Aram'el", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[102191] = {
					"Dreadhound", -- [1]
					"Azsuna", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37027] = {
					"Skybreaker Hierophant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[41378] = {
					"Maloriak", -- [1]
					"Blackwing Descent", -- [2]
				},
				[53791] = {
					"Blazing Monstrosity", -- [1]
					"Firelands", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[155211] = {
					"Gormling Pest", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113197] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[93490] = {
					"Royal Dreadguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[102192] = {
					"Dread Sharpshooter", -- [1]
					"Azsuna", -- [2]
				},
				[69944] = {
					"Sand Elemental", -- [1]
					"Throne of Thunder", -- [2]
				},
				[153165] = {
					"Custodian Thonar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95282] = {
					"Azgalor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[8909] = {
					"Fireguard", -- [1]
					"Blackrock Depths", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[48417] = {
					"Defias Blood Wizard", -- [1]
					"Deadmines", -- [2]
				},
				[76599] = {
					"Black Iron Groundshaker", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[56863] = {
					"Sleepy Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[36516] = {
					"Soulguard Animator", -- [1]
					"The Forge of Souls", -- [2]
				},
				[18326] = {
					"Sethekk Shaman", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[37028] = {
					"Kor'kron Stalker", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[106545] = {
					"Empowered Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[59551] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[70202] = {
					"Manchu", -- [1]
					"Throne of Thunder", -- [2]
				},
				[120366] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[79672] = {
					"Grom'kar Shieldbearer", -- [1]
					"Defense of Karabor", -- [2]
				},
				[60447] = {
					"Krik'thik Saboteur", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48418] = {
					"Defias Envoker", -- [1]
					"Deadmines", -- [2]
				},
				[73530] = {
					"Dragonmaw Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37029] = {
					"Kor'kron Reaver", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[173134] = {
					"Darksworn Goliath", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53793] = {
					"Harbinger of Flame", -- [1]
					"Firelands", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184908] = {
					"Vy Interceptor", -- [1]
					"Theater of Pain", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59808] = {
					"Shado-Pan Stormbringer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[124207] = {
					"Fel-Charged Obfuscator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48419] = {
					"Defias Miner", -- [1]
					"Deadmines", -- [2]
				},
				[174161] = {
					"Lady Sinsear", -- [1]
					"Castle Nathria", -- [2]
				},
				[18327] = {
					"Time-Lost Controller", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37030] = {
					"Kor'kron Primalist", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[70205] = {
					"Weisheng", -- [1]
					"Throne of Thunder", -- [2]
				},
				[174162] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[179281] = {
					"Coagulated Blood", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93496] = {
					"Black Rose Apothecary", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[94008] = {
					"Dark Devourer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[70206] = {
					"Untrained Quilen", -- [1]
					"Throne of Thunder", -- [2]
				},
				[119858] = {
					"Felwing Terror", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[121138] = {
					"Tormented Fragment", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[48420] = {
					"Defias Digger", -- [1]
					"Deadmines", -- [2]
				},
				[61345] = {
					"Mogu Archer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[37031] = {
					"Kor'kron Oracle", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[111413] = {
					"Dark Devourers", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[170071] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[120371] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[93498] = {
					"Forsaken Deathguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[59426] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[119860] = {
					"Fel-touched Pyromage", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[8910] = {
					"Blazing Fireguard", -- [1]
					"Blackrock Depths", -- [2]
				},
				[75839] = {
					"Vigilant Kaathar", -- [1]
					"Auchindoun", -- [2]
				},
				[48421] = {
					"Defias Overseer", -- [1]
					"Deadmines", -- [2]
				},
				[72768] = {
					"Kor'kron War Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18328] = {
					"Sethekk Oracle", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[37032] = {
					"Kor'kron Defender", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[38184] = {
					"Corrupted Ymirjar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[165469] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[77120] = {
					"Warlord Zaela", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[98363] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[19608] = {
					"Frayer Wildling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[115767] = {
					"Mistress Sassz'ine", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[120374] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[164447] = {
					"Skuld", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[72770] = {
					"Kor'kron Dark Farseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[166495] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[73538] = {
					"Kor'kron War Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[37033] = {
					"Kor'kron Invoker", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[169055] = {
					"Marrow Scraper", -- [1]
					"Theater of Pain", -- [2]
				},
				[123702] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[99644] = {
					"Felguard Annihilator", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[121399] = {
					"Inquisitor Sebilus", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[73539] = {
					"Kor'kron Den Mother", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[70212] = {
					"Flaming Head", -- [1]
					"Throne of Thunder", -- [2]
				},
				[165474] = {
					"Nathrian Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[99645] = {
					"Shadowmoon Technician", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[10990] = {
					"Alterac Ram", -- [1]
					"Alterac Valley", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[60708] = {
					"Meng the Demented", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[36522] = {
					"Soul Horror", -- [1]
					"The Forge of Souls", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[37034] = {
					"Kor'kron Templar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[155239] = {
					"Forest Father", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[126776] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[69702] = {
					"Ritualist Sirian", -- [1]
					"Throne of Thunder", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[74565] = {
					"Subjugator Kor'ul", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[19865] = {
					"Mutate Horror", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[60709] = {
					"Qiang the Merciless", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[101951] = {
					"Shivermaw", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[106302] = {
					"Restless Tombguard", -- [1]
					"Shield's Rest", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[37035] = {
					"Kor'kron Vanquisher", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[61989] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[111933] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[183396] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[172647] = {
					"Parasitic Infestor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29335] = {
					"Anub'ar Webspinner", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[165481] = {
					"Court Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[17370] = {
					"Laughing Skull Enforcer", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[90435] = {
					"Kormrok", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[123451] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[17626] = {
					"Laughing Skull Legionnaire", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[8911] = {
					"Fireguard Destroyer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[60710] = {
					"Subetai the Swift", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[106304] = {
					"Corrupted Wisp", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[74569] = {
					"Restorative Waters", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[170093] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[99651] = {
					"Faceless Voidcaster", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[175725] = {
					"Eye of the Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[70219] = {
					"Putrid Waste", -- [1]
					"Throne of Thunder", -- [2]
				},
				[74570] = {
					"Ruination", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95813] = {
					"Weaponlord Mehlkhior", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[58664] = {
					"Instructor Chillheart's Phylactery", -- [1]
					"Scholomance", -- [2]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[175727] = {
					"Soulrender Dormazain", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[17819] = {
					"Durnholde Sentry", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[126527] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[175729] = {
					"Remnant of Ner'zhul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[37038] = {
					"Vengeful Fleshreaper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[18587] = {
					"Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[174194] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[175730] = {
					"Fatescribe Roh-Kalo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[75852] = {
					"Corrupted Healing Totem", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[62632] = {
					"Sik'thik Engineer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[77132] = {
					"Sargerei Zealot", -- [1]
					"Auchindoun", -- [2]
				},
				[183409] = {
					"Pinning Weapon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[175731] = {
					"Guardian of the First Ones", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[47404] = {
					"Defias Watcher", -- [1]
					"Deadmines", -- [2]
				},
				[99655] = {
					"Void-Touched Juggernaut", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[175732] = {
					"Sylvanas Windrunner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[69455] = {
					"Zandalari Water-Binder", -- [1]
					"Throne of Thunder", -- [2]
				},
				[73806] = {
					"Kor'kron Machinist", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				[183412] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[121155] = {
					"Sickly Tadpole", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[183413] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[106311] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[69712] = {
					"Ji-Kun", -- [1]
					"Throne of Thunder", -- [2]
				},
				[70224] = {
					"Rotting Scavenger", -- [1]
					"Throne of Thunder", -- [2]
				},
				[127810] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[99657] = {
					"Deranged Mindflayer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[17820] = {
					"Durnholde Rifleman", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[52524] = {
					"Cinderweb Spinner", -- [1]
					"Firelands", -- [2]
				},
				[56747] = {
					"Gu Cloudstrike", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56875] = {
					"Krik'thik Demolisher", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[166523] = {
					"Vesper Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[94283] = {
					"Shadow Infuser", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[164476] = {
					"Tortured Amalgamation", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[78671] = {
					"Palebelly Croaker", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[166012] = {
					"Athanos", -- [1]
					"Bastion Scenario", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[183416] = {
					"Bound Realmbreaker", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[166525] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[94284] = {
					"Fiery Enkindler", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[177787] = {
					"Mawsworn Hopebreaker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[56876] = {
					"Krik'thik Sapper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[32665] = {
					"Crystalline Tangler", -- [1]
					"The Nexus", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[78673] = {
					"Noxious Riverhopper", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[75090] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[135816] = {
					"Vilefiend", -- [1]
					"Theater of Pain", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[42800] = {
					"Golem Sentry", -- [1]
					"Blackwing Descent", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[169601] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[174208] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[72276] = {
					"Amalgam of Corruption", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[56877] = {
					"Raigonn", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[175234] = {
					"Tractus the Icebreaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180865] = {
					"Twisted Warden", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[5913] = {
					"Tremor Totem", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[70230] = {
					"Zandalari Blade Initiate", -- [1]
					"Throne of Thunder", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[184962] = {
					"Gnarled Scavenger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[32666] = {
					"Training Dummy", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53167] = {
					"Unbound Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[98384] = {
					"Razormouth", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[6233] = {
					"Mechanized Sentry", -- [1]
					"Gnomeregan", -- [2]
				},
				[175238] = {
					"Arch-Tyrant Zerios", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Theater of Pain", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[177286] = {
					"Phantasmic Amalgamation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[6329] = {
					"Irradiated Pillager", -- [1]
					"Gnomeregan", -- [2]
				},
				[72791] = {
					"Lingering Corruption", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'honn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[127050] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[70232] = {
					"Muckbat", -- [1]
					"Throne of Thunder", -- [2]
				},
				[8913] = {
					"Twilight Emissary", -- [1]
					"Blackrock Depths", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
				},
				[183432] = {
					"Ebon Dominator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[42803] = {
					"Drakeadon Mongrel", -- [1]
					"Blackwing Descent", -- [2]
				},
				[19422] = {
					"Bleeding Hollow Necrolyte", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[19486] = {
					"Sunseeker Chemist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[94804] = {
					"Shambling Hulk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[173708] = {
					"Anchoring Rune", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[167566] = {
					"Bleakwing Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102227] = {
					"Dread Harpooner", -- [1]
					"Azsuna", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[70235] = {
					"Frozen Head", -- [1]
					"Throne of Thunder", -- [2]
				},
				[95061] = {
					"Greater Fire Elemental", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[66652] = {
					"Lesser Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[71515] = {
					"General Nazgrim", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[71771] = {
					"Kor'kron Arcweaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[29340] = {
					"Anub'ar Brood Keeper", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[165521] = {
					"Lady Inerva Darkvein", -- [1]
					"Castle Nathria", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[59184] = {
					"Jandice Barov", -- [1]
					"Scholomance", -- [2]
				},
				[90199] = {
					"Gorefiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[60208] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[71772] = {
					"Kor'kron Assassin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[52530] = {
					"Alysrazor", -- [1]
					"Firelands", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183439] = {
					"Mawsworn Annihilator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[71517] = {
					"Kor'kron Arcweaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[71773] = {
					"Kor'kron Warshaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[7849] = {
					"Mobile Alert System", -- [1]
					"Gnomeregan", -- [2]
				},
				[105301] = {
					"Expedient Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[94808] = {
					"Hellfire Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[115795] = {
					"Abyss Stalker", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[71518] = {
					"Kor'kron Assassin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[104534] = {
					"D'zorykx the Trapper", -- [1]
					"The Nighthold", -- [2]
				},
				[181395] = {
					"Skolex", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[60849] = {
					"Jade Serpent Statue", -- [1]
					"Eye of the Storm", -- [2]
				},
				[122450] = {
					"Garothi Worldbreaker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[29213] = {
					"Anub'ar Darter", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[101976] = {
					"Millificent Manastorm", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[70240] = {
					"Shan'ze Celestial Shaper", -- [1]
					"Throne of Thunder", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[181399] = {
					"Kin'tessa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[85341] = {
					"Lunarfall Raccoon", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[69473] = {
					"Ra-den", -- [1]
					"Throne of Thunder", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[123476] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[103769] = {
					"Xavius", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[9554] = {
					"Hammered Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[58803] = {
					"Residual Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[114263] = {
					"Odyn", -- [1]
					"Trial of Valor", -- [2]
				},
				[69474] = {
					"Kresh the Ripper", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[123477] = {
					"Antoran Doomguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[166046] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[99675] = {
					"Enormous Stone Quilen", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[180379] = {
					"Mawsworn Arbalest", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[56884] = {
					"Corrupted Taran Zhu", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[69475] = {
					"Arcanital Tula'chek", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[123478] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[99676] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[29214] = {
					"Anub'ar Assassin", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[17377] = {
					"Keli'dan the Breaker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
				},
				[116569] = {
					"Razorjaw Wavemender", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[168098] = {
					"Empowered Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Plaguefall", -- [2]
				},
				[36666] = {
					"Spectral Warden", -- [1]
					"The Forge of Souls", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[123480] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[89] = {
					"Infernal", -- [1]
					"Isle of Conquest", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[37562] = {
					"Gas Cloud", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180385] = {
					"Condemned Soul Remnant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[97119] = {
					"Shroud Hound", -- [1]
					"Maw of Souls", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[70246] = {
					"Spirit Flayer", -- [1]
					"Throne of Thunder", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48440] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[102239] = {
					"Lord Brinebeard", -- [1]
					"Azsuna", -- [2]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[62005] = {
					"Beast", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[6234] = {
					"Mechanized Guardian", -- [1]
					"Gnomeregan", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92514] = {
					"Shao'ghun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[117596] = {
					"Razorjaw Gladiator", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[117852] = {
					"Tugar Bloodtotem", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[106335] = {
					"Restless Tombguard", -- [1]
					"Shield's Rest", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[70248] = {
					"Arcane Head", -- [1]
					"Throne of Thunder", -- [2]
				},
				[67177] = {
					"Zar'thik Supplicant", -- [1]
					"Heart of Fear", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48441] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[183463] = {
					"Remnant of a Fallen King", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[94563] = {
					"Gorebound Fanatic", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[58807] = {
					"Vestige of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[63030] = {
					"Enslaved Bonesmasher", -- [1]
					"Heart of Fear", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180906] = {
					"Halondrus", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[120158] = {
					"Volatile Corruption", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168110] = {
					"Empowered Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[52409] = {
					"Ragnaros", -- [1]
					"Firelands", -- [2]
				},
				[72810] = {
					"Staff of Resonating Water", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61239] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[122718] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168111] = {
					"Empowered Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[54073] = {
					"Flamewaker Hound Master", -- [1]
					"Firelands", -- [2]
				},
				[168112] = {
					"General Kaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[63031] = {
					"Set'thik Fanatic", -- [1]
					"Heart of Fear", -- [2]
				},
				[178862] = {
					"Screamspike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[126558] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[1863] = {
					"Disantia", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[66413] = {
					"Yeasty Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[64183] = {
					"Enormous Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[112738] = {
					"Acolyte of Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[125535] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[61240] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[104293] = {
					"Avatar of Shadow", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185008] = {
					"Volatile Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[63032] = {
					"Sra'thik Shield Master", -- [1]
					"Heart of Fear", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[179890] = {
					"Executioner Varruth", -- [1]
					"Halls of Atonement", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
				},
				[179891] = {
					"Soggodon the Breaker", -- [1]
					"Halls of Atonement", -- [2]
				},
				[12051] = {
					"Frostwolf Legionnaire", -- [1]
					"Alterac Valley", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56890] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Plaguefall", -- [2]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[179892] = {
					"Oros Coldheart", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173238] = {
					"Deadsoul Strider", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53691] = {
					"Shannox", -- [1]
					"Firelands", -- [2]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[179893] = {
					"Cartel Skulker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[112741] = {
					"Wrathguard Decimator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[80493] = {
					"Elliott Van Rook", -- [1]
					"Ashran", -- [2]
				},
				[58810] = {
					"Fragment of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[17252] = {
					"Felguard", -- [1]
					"Theater of Pain", -- [2]
				},
				[106087] = {
					"Elerethe Renferal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[179894] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74351] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[8916] = {
					"Arena Spectator", -- [1]
					"Blackrock Depths", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[100713] = {
					"Rockbait Fisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[48445] = {
					"Oaf Lackey", -- [1]
					"Deadmines", -- [2]
				},
				[56763] = {
					"Regenerating Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[61242] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[106344] = {
					"Disturbed Worg", -- [1]
					"Shield's Rest", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
				},
				[111975] = {
					"Shadowfeather", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179386] = {
					"Corsair Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[19428] = {
					"Cobalt Serpent", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[74353] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[173756] = {
					"Regeran", -- [1]
					"Ashran", -- [2]
				},
				[95852] = {
					"Nathanos Blightcaller", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[56636] = {
					"Commander Ri'mok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[105322] = {
					"Deathglare Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[69235] = {
					"Shan'ze Gravekeeper", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[37697] = {
					"Volatile Ooze", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[175806] = {
					"So'azmi", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[92526] = {
					"Zerik'shekor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[80497] = {
					"Lord Mes", -- [1]
					"Ashran", -- [2]
				},
				[58812] = {
					"Hateful Essence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[63035] = {
					"Zar'thik Zealot", -- [1]
					"Heart of Fear", -- [2]
				},
				[69236] = {
					"Shan'ze Soulripper", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[102252] = {
					"Dread Lookout", -- [1]
					"Azsuna", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[180415] = {
					"Mawsworn Axeguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[92527] = {
					"Dag'gorath", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[48447] = {
					"Monstrous Parrot", -- [1]
					"Deadmines", -- [2]
				},
				[177856] = {
					"Vicious Ghoul", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[93295] = {
					"Darkcaster Adept", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[69237] = {
					"Risen Ancestor", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[53694] = {
					"Riplimb", -- [1]
					"Firelands", -- [2]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[63036] = {
					"Kor'thik Extremist", -- [1]
					"Heart of Fear", -- [2]
				},
				[167109] = {
					"Skeletal Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[19429] = {
					"Avian Darkhawk", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[169157] = {
					"Mudlump", -- [1]
					"Castle Nathria", -- [2]
				},
				[177859] = {
					"Opengut Abomination", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[119914] = {
					"Haukenulfnir", -- [1]
					"Halls of Valor", -- [2]
				},
				[111980] = {
					"Nightmother", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[28067] = {
					"Dark Iron Brewer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[71542] = {
					"Blood", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[67703] = {
					"Slateshell Wanderer", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[125545] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[177860] = {
					"Desiccated Swordsman", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[53695] = {
					"Rageface", -- [1]
					"Firelands", -- [2]
				},
				[6219] = {
					"Corrosive Lurker", -- [1]
					"Gnomeregan", -- [2]
				},
				[37571] = {
					"Darkfallen Advisor", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[71543] = {
					"Immerseus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[67704] = {
					"Barbtail Beaver", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[164553] = {
					"Misty Ally", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[93298] = {
					"Shadowheart Fiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[47297] = {
					"Lumbering Oaf", -- [1]
					"Deadmines", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[64061] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[95602] = {
					"Mystic Velruun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[76151] = {
					"Black Iron Warcaster", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[56767] = {
					"Shado-Pan Fire Archer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56895] = {
					"Weak Spot", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[106352] = {
					"Ancient Mechano-Tank", -- [1]
					"Shield's Rest", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[95603] = {
					"Mystic Aaran", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[75640] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[184520] = {
					"Anduin's Despair", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[90997] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[116335] = {
					"Helarjar Mistwatcher", -- [1]
					"Trial of Valor", -- [2]
				},
				[75641] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[180427] = {
					"Loom Guardian", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[125549] = {
					"Hungering Stalker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
				},
				[53185] = {
					"Flamewaker Overseer", -- [1]
					"Firelands", -- [2]
				},
				[180428] = {
					"Tortured Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[16871] = {
					"Bleeding Hollow Grunt", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[42180] = {
					"Toxitron", -- [1]
					"Blackwing Descent", -- [2]
				},
				[68220] = {
					"Gastropod", -- [1]
					"Throne of Thunder", -- [2]
				},
				[121711] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[14772] = {
					"East Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[69756] = {
					"Anima Orb", -- [1]
					"Throne of Thunder", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[74363] = {
					"Twilight Shadow", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[64063] = {
					"Mogu'shan Arcanist", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[75643] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[68221] = {
					"Bore Worm", -- [1]
					"Throne of Thunder", -- [2]
				},
				[93303] = {
					"Slavering Hound", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[36678] = {
					"Professor Putricide", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[114546] = {
					"Risen Bonethrall", -- [1]
					"Trial of Valor", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[123760] = {
					"Fel-Infused Destructor", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[68222] = {
					"Bow Fly Swarm", -- [1]
					"Throne of Thunder", -- [2]
				},
				[93560] = {
					"Deathweaver Cassandra", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[7915] = {
					"Walking Bomb", -- [1]
					"Gnomeregan", -- [2]
				},
				[118642] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91001] = {
					"Tarspitter Lurker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[12053] = {
					"Frostwolf Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[76157] = {
					"Black Iron Leadbelcher", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[76413] = {
					"Orebender Gor'ashan", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[36551] = {
					"Spiteful Apparition", -- [1]
					"The Forge of Souls", -- [2]
				},
				[73342] = {
					"Fallen Pool Tender", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[36807] = {
					"Deathspeaker Disciple", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[82556] = {
					"Drakonid Monstrosity", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[119923] = {
					"Helblaze Soulmender", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[99704] = {
					"Shadowmoon Warlock", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[121459] = {
					"Bile Spitter Egg", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[105591] = {
					"Nightmare Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[121460] = {
					"Bile Spitter", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[93563] = {
					"Cauldronmaster Mills", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[61250] = {
					"Sorcerer Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[36808] = {
					"Deathspeaker Zealot", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[18472] = {
					"Darkweaver Syth", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[61634] = {
					"Commander Vo'jak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[91004] = {
					"Ularogg Cragshaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
				},
				[62402] = {
					"Kor'thik Elite Blademaster", -- [1]
					"Heart of Fear", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178394] = {
					"Cartel Lackey", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[59459] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[173276] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[35273] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				[120182] = {
					"Tormented Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[177372] = {
					"Mawsworn Realmbinder", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
				},
				[69507] = {
					"Zeb'tula Beastcaller", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[184539] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[95613] = {
					"Binder Hallaani", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[172255] = {
					"Gravestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[73091] = {
					"Blackfuse Sellsword", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[114809] = {
					"Night Watch Mariner", -- [1]
					"Trial of Valor", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[95614] = {
					"Binder Eloah", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17833] = {
					"Durnholde Warden", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[84097] = {
					"Boneshallow Spider", -- [1]
					"Ashran", -- [2]
				},
				[109947] = {
					"Corrupted Soul", -- [1]
					"The Temple of Elune", -- [2]
				},
				[102269] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[18473] = {
					"Talon King Ikiss", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[91520] = {
					"Adjunct Kuroh", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75396] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[73349] = {
					"Tormented Initiate", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[114811] = {
					"Kvaldir Coral Maiden", -- [1]
					"Trial of Valor", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[119930] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[91521] = {
					"Vindicator Bramu", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[73094] = {
					"Healing Tide Totem", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				[36811] = {
					"Deathspeaker Attendant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36939] = {
					"High Overlord Saurfang", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53575] = {
					"Lava Wielder", -- [1]
					"Firelands", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[6220] = {
					"Irradiated Horror", -- [1]
					"Gnomeregan", -- [2]
				},
				[91522] = {
					"Protector Bajunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[62405] = {
					"Sra'thik Amber-Trapper", -- [1]
					"Heart of Fear", -- [2]
				},
				[58822] = {
					"Risen Guard", -- [1]
					"Scholomance", -- [2]
				},
				[73095] = {
					"Blackfuse Engineer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[179942] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[64453] = {
					"Set'thik Windblade", -- [1]
					"Heart of Fear", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[67977] = {
					"Tortos", -- [1]
					"Throne of Thunder", -- [2]
				},
				[185574] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[76935] = {
					"Black Iron Drake-Keeper", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[26536] = {
					"Mindless Servant", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[416] = {
					"Zilyap", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[417] = {
					"Fzuujhom", -- [1]
					"Twin Peaks", -- [2]
				},
				[168683] = {
					"Gorak Zhar", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
				},
				[173802] = {
					"Carved Assistant", -- [1]
					"Castle Nathria", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Alterac Valley", -- [2]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[58823] = {
					"Scholomance Neophyte", -- [1]
					"Scholomance", -- [2]
				},
				[19306] = {
					"Mana Leech", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[179434] = {
					"Mawsworn Doubtcaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[64454] = {
					"Zar'thik Augurer", -- [1]
					"Heart of Fear", -- [2]
				},
				[113536] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[73098] = {
					"Kor'kron Overseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[69515] = {
					"Zandalari Barricade", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[24745] = {
					"Pure Energy", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[74890] = {
					"Iron Grunt", -- [1]
					"Defense of Karabor", -- [2]
				},
				[120191] = {
					"Eternal Soulguard", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[75658] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[59080] = {
					"Darkmaster Gandling", -- [1]
					"Scholomance", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[69516] = {
					"Zandalari Barricade", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[59464] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[176879] = {
					"Hollowsoul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[92039] = {
					"Bleeding Grunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176880] = {
					"Soulscream Tormentor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185582] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[18155] = {
					"Bloodfalcon", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[69517] = {
					"Zeb'tula Stoneshield", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
				},
				[166644] = {
					"Artificer Xy'mox", -- [1]
					"Castle Nathria", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[62408] = {
					"Zar'thik Battle-Mender", -- [1]
					"Heart of Fear", -- [2]
				},
				[121473] = {
					"Coercitor Nixa", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19307] = {
					"Nexus Terror", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[69518] = {
					"Zeb'tula Spearanger", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[120194] = {
					"Ghostly Acolyte", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[112260] = {
					"Dreadsoul Defiler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[79756] = {
					"Coldsnout Sow", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[117123] = {
					"Tidescale Legionnaire", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[93065] = {
					"Ysera", -- [1]
					"The Temple of Elune", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[45261] = {
					"Twilight Shadow Knight", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[74382] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112261] = {
					"Dreadsoul Corruptor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[108934] = {
					"Tainted Blood", -- [1]
					"The Nighthold", -- [2]
				},
				[125570] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[63049] = {
					"Set'thik Swiftblade", -- [1]
					"Heart of Fear", -- [2]
				},
				[179446] = {
					"Incinerator Arkolath", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114565] = {
					"Guardian of the Forgotten Queen", -- [1]
					"Eye of the Storm", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[8920] = {
					"Weapon Technician", -- [1]
					"Blackrock Depths", -- [2]
				},
				[56395] = {
					"Shado-Pan Novice", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[18092] = {
					"Tarren Mill Guardsman", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[80782] = {
					"Icespine Stinger", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[73104] = {
					"Unstable Spark", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[172282] = {
					"Web Wrap", -- [1]
					"Plaguefall", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
				},
				[78735] = {
					"Zar'shuul", -- [1]
					"Auchindoun", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168700] = {
					"Pestering Fiend", -- [1]
					"Castle Nathria", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[125828] = {
					"Primepunch", -- [1]
					"Atal'Dazar", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[94604] = {
					"Gorebound Corruptor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[64458] = {
					"Kor'thik Warsinger", -- [1]
					"Heart of Fear", -- [2]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[61131] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
				},
				[114568] = {
					"Decaying Minion", -- [1]
					"Trial of Valor", -- [2]
				},
				[24683] = {
					"Sunblade Mage Guard", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[94861] = {
					"Grim Ambusher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[75410] = {
					"Guardian of the Deep", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[62795] = {
					"Sik'thik Warden", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[105611] = {
					"Inconceivable Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[69524] = {
					"Zeb'tula Alchemist", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174336] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[75155] = {
					"Aku'mai the Devourer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76179] = {
					"Black Iron Grunt", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[52558] = {
					"Lord Rhyolith", -- [1]
					"Firelands", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[73226] = {
					"Lesser Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[120201] = {
					"Spectral Guardian", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[120713] = {
					"Wa'glur", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[37970] = {
					"Prince Valanar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[182777] = {
					"Rygelon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184535] = {
					"Overthrown Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[48522] = {
					"Defias Pirate", -- [1]
					"Deadmines", -- [2]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[183945] = {
					"Unstable Matter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[59213] = {
					"Woven Boneguard", -- [1]
					"Scholomance", -- [2]
				},
				[59193] = {
					"Boneweaver", -- [1]
					"Scholomance", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[120574] = {
					"Drippy Tadpole", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[181398] = {
					"Mal'Ganis", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[179837] = {
					"Tracker Zo'korss", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[75157] = {
					"Aku'mai the Venomous", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[19949] = {
					"Sapling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76181] = {
					"Ragemaw Worg", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[184910] = {
					"Wo Drifter", -- [1]
					"Theater of Pain", -- [2]
				},
				[183406] = {
					"Colossal Realmcrafter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[181244] = {
					"Domination Core", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[183407] = {
					"Eternal Artisan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[45265] = {
					"Twilight Soul Blade", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[13798] = {
					"Jotek", -- [1]
					"Alterac Valley", -- [2]
				},
				[32593] = {
					"Skittering Swarmer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[68248] = {
					"Corpse Spider", -- [1]
					"Throne of Thunder", -- [2]
				},
				[76694] = {
					"Emberscale Whelpling", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[184522] = {
					"Vigilant Custodian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[181859] = {
					"Volatile Materium", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[168713] = {
					"Dread Caller Skulfir", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[75927] = {
					"Azzakel", -- [1]
					"Auchindoun", -- [2]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[8889] = {
					"Anvilrage Overseer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[179177] = {
					"Mawsworn Overlord", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[100497] = {
					"Ursoc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[184954] = {
					"Ancient Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[18094] = {
					"Tarren Mill Lookout", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[13176] = {
					"Smith Regzar", -- [1]
					"Alterac Valley", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[69017] = {
					"Primordius", -- [1]
					"Throne of Thunder", -- [2]
				},
				[102282] = {
					"Lord Malgath", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[167691] = {
					"Stasis Trap", -- [1]
					"Castle Nathria", -- [2]
				},
				[36948] = {
					"Muradin Bronzebeard", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[3343] = {
					"Grelkor", -- [1]
					"Alterac Valley", -- [2]
				},
				[26796] = {
					"Commander Stoutbeard", -- [1]
					"The Nexus", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[91540] = {
					"Illusionary Outcast", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[37972] = {
					"Prince Keleseth", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[181224] = {
					"Dausegne", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[37004] = {
					"Skybreaker Dreadblade", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[76696] = {
					"Emberscale Adolescent", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[58959] = {
					"Fizrik", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59982] = {
					"Meat Graft", -- [1]
					"Scholomance", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[53128] = {
					"Giant Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[176395] = {
					"Overloaded Mailemental", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[18314] = {
					"Nexus Stalker", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[119950] = {
					"Brimstone Infernal", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[95636] = {
					"Sargerei Adjutant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75417] = {
					"Coldsnout Piglet", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[3527] = {
					"Healing Stream Totem", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[20078] = {
					"Summoned Bloodwarder Reservist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[185610] = {
					"Unmade Steward", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184530] = {
					"Eternal Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[48521] = {
					"Defias Squallshaper", -- [1]
					"Deadmines", -- [2]
				},
				[184911] = {
					"Urh Dismantler", -- [1]
					"Theater of Pain", -- [2]
				},
				[76039] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[45267] = {
					"Twilight Phase-Twister", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[181954] = {
					"Anduin Wrynn", -- [1]
					"The Shadowlands", -- [2]
				},
				[69465] = {
					"Jin'rokh the Breaker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[56754] = {
					"Azure Serpent", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[178957] = {
					"Empowered Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[120719] = {
					"Lunar Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[37973] = {
					"Prince Taldaram", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[113041] = {
					"Infected Diemetradon", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[76954] = {
					"Pahboo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[14776] = {
					"Tower Point Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[182311] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[81817] = {
					"Burning Legionnaire", -- [1]
					"Teron'gor's Confrontation", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[71529] = {
					"Thok the Bloodthirsty", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[119952] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[95638] = {
					"Sargerei Bannerman", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[120720] = {
					"Lunar Guard", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104592] = {
					"Nightmare Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[56862] = {
					"Drunken Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[112742] = {
					"Broodling", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[183404] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[102293] = {
					"Dread Admiral Eliza", -- [1]
					"Azsuna", -- [2]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[183438] = {
					"Chainbound Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56473] = {
					"Flying Snow", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[181850] = {
					"Pre-Fabricated Sentry", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
				},
				[73541] = {
					"Kor'kron Wolf Pup", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[59467] = {
					"Candlestick Mage", -- [1]
					"Scholomance", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[185347] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[114813] = {
					"Kvaldir Tide Witch", -- [1]
					"Trial of Valor", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[114323] = {
					"Guarm", -- [1]
					"Trial of Valor", -- [2]
				},
				[34775] = {
					"Demolisher", -- [1]
					"Isle of Conquest", -- [2]
				},
				[63568] = {
					"Amber-Ridden Mushan", -- [1]
					"Heart of Fear", -- [2]
				},
				[102270] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[181856] = {
					"Point Defense Drone", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[12121] = {
					"Drakan", -- [1]
					"Alterac Valley", -- [2]
				},
				[95640] = {
					"Sargerei Soul Cleaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61445] = {
					"Haiyan the Unstoppable", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[118523] = {
					"Huntress Kasparian", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[176404] = {
					"Dark Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[181011] = {
					"Ancient Guardian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56658] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178964] = {
					"Empowered Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56766] = {
					"Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[102295] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[69791] = {
					"Vashnarl", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[94617] = {
					"Glynevere", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94873] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[169751] = {
					"Ashen Wasp", -- [1]
					"Theater of Pain", -- [2]
				},
				[65415] = {
					"Void Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[59684] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180501] = {
					"Innocent Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[166169] = {
					"Adonias", -- [1]
					"Bastion Scenario", -- [2]
				},
				[100351] = {
					"Avatar of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[61389] = {
					"Kargesh Highguard", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[62348] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[69792] = {
					"Vashnarl", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[94618] = {
					"Cattwen", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17840] = {
					"Durnholde Tracking Hound", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[166170] = {
					"Phaedra", -- [1]
					"Bastion Scenario", -- [2]
				},
				[8890] = {
					"Anvilrage Warden", -- [1]
					"Blackrock Depths", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[61485] = {
					"General Pa'valak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[176920] = {
					"Domination Arrow", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[72352] = {
					"Dragonmaw Ebon Stalker", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[183496] = {
					"Foul Gorger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56915] = {
					"Sun", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[94733] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[114709] = {
					"Grimelord", -- [1]
					"Trial of Valor", -- [2]
				},
				[61243] = {
					"Gekkan", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
				},
				[26798] = {
					"Commander Kolurg", -- [1]
					"The Nexus", -- [2]
				},
				[69382] = {
					"Malignant Ooze", -- [1]
					"Throne of Thunder", -- [2]
				},
				[126767] = {
					"Clubfist Beastlord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[112732] = {
					"Brood of Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[18096] = {
					"Epoch Hunter", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[114996] = {
					"Valarjar Runebearer", -- [1]
					"Trial of Valor", -- [2]
				},
				[38104] = {
					"Plagued Zombie", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[72353] = {
					"Dragonmaw Flameslinger", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[23176] = {
					"Tarren Mill Guardsman", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[76036] = {
					"Twilight Shadow", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[61339] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[122773] = {
					"Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[63570] = {
					"Sra'thik Pool-Tender", -- [1]
					"Heart of Fear", -- [2]
				},
				[18317] = {
					"Ethereal Priest", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[6230] = {
					"Peacekeeper Security Suit", -- [1]
					"Gnomeregan", -- [2]
				},
				[166174] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[18394] = {
					"Ethereal Wraith", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[64338] = {
					"Instructor Kli'thak", -- [1]
					"Heart of Fear", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[120153] = {
					"Eonic Defender", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[113048] = {
					"Corrupted Deer", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[72354] = {
					"Dragonmaw Bonecrusher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18315] = {
					"Ethereal Theurgist", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[175677] = {
					"Smuggled Creature", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[61139] = {
					"Shan-xi Watershaper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184603] = {
					"Ancient Bufonid", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24687] = {
					"Sunblade Physician", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[61444] = {
					"Ming the Cunning", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[24815] = {
					"Sunblade Imp", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[119959] = {
					"Fel Champion Gargath", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[56713] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[72964] = {
					"Goro'dan", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[125590] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[177950] = {
					"Soul Prison", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166177] = {
					"Reinforced Pouncer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[14777] = {
					"West Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[59220] = {
					"Jandice Barov", -- [1]
					"Scholomance", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[114553] = {
					"Bilewater Slime", -- [1]
					"Trial of Valor", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[70308] = {
					"Soul-Fed Construct", -- [1]
					"Throne of Thunder", -- [2]
				},
				[17993] = {
					"Bloodwarder Protector", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[166178] = {
					"Forsworn Doubtguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[64339] = {
					"Instructor Tak'thok", -- [1]
					"Heart of Fear", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[18344] = {
					"Nexus-Prince Shaffar", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[72356] = {
					"Master Cannoneer Dagryn", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[153382] = {
					"Maw of the Maw", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[6218] = {
					"Irradiated Slime", -- [1]
					"Gnomeregan", -- [2]
				},
				[125547] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[94777] = {
					"Morkronn", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26799] = {
					"Horde Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[180389] = {
					"Mawsworn Rageguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[75172] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[24552] = {
					"Sliver", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[37955] = {
					"Blood-Queen Lana'thel", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[58965] = {
					"Nixgorod", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[24744] = {
					"Vexallus", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[111004] = {
					"Gelatinized Decay", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[19505] = {
					"Sunseeker Channeler", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[59605] = {
					"Sodden Hozen Brawler", -- [1]
					"Kalimdor", -- [2]
				},
				[19633] = {
					"Bloodwarder Mender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[92961] = {
					"Gorebound Brute", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102272] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[155945] = {
					"Gherus the Chained", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[12122] = {
					"Duros", -- [1]
					"Alterac Valley", -- [2]
				},
				[122778] = {
					"Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[105630] = {
					"Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[170790] = {
					"Tranquil Puddlewader", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[29062] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[24560] = {
					"Priestess Delrissa", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[58198] = {
					"Shado-Pan Disciple", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[24688] = {
					"Wretched Skulker", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[6206] = {
					"Caverndeep Burrower", -- [1]
					"Gnomeregan", -- [2]
				},
				[6222] = {
					"Leprous Technician", -- [1]
					"Gnomeregan", -- [2]
				},
				[37595] = {
					"Darkfallen Blood Knight", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[119799] = {
					"Garos", -- [1]
					"Halls of Valor", -- [2]
				},
				[24664] = {
					"Kael'thas Sunstrider", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[121499] = {
					"Fel Surge Totem", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[182053] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[18331] = {
					"Ethereal Darkcaster", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[93858] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[76176] = {
					"Black Iron Berserker", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[93068] = {
					"Xhul'horac", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[109075] = {
					"Parasitic Lasher", -- [1]
					"The Nighthold", -- [2]
				},
				[8891] = {
					"Anvilrage Guardsman", -- [1]
					"Blackrock Depths", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[24686] = {
					"Sunblade Warlock", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24685] = {
					"Sunblade Magister", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[45266] = {
					"Twilight Dark Mender", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[56731] = {
					"Habanero Brew", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[37017] = {
					"Skybreaker Assassin", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[114539] = {
					"Kvaldir Reefcaller", -- [1]
					"Trial of Valor", -- [2]
				},
				[102305] = {
					"Dreadguard", -- [1]
					"Azsuna", -- [2]
				},
				[61398] = {
					"Xin the Weaponmaster", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[26800] = {
					"Alliance Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[94816] = {
					"Togdrov", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[9499] = {
					"Plugger Spazzring", -- [1]
					"Blackrock Depths", -- [2]
				},
				[81818] = {
					"Legion Hunter-Killer", -- [1]
					"Teron'gor's Confrontation", -- [2]
				},
				[61392] = {
					"Harthak Flameseeker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[165677] = {
					"Brittlebark Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[63106] = {
					"Sik'thik Swarmer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[97163] = {
					"Cursed Falke", -- [1]
					"Maw of Souls", -- [2]
				},
				[93830] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[59479] = {
					"Yan-Zhu the Uncasked", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[23175] = {
					"Tarren Mill Guardsman", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[181546] = {
					"Prototype of Renewal", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24722] = {
					"Fel Crystal", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[91539] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[60375] = {
					"Zandalari Skullcharger", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[176940] = {
					"Soulember", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[105122] = {
					"Stormweaver Ingrida", -- [1]
					"Shield's Rest", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[61453] = {
					"Mu'Shiba", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[17371] = {
					"Shadowmoon Warlock", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[120477] = {
					"Deep Stalker", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[36829] = {
					"Deathspeaker High Priest", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36957] = {
					"Kor'kron Reaver", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[24689] = {
					"Wretched Bruiser", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[181548] = {
					"Prototype of Absolution", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[29096] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[184791] = {
					"Inner Hatred", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[90269] = {
					"Tyrant Velhari", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[18093] = {
					"Tarren Mill Protector", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[126764] = {
					"Bladesworn Ravager", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[24559] = {
					"Warlord Salaris", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[181549] = {
					"Prototype of War", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56906] = {
					"Saboteur Kip'tilak", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[81065] = {
					"Risen Brute", -- [1]
					"Ashran", -- [2]
				},
				[1860] = {
					"Jhomthyk", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[122783] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[59480] = {
					"Brittle Skeleton", -- [1]
					"Scholomance", -- [2]
				},
				[70060] = {
					"Shadowed Voodoo Spirit", -- [1]
					"Throne of Thunder", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[95642] = {
					"Korvos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[90378] = {
					"Kilrogg Deadeye", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[112290] = {
					"Horrid Eagle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[24777] = {
					"Sunblade Sentinel", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[181551] = {
					"Prototype of Duty", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[173361] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[8902] = {
					"Shadowforge Citizen", -- [1]
					"Blackrock Depths", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[120473] = {
					"Tidescale Combatant", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[114548] = {
					"Rotsoul Giant", -- [1]
					"Trial of Valor", -- [2]
				},
				[18419] = {
					"Bloodwarder Greenkeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[184623] = {
					"Ancient Avian", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
				},
				[26801] = {
					"Horde Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[59778] = {
					"Krik'thik Striker", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
				},
				[159030] = {
					"Runestag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[31216] = {
					"Sabaozinho", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[117154] = {
					"Razorjaw Acolyte", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[72365] = {
					"Dragonmaw Cannoneer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[167119] = {
					"Beckoned Wraith", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168033] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19507] = {
					"Sunseeker Gene-Splicer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[105304] = {
					"Dominator Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[98973] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[120482] = {
					"Tidescale Seacaller", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[95630] = {
					"Construct Peacekeeper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[93023] = {
					"Siegemaster Mar'tak", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[52571] = {
					"Majordomo Staghelm", -- [1]
					"Firelands", -- [2]
				},
				[91541] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
				},
				[24690] = {
					"Wretched Husk", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[184627] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[74158] = {
					"Kor'kron Gunner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[93813] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[119795] = {
					"Hyrtir", -- [1]
					"Halls of Valor", -- [2]
				},
				[94607] = {
					"Gorebound Cauterizer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[82428] = {
					"Emberscale Ironflight", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[117264] = {
					"Maiden of Valor", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[92330] = {
					"Soul of Socrethar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[24561] = {
					"Yazzai", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[72367] = {
					"Dragonmaw Tidal Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[105383] = {
					"Corruptor Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[29153] = {
					"Animated Bones", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[93308] = {
					"Portal Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
				},
				[61399] = {
					"Glintrok Scout", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[94806] = {
					"Fel Hellweaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[69639] = {
					"Humming Crystal", -- [1]
					"Throne of Thunder", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[8892] = {
					"Anvilrage Footman", -- [1]
					"Blackrock Depths", -- [2]
				},
				[79534] = {
					"Iron Grunt", -- [1]
					"Defense of Karabor", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[91305] = {
					"Fel Iron Summoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[24684] = {
					"Sunblade Blood Knight", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[13179] = {
					"Wing Commander Guse", -- [1]
					"Alterac Valley", -- [2]
				},
				[182071] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[92523] = {
					"Vazeel'fazag", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[90284] = {
					"Iron Reaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[180690] = {
					"Vazzaren the Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[18420] = {
					"Sunseeker Geomancer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[73904] = {
					"Kor'kron Iron Sentinel", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176953] = {
					"Mawsworn Flamehand", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[26802] = {
					"Alliance Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[17624] = {
					"Laughing Skull Warden", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[112039] = {
					"Screeching Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[14773] = {
					"Iceblood Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[114538] = {
					"Kvaldir Spiritrender", -- [1]
					"Trial of Valor", -- [2]
				},
				[7800] = {
					"Mekgineer Thermaplugg", -- [1]
					"Gnomeregan", -- [2]
				},
				[29217] = {
					"Anub'ar Venomancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[2408] = {
					"Snapjaw", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[77232] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[19508] = {
					"Sunseeker Herbalist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[102253] = {
					"Understone Demolisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[182074] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[111528] = {
					"Deathroot Ancient", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[120188] = {
					"Wailing Soul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[177893] = {
					"Mawforged Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[71858] = {
					"Wavebinder Kardris", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176956] = {
					"Shadowsteel Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[56924] = {
					"Inflamed Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Eye of the Storm", -- [2]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[37217] = {
					"Precious", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[10364] = {
					"Yaelika Farclaw", -- [1]
					"Alterac Valley", -- [2]
				},
				[18311] = {
					"Ethereal Crypt Raider", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[29098] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[71603] = {
					"Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[71859] = {
					"Earthbreaker Haromm", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[151329] = {
					"Warden Skoldus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[71476] = {
					"Embodied Misery", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[105636] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[114537] = {
					"Helya", -- [1]
					"Trial of Valor", -- [2]
				},
				[10981] = {
					"Frost Wolf", -- [1]
					"Alterac Valley", -- [2]
				},
				[17397] = {
					"Shadowmoon Adept", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[94894] = {
					"Keen-Eyed Gronnstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
				},
				[17653] = {
					"Shadowmoon Channeler", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
				},
				[69383] = {
					"Quivering Blob", -- [1]
					"Throne of Thunder", -- [2]
				},
				[184126] = {
					"Defense Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[82425] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[48351] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
				},
				[56541] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[80818] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[93615] = {
					"Felborne Overfiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[18421] = {
					"Sunseeker Researcher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[68476] = {
					"Horridon", -- [1]
					"Throne of Thunder", -- [2]
				},
				[26803] = {
					"Horde Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[119977] = {
					"Stranglevine Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[70227] = {
					"Skittering Spiderling", -- [1]
					"Throne of Thunder", -- [2]
				},
				[165189] = {
					"Cuteness", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[93104] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[93616] = {
					"Dreadstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[114532] = {
					"Bonespeaker Soulbinder", -- [1]
					"Trial of Valor", -- [2]
				},
				[71770] = {
					"Kor'kron Ironblade", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[19509] = {
					"Sunseeker Harvester", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[59613] = {
					"Professor Slate", -- [1]
					"Scholomance", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95408] = {
					"Anetheron", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[119978] = {
					"Fulminating Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[177285] = {
					"Mawsworn Gatekeeper", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[60381] = {
					"Zandalari Infiltrator", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[127725] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[17429] = {
					"Fel Orc Neophyte", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[53087] = {
					"Right Foot", -- [1]
					"Firelands", -- [2]
				},
				[179963] = {
					"Terror Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[41570] = {
					"Magmaw", -- [1]
					"Blackwing Descent", -- [2]
				},
				[37091] = {
					"Deviate Plainstrider", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[6207] = {
					"Caverndeep Ambusher", -- [1]
					"Gnomeregan", -- [2]
				},
				[6223] = {
					"Leprous Defender", -- [1]
					"Gnomeregan", -- [2]
				},
				[37011] = {
					"The Damned", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[121003] = {
					"Rez the Tombwatcher", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[96756] = {
					"Ymiron, the Fallen King", -- [1]
					"Maw of Souls", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[118289] = {
					"Maiden of Vigilance", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
				},
				[17398] = {
					"Nascent Fel Orc", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[118700] = {
					"Felblight Stalker", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[59614] = {
					"Bored Student", -- [1]
					"Scholomance", -- [2]
				},
				[71454] = {
					"Malkorok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[17846] = {
					"Pit Spectator", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[121004] = {
					"Razorjaw Myrmidon", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[159415] = {
					"Brittlebark Trickster", -- [1]
					"Castle Nathria", -- [2]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[56927] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102302] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[18422] = {
					"Sunseeker Botanist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[36950] = {
					"Skybreaker Marine", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[19206] = {
					"Syth Shadow Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[94859] = {
					"Armored Skullsmasher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[117230] = {
					"Tugar Bloodtotem", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[175726] = {
					"Skyja", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[69905] = {
					"Gurubashi Berserker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[18934] = {
					"Durnholde Mage", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[71865] = {
					"Garrosh Hellscream", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[105393] = {
					"Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[119939] = {
					"Ghastly Bonewarden", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[59359] = {
					"Flesh Horror", -- [1]
					"Scholomance", -- [2]
				},
				[59487] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[36805] = {
					"Deathspeaker Servant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[63053] = {
					"Garalon's Leg", -- [1]
					"Heart of Fear", -- [2]
				},
				[70586] = {
					"Eternal Guardian", -- [1]
					"Throne of Thunder", -- [2]
				},
				[47714] = {
					"Vapor", -- [1]
					"Deadmines", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[115719] = {
					"Imp Servant", -- [1]
					"Faronaar", -- [2]
				},
				[52577] = {
					"Left Foot", -- [1]
					"Firelands", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[8983] = {
					"Golem Lord Argelmach", -- [1]
					"Blackrock Depths", -- [2]
				},
				[105906] = {
					"Eye of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[118703] = {
					"Felborne Botanist", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[184651] = {
					"Subjugator Zeltoth", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[36612] = {
					"Lord Marrowgar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[70587] = {
					"Shale Stalker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[121400] = {
					"Accusator Gnazh", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157828] = {
					"Ruinus Dredbat", -- [1]
					"Plaguefall", -- [2]
				},
				[92538] = {
					"Tarspitter Grub", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[166225] = {
					"Beckoned Doubt", -- [1]
					"Bastion Scenario", -- [2]
				},
				[106341] = {
					"Disturbed Tracker", -- [1]
					"Shield's Rest", -- [2]
				},
				[59360] = {
					"Meat Graft", -- [1]
					"Scholomance", -- [2]
				},
				[118704] = {
					"Dul'zak", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[17862] = {
					"Captain Skarloc", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[71160] = {
					"Iyyokuk the Lucid", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[48451] = {
					"Ol' Beaky", -- [1]
					"Deadmines", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[60480] = {
					"Titan Spark", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Theater of Pain", -- [2]
				},
				[17975] = {
					"High Botanist Freywinn", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[70247] = {
					"Venomous Head", -- [1]
					"Throne of Thunder", -- [2]
				},
				[56929] = {
					"Krik'thik Protectorate", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[118705] = {
					"Nal'asha", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[69821] = {
					"Thunder Lord", -- [1]
					"Throne of Thunder", -- [2]
				},
				[184143] = {
					"Hyperlight Archon", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[90296] = {
					"Soulbound Construct", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[99678] = {
					"Lingering Corruption", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[26805] = {
					"Alliance Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[60384] = {
					"Zandalari Pterror Wing", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173191] = {
					"Soulstalker V'lara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[76220] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Theater of Pain", -- [2]
				},
				[102298] = {
					"Dread Squallshaper", -- [1]
					"Azsuna", -- [2]
				},
				[72893] = {
					"Orgrimmar Peon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[62205] = {
					"Wing Leader Ner'onok", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[48450] = {
					"Sunwing Squawker", -- [1]
					"Deadmines", -- [2]
				},
				[118706] = {
					"Necrotic Spiderling", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[19511] = {
					"Nethervine Inciter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[60731] = {
					"Undying Shadows", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[157016] = {
					"Imperial Archivist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[119986] = {
					"Hellfire Infernal", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[166919] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[84155] = {
					"Risen Mage", -- [1]
					"Ashran", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93113] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[20343] = {
					"Charming Totem", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[93881] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[184659] = {
					"Dominated Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Theater of Pain", -- [2]
				},
				[130192] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[121011] = {
					"Tidescale Witch", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[76222] = {
					"Rallying Banner", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[58722] = {
					"Lilian Voss", -- [1]
					"Scholomance", -- [2]
				},
				[179433] = {
					"Vault Aegis", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[127233] = {
					"Flameweaver", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[8894] = {
					"Anvilrage Medic", -- [1]
					"Blackrock Depths", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[17400] = {
					"Felguard Annihilator", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[172888] = {
					"Lurking Alpha", -- [1]
					"Plaguefall", -- [2]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Theater of Pain", -- [2]
				},
				[64353] = {
					"Set'thik Gale-Slicer", -- [1]
					"Heart of Fear", -- [2]
				},
				[180567] = {
					"Frenzied Nightclaw", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[17848] = {
					"Lieutenant Drake", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[60386] = {
					"Zandalari Terror Rider", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17976] = {
					"Commander Sarannis", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[77180] = {
					"Emberscale Ironflight", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[64916] = {
					"Kor'thik Swarmguard", -- [1]
					"Heart of Fear", -- [2]
				},
				[73152] = {
					"Storeroom Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[114614] = {
					"Kvaldir Spiritrender", -- [1]
					"Trial of Valor", -- [2]
				},
				[36968] = {
					"Kor'kron Axethrower", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[176579] = {
					"Keeper Hazaduum", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53732] = {
					"Unbound Smoldering Elemental", -- [1]
					"Firelands", -- [2]
				},
				[115638] = {
					"Agatha", -- [1]
					"Faronaar", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[36626] = {
					"Festergut", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[178626] = {
					"Mawrat", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[19205] = {
					"Syth Arcane Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[19557] = {
					"Greater Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
				},
				[72351] = {
					"Dragonmaw Flagbearer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[81087] = {
					"Gor'vosh Necromancer", -- [1]
					"Ashran", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[34793] = {
					"Catapult", -- [1]
					"Isle of Conquest", -- [2]
				},
				[19512] = {
					"Nethervine Reaper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168973] = {
					"High Torturer Darithos", -- [1]
					"Castle Nathria", -- [2]
				},
				[70594] = {
					"Mist Lurker", -- [1]
					"Throne of Thunder", -- [2]
				},
				[168074] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Eye of Azshara", -- [2]
				},
				[116407] = {
					"Harjatan", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[53630] = {
					"Unstable Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[177500] = {
					"Corsair Brute", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[82418] = {
					"Black Iron Rageguard", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[53795] = {
					"Egg Pile", -- [1]
					"Firelands", -- [2]
				},
				[114360] = {
					"Hyrja", -- [1]
					"Trial of Valor", -- [2]
				},
				[75286] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[36969] = {
					"Skybreaker Rifleman", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[18309] = {
					"Ethereal Scavenger", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[115640] = {
					"Fuming Imp", -- [1]
					"Faronaar", -- [2]
				},
				[169823] = {
					"Gorm Behemoth", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[128142] = {
					"Voidling", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[177600] = {
					"Mawsworn Realmbreaker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[72131] = {
					"Blind Blademaster", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[92350] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[68036] = {
					"Durumu the Forgotten", -- [1]
					"Throne of Thunder", -- [2]
				},
				[173407] = {
					"Lord of Anguish", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56589] = {
					"Striker Ga'dok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[120808] = {
					"Lylth the Silent", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[73310] = {
					"Dragonmaw War Banner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[114361] = {
					"Hymdall", -- [1]
					"Trial of Valor", -- [2]
				},
				[118712] = {
					"Felstrider Enforcer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[179135] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[185181] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[48230] = {
					"Ogre Henchman", -- [1]
					"Deadmines", -- [2]
				},
				[115641] = {
					"Smoldering Imp", -- [1]
					"Faronaar", -- [2]
				},
				[69132] = {
					"High Priestess Mar'li", -- [1]
					"Throne of Thunder", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[17977] = {
					"Warp Splinter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17477] = {
					"Hellfire Imp", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[53094] = {
					"Patriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[118713] = {
					"Felstrider Orbcaster", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[98167] = {
					"Void Tendril", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[37098] = {
					"Val'kyr Herald", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[70341] = {
					"Tormented Spirit", -- [1]
					"Throne of Thunder", -- [2]
				},
				[115642] = {
					"Umbral Imp", -- [1]
					"Faronaar", -- [2]
				},
				[61347] = {
					"Kingsguard", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[59835] = {
					"Krik'thik Swarmer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[72947] = {
					"Kor'kron Demolisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37664] = {
					"Darkfallen Archmage", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37016] = {
					"Skybreaker Luminary", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[172899] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[18405] = {
					"Tempest-Forge Peacekeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[178018] = {
					"Vicious Ghoul", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[81091] = {
					"Shadowmoon Voidaxe", -- [1]
					"Defense of Karabor", -- [2]
				},
				[71923] = {
					"Bloodclaw", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[118714] = {
					"Hellblaze Temptress", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[19513] = {
					"Mutate Fear-Shrieker", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[93834] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[115643] = {
					"Imp Servant", -- [1]
					"Faronaar", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[183138] = {
					"Inchoate Shadow", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[179133] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[70236] = {
					"Zandalari Storm-Caller", -- [1]
					"Throne of Thunder", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53095] = {
					"Matriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[53223] = {
					"Flamewaker Beast Handler", -- [1]
					"Firelands", -- [2]
				},
				[61029] = {
					"Primal Fire Elemental", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[73414] = {
					"Kor'kron Reaper", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[118715] = {
					"Reanimated Templar", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24696] = {
					"Coilskar Witch", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[153451] = {
					"Kosarus the Fallen", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165060] = {
					"Animimic", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102300] = {
					"Raging Current", -- [1]
					"Azsuna", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162298] = {
					"Yulkatar the Cruel", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[185274] = {
					"Astral Particle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[64340] = {
					"Instructor Maltik", -- [1]
					"Heart of Fear", -- [2]
				},
				[73415] = {
					"Ichor of Y'Shaarj", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72903] = {
					"Kor'kron Siegemaster", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[118460] = {
					"Engine of Souls", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[118716] = {
					"Bilespray Lasher", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[59494] = {
					"Yeasty Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[82373] = {
					"Void Wolf", -- [1]
					"Eye of Azshara", -- [2]
				},
				[48338] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[91331] = {
					"Archimonde", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[8895] = {
					"Anvilrage Officer", -- [1]
					"Blackrock Depths", -- [2]
				},
				[75463] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[99307] = {
					"Skjal", -- [1]
					"Maw of Souls", -- [2]
				},
				[17978] = {
					"Thorngrin the Tender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[111405] = {
					"Shadow Pounder", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[104636] = {
					"Cenarius", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[18170] = {
					"Infinite Slayer", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[53206] = {
					"Hell Hound", -- [1]
					"Firelands", -- [2]
				},
				[102248] = {
					"Ravenous Hunter", -- [1]
					"Azsuna", -- [2]
				},
				[53096] = {
					"Fire Turtle Hatchling", -- [1]
					"Firelands", -- [2]
				},
				[118717] = {
					"Helblaze Imp", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[72358] = {
					"Kor'kron Cannon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[121021] = {
					"Shadowsworn Invader", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[37868] = {
					"Risen Archmage", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92612] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[80583] = {
					"Pale Gloomstalker", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[97259] = {
					"Blazing Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[82310] = {
					"Stonehide Riverbeast", -- [1]
					"Ashran", -- [2]
				},
				[59751] = {
					"Shado-Pan Warden", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[118462] = {
					"Soul Queen Dejahna", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[69834] = {
					"Lightning Guardian", -- [1]
					"Throne of Thunder", -- [2]
				},
				[180665] = {
					"Gibbering Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[94916] = {
					"Fel Touched Seer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[119742] = {
					"Felguard Invader", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[178539] = {
					"Mawsworn Eradicator", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[64358] = {
					"Set'thik Tempest", -- [1]
					"Heart of Fear", -- [2]
				},
				[19962] = {
					"Blue Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[37025] = {
					"Stinky", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[177004] = {
					"Tortured Amalgamation", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[2354] = {
					"Vicious Gray Bear", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[106354] = {
					"Automated Crusher", -- [1]
					"Shield's Rest", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
				},
				[173641] = {
					"Nathrian Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[118719] = {
					"Wyrmtongue Scavenger", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[185271] = {
					"Stellar Mote", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[24697] = {
					"Sister of Torment", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24761] = {
					"Brightscale Wyrm", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[178029] = {
					"Mawsworn Wingsoldier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[61434] = {
					"Sik'thik Vanguard", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[113089] = {
					"Defiled Keeper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[58856] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[16907] = {
					"Bleeding Hollow Peon", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[47162] = {
					"Glubtok", -- [1]
					"Deadmines", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[59368] = {
					"Krastinovian Carver", -- [1]
					"Scholomance", -- [2]
				},
				[59820] = {
					"Pandaren Cannoneer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[107459] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[59752] = {
					"Shado-Pan Ambusher", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[111554] = {
					"Felblaze Trickster", -- [1]
					"The Nighthold", -- [2]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174090] = {
					"Nathrian Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[113090] = {
					"Corrupted Gatewarden", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[71715] = {
					"Orgrimmar Faithful", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18171] = {
					"Infinite Defiler", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[17860] = {
					"Durnholde Veteran", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[8900] = {
					"Doomforge Arcanasmith", -- [1]
					"Blackrock Depths", -- [2]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[62511] = {
					"Amber-Shaper Un'sok", -- [1]
					"Heart of Fear", -- [2]
				},
				[156022] = {
					"Bubbling Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82378] = {
					"Moonbark Ancient", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61928] = {
					"Sik'thik Guardian", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[68397] = {
					"Lei Shen", -- [1]
					"Throne of Thunder", -- [2]
				},
				[123402] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[152594] = {
					"Broker Ve'ken", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165472] = {
					"Nathrian Siphoner", -- [1]
					"Castle Nathria", -- [2]
				},
				[96455] = {
					"Swirling Storms", -- [1]
					"Shield's Rest", -- [2]
				},
				[113091] = {
					"Tainted Plainstrider", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[155250] = {
					"Decayspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17491] = {
					"Laughing Skull Rogue", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[71479] = {
					"He Softfoot", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[185268] = {
					"Ebonsteel Construct", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[63592] = {
					"Set'thik Gustwing", -- [1]
					"Heart of Fear", -- [2]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				[119052] = {
					"War Banner", -- [1]
					"Warsong Gulch", -- [2]
				},
				[72350] = {
					"Dragonmaw Elite Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60009] = {
					"Feng the Accursed", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[166915] = {
					"Possessed Tender", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[122477] = {
					"F'harg", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[120770] = {
					"Felguard Destroyer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[113092] = {
					"Swarming Dread", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[164338] = {
					"Mawsworn Guard", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
				},
				[94697] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[118723] = {
					"Gazerax", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[28729] = {
					"Watcher Narjil", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[24698] = {
					"Ethereum Smuggler", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[74446] = {
					"Ghamoo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[28921] = {
					"Hadronox", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[120003] = {
					"Warlord Darjah", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[179124] = {
					"Shade of Destiny", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77037] = {
					"Black Iron Elite", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[170257] = {
					"Broker Ve'nott", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[72655] = {
					"Fragment of Pride", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[183669] = {
					"Fiendish Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[118724] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[63593] = {
					"Set'thik Zephyrian", -- [1]
					"Heart of Fear", -- [2]
				},
				[98761] = {
					"Skitzofists", -- [1]
					"Maw of Souls", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Theater of Pain", -- [2]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[8896] = {
					"Shadowforge Peasant", -- [1]
					"Blackrock Depths", -- [2]
				},
				[120516] = {
					"Razorjaw Swiftfin", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[17980] = {
					"Laj", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[9024] = {
					"Pyromancer Loregrain", -- [1]
					"Blackrock Depths", -- [2]
				},
				[71152] = {
					"Skeer the Bloodseeker", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[18172] = {
					"Infinite Saboteur", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[117957] = {
					"Tormented Soul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[59242] = {
					"Woven Boneguard", -- [1]
					"Scholomance", -- [2]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
				},
				[90316] = {
					"Shadow-Lord Iskar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[111047] = {
					"Parasitic Shadow Demon", -- [1]
					"The Nighthold", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[178041] = {
					"Mawsworn Shackler", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[69658] = {
					"Zeb'tula Raptor", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[23035] = {
					"Anzu", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[2385] = {
					"Foothill Stalker", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[155251] = {
					"Elder Longbranch", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80678] = {
					"Black Iron Flame Reaver", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[43119] = {
					"Spirit of Angerforge", -- [1]
					"Blackwing Descent", -- [2]
				},
				[77036] = {
					"Black Iron Summoner", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[63594] = {
					"Coagulated Amber", -- [1]
					"Heart of Fear", -- [2]
				},
				[19203] = {
					"Syth Fire Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[94924] = {
					"Iron Peon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[178043] = {
					"Mawsworn Lancer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[79824] = {
					"Shadowmoon Void-Reaver", -- [1]
					"Defense of Karabor", -- [2]
				},
				[172979] = {
					"Honeydew Sporeflutterer", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[71378] = {
					"Quilen Guardian", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[19964] = {
					"Red Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[173949] = {
					"Nathrian Soldier", -- [1]
					"Castle Nathria", -- [2]
				},
				[71405] = {
					"Set'thik Wind Wielder", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[74988] = {
					"Executioner Gore", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[69843] = {
					"Zao'cho", -- [1]
					"Throne of Thunder", -- [2]
				},
				[28730] = {
					"Watcher Gashra", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[74476] = {
					"Domina", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[70209] = {
					"Untrained Quilen", -- [1]
					"Throne of Thunder", -- [2]
				},
				[28922] = {
					"Anub'ar Crusher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[117402] = {
					"Felbound Pyromage", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[102336] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[17381] = {
					"The Maker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
				},
				[36478] = {
					"Soulguard Watchman", -- [1]
					"The Forge of Souls", -- [2]
				},
				[105419] = {
					"Dire Basilisk", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[118728] = {
					"Ghastly Bonewarden", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[76101] = {
					"Black Iron Engineer", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[102672] = {
					"Nythendra", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[164897] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[71380] = {
					"Animated Stone Mogu", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60396] = {
					"Emperor's Rage", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[53222] = {
					"Flamewaker Centurion", -- [1]
					"Firelands", -- [2]
				},
				[117193] = {
					"Agronox", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[118729] = {
					"Fallen Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[26683] = {
					"Frenzied Worgen", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165764] = {
					"Rockbound Vanquisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[79910] = {
					"Shimmerwing Moth", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[120777] = {
					"Guardian Sentry", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[111370] = {
					"Creature in the Shadows", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[117194] = {
					"Thrashbite the Scornful", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[72661] = {
					"Zeal", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[93392] = {
					"Captured Prisoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[69078] = {
					"Sul the Sandcrawler", -- [1]
					"Throne of Thunder", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[118730] = {
					"Soul Residue", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[59501] = {
					"Reanimated Corpse", -- [1]
					"Scholomance", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[173444] = {
					"Caramain", -- [1]
					"Castle Nathria", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[71734] = {
					"Sha of Pride", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[116939] = {
					"Fallen Avatar", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[71382] = {
					"Burial Urn", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[120778] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[72150] = {
					"Kor'kron Shadowmage", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[173445] = {
					"Sindrel", -- [1]
					"Castle Nathria", -- [2]
				},
				[72662] = {
					"Vanity", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[79827] = {
					"Void-Touched Seer", -- [1]
					"Defense of Karabor", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[79923] = {
					"Shimmerwing Mothling", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[28731] = {
					"Watcher Silthik", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[6225] = {
					"Mechano-Tank", -- [1]
					"Gnomeregan", -- [2]
				},
				[29051] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[71383] = {
					"Kor'thik Warcaller", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[120779] = {
					"Helblaze Felbringer", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
				},
				[53188] = {
					"Flamewaker Subjugator", -- [1]
					"Firelands", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[48229] = {
					"Kobold Digger", -- [1]
					"Deadmines", -- [2]
				},
				[10467] = {
					"Mana Tide Totem", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[37813] = {
					"Deathbringer Saurfang", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[63597] = {
					"Coagulated Amber", -- [1]
					"Heart of Fear", -- [2]
				},
				[43122] = {
					"Spirit of Corehammer", -- [1]
					"Blackwing Descent", -- [2]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
				},
				[63853] = {
					"Zar'thik Supplicant", -- [1]
					"Heart of Fear", -- [2]
				},
				[43778] = {
					"Foe Reaper 5000", -- [1]
					"Deadmines", -- [2]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[8897] = {
					"Doomforge Craftsman", -- [1]
					"Blackrock Depths", -- [2]
				},
				[72408] = {
					"Anti-Air Turret", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60398] = {
					"Emperor's Courage", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[176520] = {
					"Ocular Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[9025] = {
					"Lord Roccor", -- [1]
					"Blackrock Depths", -- [2]
				},
				[68313] = {
					"Roaming Fog", -- [1]
					"Throne of Thunder", -- [2]
				},
				[94693] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[119859] = {
					"Hellfire Infernal", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[179080] = {
					"Empowered Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[36724] = {
					"Servant of the Throne", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[77033] = {
					"Black Iron Siegebreaker", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[183688] = {
					"Stasis Trap", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[113103] = {
					"Corrupted Swoop", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[60397] = {
					"Emperor's Strength", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[37232] = {
					"Nerub'ar Broodling", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[59503] = {
					"Brittle Skeleton", -- [1]
					"Scholomance", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173280] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91349] = {
					"Mannoroth", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[60143] = {
					"Gara'jal the Spiritbinder", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[8901] = {
					"Anvilrage Reservist", -- [1]
					"Blackrock Depths", -- [2]
				},
				[60399] = {
					"Qin-xi", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[64068] = {
					"Mogu'shan Engine Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[71385] = {
					"Sri'thik Bombardier", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[72490] = {
					"Overseer Mojka", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[36597] = {
					"The Lich King", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36725] = {
					"Nerub'ar Broodkeeper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36853] = {
					"Sindragosa", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28732] = {
					"Anub'ar Warrior", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[72784] = {
					"Kor'kron Gunner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53617] = {
					"Molten Erupter", -- [1]
					"Firelands", -- [2]
				},
				[28924] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[3625] = {
					"Rarck", -- [1]
					"Alterac Valley", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[79577] = {
					"Riverwallower", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[171919] = {
					"Ayeleth's Torturer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[100820] = {
					"Spirit Wolf", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[72411] = {
					"Kor'kron Provisioner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[105427] = {
					"Skyfury Totem", -- [1]
					"Ashran", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[114922] = {
					"Dark Seraph", -- [1]
					"Trial of Valor", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[99541] = {
					"Risen Skulker", -- [1]
					"Eye of the Storm", -- [2]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[93931] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[71388] = {
					"Amber-Encased Kunchong", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60400] = {
					"Jan-xi", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[122850] = {
					"Umbral Guard", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[113106] = {
					"Sickly Cougar", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[72412] = {
					"Kor'kron Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178601] = {
					"Kevin's Oozeling", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[53224] = {
					"Flamewaker Taskmaster", -- [1]
					"Firelands", -- [2]
				},
				[94947] = {
					"Fel-Starved Trainee", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[94691] = {
					"Overgrown Larva", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[18431] = {
					"Ethereal Beacon", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[26685] = {
					"Massive Jormungar", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[74716] = {
					"Aqua Guardian", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[172047] = {
					"Illusionary Mauler", -- [1]
					"Spires of Ascension", -- [2]
				},
				[13218] = {
					"Grunnda Wolfheart", -- [1]
					"Alterac Valley", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[170417] = {
					"Animated Stygia", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76100] = {
					"Black Iron Alchemist", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[76585] = {
					"Ragewing the Untamed", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[184742] = {
					"Dominated Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[37502] = {
					"Nerub'ar Webweaver", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[79590] = {
					"Shadowmoon Ritualist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[71480] = {
					"Sun Tenderheart", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[74983] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[43125] = {
					"Spirit of Moltenfist", -- [1]
					"Blackwing Descent", -- [2]
				},
				[58108] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[173448] = {
					"Dragost", -- [1]
					"Castle Nathria", -- [2]
				},
				[72249] = {
					"Galakras", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[36961] = {
					"Skybreaker Sergeant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[171432] = {
					"Suppressor Hersi", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[180780] = {
					"Dreadmaw", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[53545] = {
					"Molten Spewer", -- [1]
					"Firelands", -- [2]
				},
				[69444] = {
					"Silver Covenant Scout", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[173973] = {
					"Nathrian Tracker", -- [1]
					"Castle Nathria", -- [2]
				},
				[62837] = {
					"Grand Empress Shek'zeer", -- [1]
					"Heart of Fear", -- [2]
				},
				[13152] = {
					"Commander Malgor", -- [1]
					"Alterac Valley", -- [2]
				},
				[102103] = {
					"Thorium Rocket Chicken", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[36855] = {
					"Lady Deathwhisper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28733] = {
					"Anub'ar Shadowcaster", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[26684] = {
					"Ravenous Furbolg", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[53619] = {
					"Druid of the Flame", -- [1]
					"Firelands", -- [2]
				},
				[28925] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[116691] = {
					"Belac", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[29117] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29119] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[70557] = {
					"Zandalari Prophet", -- [1]
					"Throne of Thunder", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[72927] = {
					"Kovok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37228] = {
					"Frostwarden Warrior", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[178071] = {
					"Maw Assassin", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[8898] = {
					"Anvilrage Marshal", -- [1]
					"Blackrock Depths", -- [2]
				},
				[173464] = {
					"Deplina", -- [1]
					"Castle Nathria", -- [2]
				},
				[74719] = {
					"Blindlight Rotmouth", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[99801] = {
					"Destructor Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[71392] = {
					"Shadow Ritualist Phylactery", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60402] = {
					"Zandalari Fire-Dancer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[71482] = {
					"Embodied Desperation", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[9026] = {
					"Overmaster Pyron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[165275] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[178072] = {
					"Anduin Wrynn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[73184] = {
					"Starved Yeti", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37533] = {
					"Rimefang", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[93913] = {
					"Fel Scorcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[26686] = {
					"Ferocious Rhino", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[165276] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[173466] = {
					"Fara", -- [1]
					"Castle Nathria", -- [2]
				},
				[74720] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[75980] = {
					"Blindlight Razorjaw", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[71393] = {
					"Mogu Shadow Ritualist", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[120789] = {
					"Lieutenant Silvermight", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[84190] = {
					"Boneshallow Spider", -- [1]
					"Ashran", -- [2]
				},
				[113111] = {
					"Saltscale Swarmer", -- [1]
					"Eye of Azshara", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[182169] = {
					"Lihuvim", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[73185] = {
					"Enraged Mushan Beast", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[176539] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[43127] = {
					"Spirit of Ironstar", -- [1]
					"Blackwing Descent", -- [2]
				},
				[118690] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[37116] = {
					"Skybreaker Sorcerer", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[74721] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[104154] = {
					"Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[10367] = {
					"Shrye Ragefist", -- [1]
					"Alterac Valley", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[165279] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[173469] = {
					"Kullan", -- [1]
					"Castle Nathria", -- [2]
				},
				[42362] = {
					"Drakonid Drudge", -- [1]
					"Blackwing Descent", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[43129] = {
					"Spirit of Shadowforge", -- [1]
					"Blackwing Descent", -- [2]
				},
				[183707] = {
					"Xy Spellslinger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[65522] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[28734] = {
					"Anub'ar Skirmisher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[59819] = {
					"Artillery", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[152995] = {
					"Warden of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29118] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[71395] = {
					"Modified Anima Golem", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[72355] = {
					"High Enforcer Thranok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[113113] = {
					"Essence of Nightmare", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184733] = {
					"Dominated Grunt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
				},
				[91103] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[43128] = {
					"Spirit of Anvilrage", -- [1]
					"Blackwing Descent", -- [2]
				},
				[29822] = {
					"Drakkari Fire Weaver", -- [1]
					"Gundrak", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Isle of Conquest", -- [2]
				},
				[178079] = {
					"The Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[79843] = {
					"Shadowmoon Zealot", -- [1]
					"Defense of Karabor", -- [2]
				},
				[152612] = {
					"Subjugator Klontzas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[80098] = {
					"Ironbarb Skyreaver", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[120793] = {
					"Mephistroth", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[184734] = {
					"Sacred Matrix Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[113626] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[74722] = {
					"Razorshell Snapjaw", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[73188] = {
					"Captive Cave Bat", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[26687] = {
					"Gortok Palehoof", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[184735] = {
					"Degeneration Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[53494] = {
					"Baleroc", -- [1]
					"Firelands", -- [2]
				},
				[157094] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[74980] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[76018] = {
					"Drakonid Monstrosity", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[71397] = {
					"Zar'thik Amber Priest", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[76260] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[72421] = {
					"Kor'kron Overseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[43130] = {
					"Spirit of Burningeye", -- [1]
					"Blackwing Descent", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[79589] = {
					"Shadowmoon Voidaxe", -- [1]
					"Eye of Azshara", -- [2]
				},
				[120097] = {
					"Twisted Nether-Mage", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[184737] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[94688] = {
					"Diseased Grub", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[48502] = {
					"Defias Enforcer", -- [1]
					"Deadmines", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[80172] = {
					"Bladespire Raider", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[176531] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[19969] = {
					"Green Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[184738] = {
					"Guardian Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[72929] = {
					"Sra'thik Amber-Master", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176538] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76773] = {
					"Black Iron Apprentice", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[69701] = {
					"Anima Golem", -- [1]
					"Throne of Thunder", -- [2]
				},
				[176537] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[69351] = {
					"Greater Cave Bat", -- [1]
					"Throne of Thunder", -- [2]
				},
				[13153] = {
					"Commander Mulfort", -- [1]
					"Alterac Valley", -- [2]
				},
				[38125] = {
					"Ymirjar Deathbringer", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[43126] = {
					"Spirit of Thaurissan", -- [1]
					"Blackwing Descent", -- [2]
				},
				[153003] = {
					"Soul Fragment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114900] = {
					"Gripping Tentacle", -- [1]
					"Trial of Valor", -- [2]
				},
				[60576] = {
					"Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171431] = {
					"Suppressor Vellon", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[71477] = {
					"Embodied Gloom", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[157099] = {
					"Imperial Censor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93154] = {
					"Gorebound Crone", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[170418] = {
					"Goxul the Devourer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[73191] = {
					"Aqueous Defender", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[69352] = {
					"Vampiric Cave Bat", -- [1]
					"Throne of Thunder", -- [2]
				},
				[102368] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[111070] = {
					"Soul Fragment of Azzinoth", -- [1]
					"The Nighthold", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[14186] = {
					"Ravak Grimtotem", -- [1]
					"Alterac Valley", -- [2]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[8899] = {
					"Doomforge Dragoon", -- [1]
					"Blackrock Depths", -- [2]
				},
				[171433] = {
					"Suppressor Cer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[48505] = {
					"Defias Shadowguard", -- [1]
					"Deadmines", -- [2]
				},
				[180113] = {
					"Rattling Mage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102369] = {
					"Felstalker Ravener", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[75416] = {
					"Coldsnout Boar", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74728] = {
					"Twilight Lord Bathiel", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[74984] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
				},
				[116689] = {
					"Atrigan", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[170385] = {
					"Writhing Misery", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[27829] = {
					"Ebon Gargoyle", -- [1]
					"Warsong Gulch", -- [2]
				},
				[166452] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[58964] = {
					"Shirrogg", -- [1]
					"Twin Peaks", -- [2]
				},
				[93156] = {
					"Eredar Faithbreaker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[180786] = {
					"Binding of Misery", -- [1]
					"Halls of Atonement", -- [2]
				},
				[122333] = {
					"General Erodus", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[173953] = {
					"Loyal Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[102446] = {
					"Fel Lord Betrug", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[74729] = {
					"Voidwalker Minion", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[129050] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[123191] = {
					"Fel Hound", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[176556] = {
					"Alcruux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[71478] = {
					"Embodied Anguish", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[73194] = {
					"Kor'kron Iron Scorpion", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[125569] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[53616] = {
					"Kar the Everburning", -- [1]
					"Firelands", -- [2]
				},
				[28736] = {
					"Skittering Infector", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[37117] = {
					"Kor'kron Battle-Mage", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[153011] = {
					"Binder Baritas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14466] = {
					"Horde Battle Standard", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[37501] = {
					"Nerub'ar Champion", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[29120] = {
					"Anub'arak", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[42802] = {
					"Drakonid Slayer", -- [1]
					"Blackwing Descent", -- [2]
				},
				[180781] = {
					"Frothing Hound", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[62711] = {
					"Amber Monstrosity", -- [1]
					"Heart of Fear", -- [2]
				},
				[72427] = {
					"Orgrimmar Peon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[21250] = {
					"Pink Elekk", -- [1]
					"Blackrock Depths", -- [2]
				},
				[77034] = {
					"Black Iron Veteran", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[73195] = {
					"Kor'kron Jailer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102372] = {
					"Felhound Mage Slayer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[78314] = {
					"Glacial Icemaw", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[47739] = {
					"\"Captain\" Cookie", -- [1]
					"Deadmines", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[53786] = {
					"Blazing Monstrosity", -- [1]
					"Firelands", -- [2]
				},
				[92391] = {
					"Gorebound Bloodletter", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[157109] = {
					"Vampire Bat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77035] = {
					"Black Iron Dreadweaver", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[73452] = {
					"Harbinger of Y'Shaarj", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[153015] = {
					"Bound Soul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[79595] = {
					"Fluttering Teromoth", -- [1]
					"The Battle for Shattrath", -- [2]
				},
				[72658] = {
					"Amalgamated Hubris", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176562] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[68078] = {
					"Iron Qon", -- [1]
					"Throne of Thunder", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[72941] = {
					"Dragonmaw Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[73197] = {
					"Lesser Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[112739] = {
					"Shadowy Overfiend", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[71504] = {
					"Siegecrafter Blackfuse", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61341] = {
					"Mounted Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[72498] = {
					"Theramore Citizen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[74989] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[19843] = {
					"Nethervine Trickster", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[126333] = {
					"Felseeker Ritualist", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[2225] = {
					"Zora Guthrek", -- [1]
					"Alterac Valley", -- [2]
				},
				[68079] = {
					"Ro'shak", -- [1]
					"Throne of Thunder", -- [2]
				},
				[177588] = {
					"Lordaeron Footman", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[113093] = {
					"Infected Gazelle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[72942] = {
					"Dragonmaw Flagbearer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[53115] = {
					"Molten Lord", -- [1]
					"Firelands", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[111333] = {
					"Taintheart Trickster", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Kalimdor", -- [2]
				},
				[102194] = {
					"Dread Crewman", -- [1]
					"Azsuna", -- [2]
				},
				[167935] = {
					"Contagious Droplet", -- [1]
					"Plaguefall", -- [2]
				},
				[156023] = {
					"Miniature Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102273] = {
					"Doomguard Infiltrator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[93162] = {
					"Umbral Supplicant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[72943] = {
					"Dragonmaw Proto-Drake", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[115905] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[122851] = {
					"Umbral Archer", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[73967] = {
					"Niuzao", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[47403] = {
					"Defias Reaper", -- [1]
					"Deadmines", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[8893] = {
					"Anvilrage Soldier", -- [1]
					"Blackrock Depths", -- [2]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[21891] = {
					"Avian Ripper", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[71408] = {
					"Kun-Da", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60410] = {
					"Elegon", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[117827] = {
					"Grand Inquisitor", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[177592] = {
					"Silver Hand Betrayer", -- [1]
					"Stratholme - Paladin Class Mount", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[36564] = {
					"Soulguard Bonecaster", -- [1]
					"The Forge of Souls", -- [2]
				},
				[37229] = {
					"Frostwarden Sorceress", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53116] = {
					"Unbound Blazing Elemental", -- [1]
					"Firelands", -- [2]
				},
				[53244] = {
					"Flamewaker Trainee", -- [1]
					"Firelands", -- [2]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Kalimdor", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[71153] = {
					"Hisek the Swarmkeeper", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[175546] = {
					"Timecap'n Hooktail", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[113088] = {
					"Corrupted Feeler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[71921] = {
					"Darkfang", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[48284] = {
					"Mining Powder", -- [1]
					"Deadmines", -- [2]
				},
				[177594] = {
					"Mawsworn Agonizer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[19204] = {
					"Syth Frost Elemental", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[72945] = {
					"Dragonmaw Bonecrusher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[42768] = {
					"Maimgor", -- [1]
					"Blackwing Descent", -- [2]
				},
				[63048] = {
					"Kor'thik Slicer", -- [1]
					"Heart of Fear", -- [2]
				},
				[102337] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[176571] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[64947] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Silvershard Mines", -- [2]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[64357] = {
					"Kor'thik Swarmer", -- [1]
					"Heart of Fear", -- [2]
				},
				[71154] = {
					"Ka'roz the Locust", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[120550] = {
					"Wrathguard Invader", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[176572] = {
					"Mawsworn Accursed", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[72434] = {
					"Treasury Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[97260] = {
					"Arcane Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[62397] = {
					"Wind Lord Mel'jarak", -- [1]
					"Heart of Fear", -- [2]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[65402] = {
					"Gurthan Swiftblade", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[62543] = {
					"Blade Lord Ta'yak", -- [1]
					"Heart of Fear", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[10404] = {
					"Pustulating Horror", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[71155] = {
					"Korven the Prime", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[92142] = {
					"Blademaster Jubei'thos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[176574] = {
					"Mawsworn Soulkeeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[71481] = {
					"Embodied Sorrow", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[105451] = {
					"Counterstrike Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[77042] = {
					"Sargerei Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[64917] = {
					"Sra'thik Ambercaller", -- [1]
					"Heart of Fear", -- [2]
				},
				[168113] = {
					"General Grashaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
				},
				[64355] = {
					"Kor'thik Silentwing", -- [1]
					"Heart of Fear", -- [2]
				},
				[178427] = {
					"Deadsoul Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178623] = {
					"Mawsworn Guard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[71156] = {
					"Kaz'tik the Manipulator", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[180159] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176576] = {
					"Mawsworn Pyremancer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[62691] = {
					"Living Amber", -- [1]
					"Heart of Fear", -- [2]
				},
				[92911] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[122369] = {
					"Chief Engineer Ishkar", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[178624] = {
					"Mawsworn Sentry", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179136] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[61436] = {
					"Sik'thik Bladedancer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[176577] = {
					"Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[177601] = {
					"Mawsworn Invoker", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[121498] = {
					"Twilight Soul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[178625] = {
					"Mawsworn Archer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[71157] = {
					"Xaril the Poisoned Mind", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[175616] = {
					"Zo'phex", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[92144] = {
					"Dia Darkwhisper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[176578] = {
					"Vault Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[72357] = {
					"Lieutenant Krugruk", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[109804] = {
					"Plasma Sphere", -- [1]
					"The Nighthold", -- [2]
				},
				[53134] = {
					"Ancient Core Hound", -- [1]
					"Firelands", -- [2]
				},
				[183745] = {
					"Acquisitions Automa", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[114923] = {
					"Shatterbone Skeleton", -- [1]
					"Trial of Valor", -- [2]
				},
				[177877] = {
					"Desiccated Magus", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169925] = {
					"Begrudging Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[111852] = {
					"Rothos", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[71158] = {
					"Rik'kal the Dissector", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[171461] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[76021] = {
					"Kyrak", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[92913] = {
					"Gorebound Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[53119] = {
					"Flamewaker Forward Guard", -- [1]
					"Firelands", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[37123] = {
					"Captain Brandon", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53631] = {
					"Cinderweb Spiderling", -- [1]
					"Firelands", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[54015] = {
					"Majordomo Staghelm", -- [1]
					"Firelands", -- [2]
				},
				[54143] = {
					"Molten Flamefather", -- [1]
					"Firelands", -- [2]
				},
				[92146] = {
					"Gurtogg Bloodboil", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[47296] = {
					"Helix Gearbreaker", -- [1]
					"Deadmines", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[117484] = {
					"Jormog the Behemoth", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[120405] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[175559] = {
					"Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[17414] = {
					"Shadowmoon Technician", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[59518] = {
					"Bloated Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[177095] = {
					"Kyra", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[118374] = {
					"Captain Yathae Moonstrike", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[120556] = {
					"Dreadwing", -- [1]
					"Cathedral of Eternal Night", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[96754] = {
					"Harbaron", -- [1]
					"Maw of Souls", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[93171] = {
					"Skeletal Gryphon", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[64341] = {
					"Instructor Zarik", -- [1]
					"Heart of Fear", -- [2]
				},
				[105968] = {
					"Spectral Windshaper", -- [1]
					"Shield's Rest", -- [2]
				},
				[53120] = {
					"Flamewaker Pathfinder", -- [1]
					"Firelands", -- [2]
				},
				[29097] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[127723] = {
					"Imperator Deconix", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[71161] = {
					"Kil'ruk the Wind-Reaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176394] = {
					"P.O.S.T. Worker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[6235] = {
					"Electrocutioner 6000", -- [1]
					"Gnomeregan", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[89890] = {
					"Fel Lord Zakuun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[120449] = {
					"Defensive Countermeasure", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[177269] = {
					"So'leah", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[59519] = {
					"Stout Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[127724] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[69134] = {
					"Kazra'jin", -- [1]
					"Throne of Thunder", -- [2]
				},
				[111856] = {
					"Guardian Gorroc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[111022] = {
					"The Demon Within", -- [1]
					"The Nighthold", -- [2]
				},
				[177886] = {
					"Arthas Menethil", -- [1]
					"9.1 Andorhal - Kyrian Chapter Scenario", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[90409] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[93173] = {
					"Icebound Dreadnought", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[72954] = {
					"Kor'thik Honor Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[41442] = {
					"Atramedes", -- [1]
					"Blackwing Descent", -- [2]
				},
				[53121] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[102387] = {
					"Sael'orn", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[61567] = {
					"Vizier Jin'bak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[60047] = {
					"Amethyst Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[177613] = {
					"Burning Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[74746] = {
					"Bladespire Mauler", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[29216] = {
					"Anub'ar Guardian", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[46083] = {
					"Drakeadon Mongrel", -- [1]
					"Blackwing Descent", -- [2]
				},
				[69540] = {
					"Zeb'tula Raptor", -- [1]
					"Mogu Island Progression Events", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[91005] = {
					"Naraxas", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[114534] = {
					"Helhound", -- [1]
					"Trial of Valor", -- [2]
				},
				[115844] = {
					"Goroth", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[98293] = {
					"Saltsea Globule", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59520] = {
					"Fizzy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[94710] = {
					"Storm Drake Hunter", -- [1]
					"Shield's Rest", -- [2]
				},
				[156158] = {
					"Adjutant Felipos", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74747] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[111858] = {
					"Guardian Rurson", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[9545] = {
					"Grim Patron", -- [1]
					"Blackrock Depths", -- [2]
				},
				[71420] = {
					"Hungry Kunchong", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[103271] = {
					"Kraxa", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[76283] = {
					"Malefic Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[7603] = {
					"Leprous Assistant", -- [1]
					"Gnomeregan", -- [2]
				},
				[92041] = {
					"Bleeding Darkcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61056] = {
					"Primal Earth Elemental", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[93687] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[73724] = {
					"Zu Yin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[36998] = {
					"Skybreaker Protector", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37126] = {
					"Sister Svalna", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[167406] = {
					"Sire Denathrius", -- [1]
					"Castle Nathria", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[170451] = {
					"Mature Stellarwasp", -- [1]
					"Castle Nathria", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[8921] = {
					"Bloodhound", -- [1]
					"Blackrock Depths", -- [2]
				},
				[96759] = {
					"Helya", -- [1]
					"Maw of Souls", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[74380] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[170452] = {
					"Essence Orb", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[93688] = {
					"Forsaken Deathstalker", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[73725] = {
					"Xiang-Lin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[59521] = {
					"Bubbling Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[80703] = {
					"Windfury Totem", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[92038] = {
					"Salivating Bloodthirster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[17395] = {
					"Shadowmoon Summoner", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[111860] = {
					"Bo'lan the Marked", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[8035] = {
					"Dark Iron Land Mine", -- [1]
					"Gnomeregan", -- [2]
				},
				[168073] = {
					"Fallen Monk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[90485] = {
					"Felfire Artillery", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[66181] = {
					"Zar'thik Supplicant", -- [1]
					"Heart of Fear", -- [2]
				},
				[56706] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[176705] = {
					"Venza Goldfuse", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[72958] = {
					"Dragonmaw Tidal Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[19424] = {
					"Bleeding Hollow Tormentor", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[69375] = {
					"Hidden Fog", -- [1]
					"Throne of Thunder", -- [2]
				},
				[120463] = {
					"Undersea Custodian", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[114932] = {
					"Deepbrine Monstrosity", -- [1]
					"Trial of Valor", -- [2]
				},
				[37127] = {
					"Ymirjar Frostbinder", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53635] = {
					"Cinderweb Drone", -- [1]
					"Firelands", -- [2]
				},
				[178133] = {
					"Murkbrine Wavejumper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[13359] = {
					"Frostwolf Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				[69700] = {
					"Large Anima Golem", -- [1]
					"Throne of Thunder", -- [2]
				},
				[18404] = {
					"Bloodwarder Steward", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[24556] = {
					"Zelfan", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[72191] = {
					"Overlord Runthak", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61247] = {
					"Glintrok Greenhorn", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[23179] = {
					"Tarren Mill Protector", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[59522] = {
					"Sudsy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[111350] = {
					"Skittering Shadows", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[119796] = {
					"Fereki", -- [1]
					"Halls of Valor", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[112118] = {
					"Tainted Bloodpetal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[119938] = {
					"Reanimated Templar", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[120697] = {
					"Worshiper of Elune", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[7079] = {
					"Viscous Fallout", -- [1]
					"Gnomeregan", -- [2]
				},
				[114547] = {
					"Ancient Bonethrall", -- [1]
					"Trial of Valor", -- [2]
				},
				[105720] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[18312] = {
					"Ethereal Spellbinder", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[98919] = {
					"Seacursed Swiftblade", -- [1]
					"Maw of Souls", -- [2]
				},
				[61442] = {
					"Kuai the Brute", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[17380] = {
					"Broggok", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[119797] = {
					"Vetholnir", -- [1]
					"Halls of Valor", -- [2]
				},
				[103673] = {
					"Darkglare", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[122367] = {
					"Admiral Svirax", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[94832] = {
					"Gorebound Assassin", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[19016] = {
					"Hellfire Familiar", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
				},
				[177114] = {
					"Sylvanas Windrunner", -- [1]
					"9.1 Battle of Ardenweald", -- [2]
				},
				[45264] = {
					"Twilight Crossfire", -- [1]
					"The Bastion of Twilight", -- [2]
				},
				[8922] = {
					"Bloodhound Mastiff", -- [1]
					"Blackrock Depths", -- [2]
				},
				[105721] = {
					"Nightmare Ichor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[118518] = {
					"Priestess Lunaspyre", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[94285] = {
					"Fel Extractor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[127732] = {
					"Clobex", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102301] = {
					"Ice Block", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[113998] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
				},
				[48262] = {
					"Ogre Bodyguard", -- [1]
					"Deadmines", -- [2]
				},
				[72194] = {
					"Hellscream Demolisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[94018] = {
					"Shadow Burster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[76801] = {
					"Ragewing Whelp", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[94802] = {
					"Voidscribe Aathalos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[105299] = {
					"Recursive Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[114288] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[102395] = {
					"Infiltrator Assassin", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[176605] = {
					"Soul Shard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[97185] = {
					"The Grimewalker", -- [1]
					"Maw of Souls", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[91646] = {
					"Grim Collaborator", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[75522] = {
					"Bloodtail Grouper", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[18341] = {
					"Pandemonius", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[75642] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[62633] = {
					"Sik'thik Builder", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[72451] = {
					"Kor'kron Dark Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[94779] = {
					"Sovokk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[103459] = {
					"Rockback Snapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[61216] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[95632] = {
					"Sargerei Enforcer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[111354] = {
					"Taintheart Befouler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[63808] = {
					"Faintly Glowing Gem", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[53187] = {
					"Flamewaker Animator", -- [1]
					"Firelands", -- [2]
				},
				[73884] = {
					"Iron Shadowskulker", -- [1]
					"Defense of Karabor", -- [2]
				},
				[114712] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[2350] = {
					"Forest Creeper", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[104956] = {
					"Warlord Volund", -- [1]
					"Shield's Rest", -- [2]
				},
				[72452] = {
					"Kor'kron Dire Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[70245] = {
					"Training Dummy", -- [1]
					"Throne of Thunder", -- [2]
				},
				[122104] = {
					"Portal Keeper Hasabel", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[18313] = {
					"Ethereal Sorcerer", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[24555] = {
					"Garaxxas", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[102397] = {
					"Wrathlord Bulwark", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59461] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[111355] = {
					"Taintheart Tormenter", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[24715] = {
					"High Explosive Sheep", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[18343] = {
					"Tavarok", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[91648] = {
					"Somber Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[59458] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[38154] = {
					"Warhawk", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[58757] = {
					"Scholomance Acolyte", -- [1]
					"Scholomance", -- [2]
				},
				[62980] = {
					"Imperial Vizier Zor'lok", -- [1]
					"Heart of Fear", -- [2]
				},
				[61387] = {
					"Quilen Guardian", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[56865] = {
					"Aqua Dancer", -- [1]
					"Kalimdor", -- [2]
				},
				[93952] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[102398] = {
					"Blazing Infernal", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[92554] = {
					"Mek'barash", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[56637] = {
					"Ook-Ook", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[91543] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[64132] = {
					"Amber Growth", -- [1]
					"Heart of Fear", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[56867] = {
					"Fiery Trickster", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[172005] = {
					"Furrowed Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76037] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59460] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[72966] = {
					"Resonating Amber", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[53127] = {
					"Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[90114] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[37003] = {
					"Skybreaker Vindicator", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[61701] = {
					"Sik'thik Warrior", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[53639] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[6212] = {
					"Dark Iron Agent", -- [1]
					"Gnomeregan", -- [2]
				},
				[178661] = {
					"Mawsworn Interceptor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[29063] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[56631] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[76038] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[6232] = {
					"Arcane Nullifier X-21", -- [1]
					"Gnomeregan", -- [2]
				},
				[72455] = {
					"Overseer Komak", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[29264] = {
					"Spirit Wolf", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[94995] = {
					"Graggra", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[73223] = {
					"Pterrordax", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37132] = {
					"Ymirjar Battle-Maiden", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[102400] = {
					"Eredar Shadow Mender", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[59980] = {
					"Meat Graft", -- [1]
					"Scholomance", -- [2]
				},
				[183429] = {
					"Ebon Chainguard", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[56764] = {
					"Consuming Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[98693] = {
					"Shackled Servitor", -- [1]
					"Maw of Souls", -- [2]
				},
				[120060] = {
					"Felstone Wrathguard", -- [1]
					"Legion Ship - Vertical - HighMountain", -- [2]
				},
				[56912] = {
					"Krik'thik Engulfer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[58633] = {
					"Instructor Chillheart", -- [1]
					"Scholomance", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[17994] = {
					"Bloodwarder Falconer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[112733] = {
					"Venomhide Shadowspinner", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[72456] = {
					"Korgra the Snake", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[56765] = {
					"Destroying Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[36620] = {
					"Soulguard Adept", -- [1]
					"The Forge of Souls", -- [2]
				},
				[93955] = {
					"Delusional Zealot", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[185581] = {
					"Eternal Forger", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[70153] = {
					"Fungal Growth", -- [1]
					"Throne of Thunder", -- [2]
				},
				[53640] = {
					"Flamewaker Sentinel", -- [1]
					"Firelands", -- [2]
				},
				[184494] = {
					"Anduin's Doubt", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183398] = {
					"Ancient Sentinel", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[71433] = {
					"Spark of Life", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[100354] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[90432] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[23177] = {
					"Tarren Mill Lookout", -- [1]
					"The Escape from Durnholde", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Twin Peaks", -- [2]
				},
				[184961] = {
					"Gnarled Skitter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183498] = {
					"Illicit Collector", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[183499] = {
					"Hired Muscle", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183500] = {
					"Thieveing Agent", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[94724] = {
					"Bryanda", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[74505] = {
					"Thruk", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[47626] = {
					"Admiral Ripsnarl", -- [1]
					"Deadmines", -- [2]
				},
				[185346] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[183501] = {
					"Artificer Xy'mox", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[83719] = {
					"Wild Goreger", -- [1]
					"Ashran", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[48266] = {
					"Defias Cannon", -- [1]
					"Deadmines", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[64902] = {
					"Kor'thik Fleshrender", -- [1]
					"Heart of Fear", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[113920] = {
					"Flail of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[69131] = {
					"Frost King Malakk", -- [1]
					"Throne of Thunder", -- [2]
				},
				[183992] = {
					"Automated Defense Matrix", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["ui_parent_scale_tune"] = 1.562500034924597,
			["aura_stack_anchor"] = {
				["y"] = -2.503973007202148,
				["side"] = 7,
			},
			["patch_version"] = 18,
			["target_highlight_height"] = 31,
			["target_highlight_alpha"] = 1,
			["aura_width2"] = 18.76195335388184,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["aura_timer_text_font"] = "Accidental Presidency",
			["extra_icon_auras"] = {
				642, -- [1]
			},
			["extra_icon_timer_size"] = 12.20983505249023,
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Attacking Specific Unit"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Execute Range"] = 1,
				["Combo Points"] = 6,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
			},
			["not_affecting_combat_alpha"] = 0.5999999642372131,
			["auto_toggle_friendly"] = {
				["arena"] = true,
				["cities"] = false,
				["world"] = false,
			},
		},
		["Main Profile"] = {
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
					},
					["version"] = -1,
					["Name"] = "Unit - Important [Plater]",
					["NpcNames"] = {
						"164362", -- [1]
						"168882", -- [2]
						"168988", -- [3]
						"170234", -- [4]
						"165905", -- [5]
						"170452", -- [6]
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						323149, -- [1]
						324392, -- [2]
						340544, -- [3]
						342189, -- [4]
						333227, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
						350687, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
						337220, -- [1]
						337253, -- [2]
						337251, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
					["SpellIds"] = {
						332329, -- [1]
						320103, -- [2]
						321406, -- [3]
						335817, -- [4]
						321061, -- [5]
						320141, -- [6]
						326171, -- [7]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996691,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1060,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
						350421, -- [59]
						352158, -- [60]
						349985, -- [61]
						329239, -- [62]
						328400, -- [63]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						320170, -- [1]
						320171, -- [2]
						320462, -- [3]
						330712, -- [4]
						332170, -- [5]
						333875, -- [6]
						326836, -- [7]
						342135, -- [8]
						333861, -- [9]
						341969, -- [10]
						317963, -- [11]
						327481, -- [12]
						328331, -- [13]
						322614, -- [14]
						325701, -- [15]
						326438, -- [16]
						323538, -- [17]
						321764, -- [18]
						296523, -- [19]
						330755, -- [20]
						295929, -- [21]
						296019, -- [22]
						335685, -- [23]
						170751, -- [24]
						342207, -- [25]
						350554, -- [26]
						348513, -- [27]
						351779, -- [28]
						328180, -- [29]
						319898, -- [30]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = true,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Main Target [P]",
					["NpcNames"] = {
						"156212", -- [1]
						"168098", -- [2]
						179124, -- [3]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Unit - Health Markers [P]",
					["NpcNames"] = {
						"164451", -- [1]
						"164463", -- [2]
						"164461", -- [3]
						"165946", -- [4]
						"164501", -- [5]
						"164218", -- [6]
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						323489, -- [1]
						323496, -- [2]
						319941, -- [3]
						319592, -- [4]
						334266, -- [5]
						325258, -- [6]
						334913, -- [7]
						326221, -- [8]
						322936, -- [9]
						323236, -- [10]
						321834, -- [11]
						336752, -- [12]
						325418, -- [13]
						324667, -- [14]
						327233, -- [15]
						324368, -- [16]
						324205, -- [17]
						323943, -- [18]
						319713, -- [19]
						320596, -- [20]
						320729, -- [21]
						323608, -- [22]
						330614, -- [23]
						320063, -- [24]
						332708, -- [25]
						334023, -- [26]
						317231, -- [27]
						317943, -- [28]
						320966, -- [29]
						334053, -- [30]
						328458, -- [31]
						321968, -- [32]
						331718, -- [33]
						325793, -- [34]
						330453, -- [35]
						326997, -- [36]
						334051, -- [37]
						292903, -- [38]
						330843, -- [39]
						294173, -- [40]
						189200, -- [41]
						352833, -- [42]
						330403, -- [43]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
						"165560", -- [1]
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
				}, -- [17]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ShowTargeted = false; -- true or false; determines if the nameplate shoudl be shown if you have the unit targeted\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end    \n    \n    \nend",
					["Time"] = 1615512740,
					["url"] = "",
					["Icon"] = 644389,
					["Enabled"] = true,
					["Revision"] = 310,
					["semver"] = "",
					["Author"] = "Evosparks-Area 52",
					["Desc"] = "Hide's nameplates based on the unit's name or npcID. Add the Unit Name or npcID as a trigger.",
					["NpcNames"] = {
						"169925", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Hide waiter npc",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end    \n    \n    \nend",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1626467946,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1162,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355571, -- [2]
						355787, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1625696653,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 836,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						354173, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Name"] = "Frame Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Key"] = "targetFrameHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [22]
			},
			["aura2_y_offset"] = 5,
			["health_animation_time_dilatation"] = 3.989999771118164,
			["npc_cache"] = {
				[65414] = {
					"Ethereal Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[16523] = {
					"Shattered Hand Savage", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[24777] = {
					"Sunblade Sentinel", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[29064] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29128] = {
					"Anub'ar Prime Guard", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[80649] = {
					"Black Iron Wyrmcaller", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[97285] = {
					"Wind Rush Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[18315] = {
					"Ethereal Theurgist", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[77579] = {
					"Mongrethod", -- [1]
					"Teron'gor's Confrontation", -- [2]
				},
				[61448] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[37134] = {
					"Ymirjar Huntress", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53642] = {
					"Cinderweb Spinner", -- [1]
					"Firelands", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[175091] = {
					"Necrotic Droplet", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164342] = {
					"Mawsworn Defender", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[27977] = {
					"Krystallus", -- [1]
					"Halls of Stone", -- [2]
				},
				[164343] = {
					"Mawsworn Debilitator", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[101639] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[20875] = {
					"Negaton Screamer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[100360] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[164345] = {
					"Scavenging Soul Eater", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[25354] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[162298] = {
					"Yulkatar the Cruel", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[17356] = {
					"Creeping Ooze", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[17420] = {
					"Shattered Hand Heathen", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[36880] = {
					"Decaying Colossus", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[164348] = {
					"Wandering Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[79631] = {
					"Iron Shieldbearer", -- [1]
					"Defense of Karabor", -- [2]
				},
				[100362] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[59915] = {
					"Jasper Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[60043] = {
					"Jade Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[79632] = {
					"Grom'kar Grunt", -- [1]
					"Defense of Karabor", -- [2]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				[164351] = {
					"Fading Shade", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[173053] = {
					"Afterimage of Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[167935] = {
					"Contagious Droplet", -- [1]
					"Plaguefall", -- [2]
				},
				[24715] = {
					"High Explosive Sheep", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[53901] = {
					"Unstable Magma", -- [1]
					"Firelands", -- [2]
				},
				[79633] = {
					"Iron Boltblaster", -- [1]
					"Defense of Karabor", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168960] = {
					"Fulfir the Scarred", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[166913] = {
					"Corrupted Guardian", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[17357] = {
					"Creeping Oozeling", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
				},
				[173568] = {
					"Anima Crazed Worker", -- [1]
					"Castle Nathria", -- [2]
				},
				[174592] = {
					"Territorial Wader", -- [1]
					"Theater of Pain", -- [2]
				},
				[166914] = {
					"Fallen Keeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[171521] = {
					"Dread Evoker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[168962] = {
					"Reborn Phoenix", -- [1]
					"Castle Nathria", -- [2]
				},
				[56717] = {
					"Hoptallus", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[53006] = {
					"Spirit Link Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[53134] = {
					"Ancient Core Hound", -- [1]
					"Firelands", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[169476] = {
					"Highway Serf", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166917] = {
					"Grove Wrecker", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[102158] = {
					"Congealed Goo", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[94224] = {
					"Petrifying Totem", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[27979] = {
					"Forged Iron Trogg", -- [1]
					"Halls of Stone", -- [2]
				},
				[75285] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[168966] = {
					"Brightsparkle", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[56718] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[36627] = {
					"Rotface", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28619] = {
					"Web Wrap", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[61453] = {
					"Mu'Shiba", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[37011] = {
					"The Damned", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[168967] = {
					"Gerwyn", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[74518] = {
					"Executioner Gore", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[103695] = {
					"Corruption Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166920] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[131601] = {
					"Executive Chef Daniel", -- [1]
					"Waycrest Manor", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[166921] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[119052] = {
					"War Banner", -- [1]
					"Isle of Conquest", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[137233] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[129802] = {
					"Earthrager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[18318] = {
					"Sethekk Initiate", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[26636] = {
					"Risen Drakkari Soulmage", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[37012] = {
					"Ancient Skeletal Soldier", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53648] = {
					"Inferno Hawk", -- [1]
					"Firelands", -- [2]
				},
				[13448] = {
					"Sergeant Yazra Bloodsnarl", -- [1]
					"Alterac Valley", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167949] = {
					"Plague-Ridden Survivor", -- [1]
					"Plaguefall", -- [2]
				},
				[168973] = {
					"High Torturer Darithos", -- [1]
					"Castle Nathria", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131607] = {
					"Sauciere Samuel", -- [1]
					"Waycrest Manor", -- [2]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[81432] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[28684] = {
					"Krik'thir the Gatewatcher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[83480] = {
					"Black Iron Wyrm Rider", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[54161] = {
					"Flame Archon", -- [1]
					"Firelands", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[76314] = {
					"Sentry Cannon", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[26125] = {
					"Boneface", -- [1]
					"Alterac Valley", -- [2]
				},
				[131611] = {
					"Roast Chef Rhonda", -- [1]
					"Waycrest Manor", -- [2]
				},
				[109075] = {
					"Parasitic Lasher", -- [1]
					"The Nighthold", -- [2]
				},
				[18319] = {
					"Time-Lost Scryer", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[86809] = {
					"Grom'kar Incinerator", -- [1]
					"Iron Docks", -- [2]
				},
				[37782] = {
					"Flesh-eating Insect", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[101398] = {
					"Psyfiend", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[166933] = {
					"Ventun the Ravenous", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[27597] = {
					"Hulking Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[174100] = {
					"Nathrian Singuard", -- [1]
					"Castle Nathria", -- [2]
				},
				[27981] = {
					"Malformed Ooze", -- [1]
					"Halls of Stone", -- [2]
				},
				[166934] = {
					"Lor the Loyal", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19919] = {
					"Thorn Lasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				[102679] = {
					"Ysondre", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59794] = {
					"Krik'thik Disruptor", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[44566] = {
					"Ozumat", -- [1]
					"Throne of the Tides", -- [2]
				},
				[18320] = {
					"Time-Lost Shadowmage", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[134691] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[102681] = {
					"Taerar", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[37144] = {
					"Skybreaker Marksman", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[26830] = {
					"Risen Drakkari Death Knight", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[27598] = {
					"Fetid Troll Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[102682] = {
					"Lethon", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[60051] = {
					"Cobalt Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[48278] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Alterac Valley", -- [2]
				},
				[14185] = {
					"Najak Hexxen", -- [1]
					"Alterac Valley", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[53141] = {
					"Molten Surger", -- [1]
					"Firelands", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[102683] = {
					"Emeriss", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[16593] = {
					"Shattered Hand Brawler", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[20880] = {
					"Eredar Deathbringer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[21136] = {
					"Infinite Chronomancer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[139304] = {
					"Solid Snake", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[21904] = {
					"Avian Warhawk", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[48279] = {
					"Goblin Overseer", -- [1]
					"Deadmines", -- [2]
				},
				[30414] = {
					"Forgotten One", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[18321] = {
					"Sethekk Talon Lord", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[26639] = {
					"Drakkari Shaman", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[37146] = {
					"Kor'kron Sniper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Alterac Valley", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[11946] = {
					"Drek'Thar", -- [1]
					"Alterac Valley", -- [2]
				},
				[175652] = {
					"Lord of Woe", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[24656] = {
					"Fizzle", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[16594] = {
					"Shadowmoon Acolyte", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[37531] = {
					"Frostwarden Handler", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[20881] = {
					"Unbound Devastator", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[75814] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[21137] = {
					"Infinite Assassin", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[17938] = {
					"Coilfang Observer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[173609] = {
					"Nathrian Conservator", -- [1]
					"Castle Nathria", -- [2]
				},
				[18322] = {
					"Sethekk Ravenguard", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[61334] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[37148] = {
					"Skybreaker Summoner", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37532] = {
					"Frostwing Whelp", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[19218] = {
					"Gatewatcher Gyro-Kill", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[77096] = {
					"Vilemaw Hatchling", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[27600] = {
					"Risen Shadowcaster", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[27984] = {
					"Dark Rune Stormcaller", -- [1]
					"Halls of Stone", -- [2]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
				},
				[79912] = {
					"Commander Tharbek", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[56472] = {
					"Fragrant Lotus", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[173613] = {
					"Nathrian Registrar", -- [1]
					"Castle Nathria", -- [2]
				},
				[80936] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[14282] = {
					"Frost Wolf Bloodhound", -- [1]
					"Alterac Valley", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[37149] = {
					"Kor'kron Necrolyte", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[174126] = {
					"Baron Duskhollow", -- [1]
					"Castle Nathria", -- [2]
				},
				[37533] = {
					"Rimefang", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[20882] = {
					"Skulking Witch", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[80937] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[17427] = {
					"Shattered Hand Archer", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[112162] = {
					"Grisly Trapper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[136250] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[30416] = {
					"Bound Fire Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[80938] = {
					"Grom'kar Hulk", -- [1]
					"Grimrail Depot", -- [2]
				},
				[18323] = {
					"Sethekk Guard", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[37022] = {
					"Blighted Abomination", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[37534] = {
					"Spinestalker", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37662] = {
					"Darkfallen Commander", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[62360] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[164406] = {
					"Shriekwing", -- [1]
					"Castle Nathria", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[27985] = {
					"Iron Golem Custodian", -- [1]
					"Halls of Stone", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83755] = {
					"Dragonspawn Refugee", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[164407] = {
					"Sludgefist", -- [1]
					"Castle Nathria", -- [2]
				},
				[80940] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[61337] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[37023] = {
					"Plague Scientist", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[174134] = {
					"Lord Evershade", -- [1]
					"Castle Nathria", -- [2]
				},
				[37663] = {
					"Darkfallen Noble", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[111398] = {
					"Nightmare Amalgamation", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[83757] = {
					"Dragonspawn Refugee", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[56731] = {
					"Habanero Brew", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[61338] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37664] = {
					"Darkfallen Archmage", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[167485] = {
					"Starving Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[32593] = {
					"Skittering Swarmer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[61339] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[167999] = {
					"Echo of Sin", -- [1]
					"Castle Nathria", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24723] = {
					"Selin Fireheart", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[75058] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[37665] = {
					"Darkfallen Lieutenant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[152644] = {
					"Deadsoul Drifter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17621] = {
					"Heathen Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[99629] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[83761] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[18325] = {
					"Sethekk Prophet", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[61340] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37026] = {
					"Skybreaker Sorcerer", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[99630] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[83762] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[168004] = {
					"Empowered Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83763] = {
					"Grom'kar Technician", -- [1]
					"Iron Docks", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[60701] = {
					"Zian of the Endless Shadow", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[56862] = {
					"Drunken Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[61341] = {
					"Mounted Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37027] = {
					"Skybreaker Hierophant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[111405] = {
					"Shadow Pounder", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[53791] = {
					"Blazing Monstrosity", -- [1]
					"Firelands", -- [2]
				},
				[20885] = {
					"Dalliah the Doomsayer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[155211] = {
					"Gormling Pest", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[153165] = {
					"Custodian Thonar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83765] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[48417] = {
					"Defias Blood Wizard", -- [1]
					"Deadmines", -- [2]
				},
				[173641] = {
					"Nathrian Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[56863] = {
					"Sleepy Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[18326] = {
					"Sethekk Shaman", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[37028] = {
					"Kor'kron Stalker", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[106545] = {
					"Empowered Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[59551] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[79672] = {
					"Grom'kar Shieldbearer", -- [1]
					"Defense of Karabor", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48418] = {
					"Defias Envoker", -- [1]
					"Deadmines", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"Theater of Pain", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173134] = {
					"Darksworn Goliath", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53793] = {
					"Harbinger of Flame", -- [1]
					"Firelands", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17623] = {
					"Reaver Guard", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48419] = {
					"Defias Miner", -- [1]
					"Deadmines", -- [2]
				},
				[153174] = {
					"Watchers of Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174161] = {
					"Lady Sinsear", -- [1]
					"Castle Nathria", -- [2]
				},
				[18327] = {
					"Time-Lost Controller", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37030] = {
					"Kor'kron Primalist", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[174162] = {
					"Countess Gloomveil", -- [1]
					"Castle Nathria", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[19735] = {
					"Tempest-Forge Destroyer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[48420] = {
					"Defias Digger", -- [1]
					"Deadmines", -- [2]
				},
				[81212] = {
					"Grimrail Overseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[61345] = {
					"Mogu Archer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[37031] = {
					"Kor'kron Oracle", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[111413] = {
					"Dark Devourers", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[53795] = {
					"Egg Pile", -- [1]
					"Firelands", -- [2]
				},
				[171095] = {
					"Grisly Colossus", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[84028] = {
					"Siegemaster Rokra", -- [1]
					"Iron Docks", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[59426] = {
					"Bopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[17816] = {
					"Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[75839] = {
					"Vigilant Kaathar", -- [1]
					"Auchindoun", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[56867] = {
					"Fiery Trickster", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[18328] = {
					"Sethekk Oracle", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[37032] = {
					"Kor'kron Defender", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[165469] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[77120] = {
					"Warlord Zaela", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[98363] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[19608] = {
					"Frayer Wildling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[164447] = {
					"Skuld", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[97084] = {
					"King Tor", -- [1]
					"Halls of Valor", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[61347] = {
					"Kingsguard", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[37033] = {
					"Kor'kron Invoker", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[169055] = {
					"Marrow Scraper", -- [1]
					"Theater of Pain", -- [2]
				},
				[165472] = {
					"Nathrian Siphoner", -- [1]
					"Castle Nathria", -- [2]
				},
				[99644] = {
					"Felguard Annihilator", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[132713] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[136297] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[165474] = {
					"Nathrian Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[99645] = {
					"Shadowmoon Technician", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[17817] = {
					"Greater Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[17881] = {
					"Aeonus", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[60708] = {
					"Meng the Demented", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[155238] = {
					"Guardian of the Leaf", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[37034] = {
					"Kor'kron Templar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[155239] = {
					"Forest Father", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[101950] = {
					"Mindflayer Kaahrj", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[74565] = {
					"Subjugator Kor'ul", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[19865] = {
					"Mutate Horror", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[60709] = {
					"Qiang the Merciless", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[24664] = {
					"Kael'thas Sunstrider", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[61989] = {
					"Cursed Mogu Sculpture", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[111933] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[172647] = {
					"Parasitic Infestor", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29335] = {
					"Anub'ar Webspinner", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[165481] = {
					"Court Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[60710] = {
					"Subetai the Swift", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[18394] = {
					"Ethereal Wraith", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[74569] = {
					"Restorative Waters", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[170093] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167022] = {
					"Battlesewn Render", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
				},
				[155250] = {
					"Decayspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[53545] = {
					"Molten Spewer", -- [1]
					"Firelands", -- [2]
				},
				[74570] = {
					"Ruination", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[46251] = {
					"Riverpaw Looter", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[21466] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[157300] = {
					"Tunk", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[18331] = {
					"Ethereal Darkcaster", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[37038] = {
					"Vengeful Fleshreaper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[18587] = {
					"Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[174194] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[75852] = {
					"Corrupted Healing Totem", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[46252] = {
					"Riverpaw Shaman", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[77132] = {
					"Sargerei Zealot", -- [1]
					"Auchindoun", -- [2]
				},
				[47404] = {
					"Defias Watcher", -- [1]
					"Deadmines", -- [2]
				},
				[104262] = {
					"Burning Ember", -- [1]
					"The Nighthold", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[62633] = {
					"Sik'thik Builder", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[46381] = {
					"Shifty Thief", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[167033] = {
					"Putrid Shambler", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[21467] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[138369] = {
					"Footbomb Hooligan", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[56747] = {
					"Gu Cloudstrike", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56875] = {
					"Krik'thik Demolisher", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[166523] = {
					"Vesper Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[13359] = {
					"Frostwolf Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[46254] = {
					"Hogger", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[59819] = {
					"Artillery", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[56876] = {
					"Krik'thik Sapper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[32665] = {
					"Crystalline Tangler", -- [1]
					"The Nexus", -- [2]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[75090] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[169601] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[174208] = {
					"Court Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[166019] = {
					"Shimmermoth", -- [1]
					"Theater of Pain", -- [2]
				},
				[168579] = {
					"Fen Hatchling", -- [1]
					"Plaguefall", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[81235] = {
					"Grimrail Laborer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[104014] = {
					"Dastardly Thief", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[81236] = {
					"Grimrail Technician", -- [1]
					"Grimrail Depot", -- [2]
				},
				[53167] = {
					"Unbound Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[98384] = {
					"Razormouth", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[175238] = {
					"Arch-Tyrant Zerios", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Theater of Pain", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[173191] = {
					"Soulstalker V'lara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[17694] = {
					"Shadowmoon Darkcaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[104016] = {
					"Covetous Hoarder", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[113998] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
				},
				[156814] = {
					"Gor'groth", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[19166] = {
					"Tempest-Forge Patroller", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[130635] = {
					"Stonefury", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[19486] = {
					"Sunseeker Chemist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[157328] = {
					"Darkmaul Channeler", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[23965] = {
					"Frost Tomb", -- [1]
					"Utgarde Keep", -- [2]
				},
				[167566] = {
					"Bleakwing Assassin", -- [1]
					"Castle Nathria", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167055] = {
					"Rot Flinger", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[66652] = {
					"Lesser Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[37813] = {
					"Deathbringer Saurfang", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[29340] = {
					"Anub'ar Brood Keeper", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[165521] = {
					"Lady Inerva Darkvein", -- [1]
					"Castle Nathria", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[17695] = {
					"Shattered Hand Assassin", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[60208] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[156821] = {
					"Darkmaul Shadowcaller", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[105301] = {
					"Expedient Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[95832] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[104534] = {
					"D'zorykx the Trapper", -- [1]
					"The Nighthold", -- [2]
				},
				[156825] = {
					"Darkmaul Centurion", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[56754] = {
					"Azure Serpent", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[46261] = {
					"Enraged Fire Elemental", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[102232] = {
					"Rockbound Trapper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[105304] = {
					"Dominator Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[85341] = {
					"Lunarfall Raccoon", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[30621] = {
					"Kötalkhän", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
				},
				[103769] = {
					"Xavius", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[46262] = {
					"Rumbling Earth", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[19168] = {
					"Sunseeker Astromage", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[56884] = {
					"Corrupted Taran Zhu", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[99676] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[20896] = {
					"Ethereum Slayer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29214] = {
					"Anub'ar Assassin", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[46263] = {
					"Slag Fury", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
				},
				[112474] = {
					"Corrupted Totem", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168098] = {
					"Empowered Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[64947] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
				},
				[163492] = {
					"Rabid Wolf", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[99678] = {
					"Lingering Corruption", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[97119] = {
					"Shroud Hound", -- [1]
					"Maw of Souls", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95072] = {
					"Greater Earth Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				[167078] = {
					"Wingflayer the Cruel", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[48440] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[20897] = {
					"Ethereum Wave-Caster", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96609] = {
					"Gildedfur Stag", -- [1]
					"Halls of Valor", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[48441] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
				},
				[102241] = {
					"Voracious Felmaw", -- [1]
					"Niskara", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[95843] = {
					"King Haldor", -- [1]
					"Halls of Valor", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96611] = {
					"Angerhoof Bull", -- [1]
					"Halls of Valor", -- [2]
				},
				[58807] = {
					"Vestige of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168110] = {
					"Empowered Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[52409] = {
					"Ragnaros", -- [1]
					"Firelands", -- [2]
				},
				[28384] = {
					"Lesser Air Elemental", -- [1]
					"Halls of Stone", -- [2]
				},
				[61239] = {
					"Glintrok Oracle", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[168111] = {
					"Empowered Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[54073] = {
					"Flamewaker Hound Master", -- [1]
					"Firelands", -- [2]
				},
				[29216] = {
					"Anub'ar Guardian", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[21346] = {
					"Sightless Eye", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168113] = {
					"General Grashaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[64183] = {
					"Enormous Stone Quilen", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
				},
				[102245] = {
					"Niskaran Alchemist", -- [1]
					"Niskara", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[104293] = {
					"Avatar of Shadow", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[112739] = {
					"Shadowy Overfiend", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[98919] = {
					"Seacursed Swiftblade", -- [1]
					"Maw of Souls", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
				},
				[12051] = {
					"Frostwolf Legionnaire", -- [1]
					"Alterac Valley", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[56890] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Plaguefall", -- [2]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[24674] = {
					"Phoenix", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[173238] = {
					"Deadsoul Strider", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[112741] = {
					"Wrathguard Decimator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[58810] = {
					"Fragment of Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[106087] = {
					"Elerethe Renferal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[152253] = {
					"The Tarragrue", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[100713] = {
					"Rockbait Fisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[48445] = {
					"Oaf Lackey", -- [1]
					"Deadmines", -- [2]
				},
				[56763] = {
					"Regenerating Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[61242] = {
					"Glintrok Ironhide", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
				},
				[111975] = {
					"Shadowfeather", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[101994] = {
					"Faceless Tendril", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[19428] = {
					"Cobalt Serpent", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[74353] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[173756] = {
					"Wodame", -- [1]
					"Castle Nathria", -- [2]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[56636] = {
					"Commander Ri'mok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[105322] = {
					"Deathglare Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[24675] = {
					"Phoenix Egg", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[20900] = {
					"Unchained Doombringer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[2630] = {
					"Earthbind Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[58812] = {
					"Hateful Essence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[153285] = {
					"Training Dummy", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[30114] = {
					"Twilight Initiate", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[17957] = {
					"Coilfang Champion", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[48447] = {
					"Monstrous Parrot", -- [1]
					"Deadmines", -- [2]
				},
				[56765] = {
					"Destroying Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[18341] = {
					"Pandemonius", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[53694] = {
					"Riplimb", -- [1]
					"Firelands", -- [2]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[167109] = {
					"Skeletal Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[19429] = {
					"Avian Darkhawk", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[169157] = {
					"Mudlump", -- [1]
					"Castle Nathria", -- [2]
				},
				[111980] = {
					"Nightmother", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[56766] = {
					"Volatile Energy", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[53695] = {
					"Rageface", -- [1]
					"Firelands", -- [2]
				},
				[37571] = {
					"Darkfallen Advisor", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[20901] = {
					"Sargeron Archer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[37955] = {
					"Blood-Queen Lana'thel", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[164553] = {
					"Misty Ally", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[47297] = {
					"Lumbering Oaf", -- [1]
					"Deadmines", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[64061] = {
					"Mogu'shan Warden", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[30179] = {
					"Twilight Apostle", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[17958] = {
					"Coilfang Defender", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[56767] = {
					"Shado-Pan Fire Archer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56895] = {
					"Weak Spot", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[13236] = {
					"Primalist Thurloga", -- [1]
					"Alterac Valley", -- [2]
				},
				[167115] = {
					"Necromancer Warcaster", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[75640] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[18982] = {
					"Sable Jaguar", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[137940] = {
					"Safety Shark", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[90997] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[75641] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[48450] = {
					"Sunwing Squawker", -- [1]
					"Deadmines", -- [2]
				},
				[114288] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[53185] = {
					"Flamewaker Overseer", -- [1]
					"Firelands", -- [2]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[20902] = {
					"Sargeron Hellcaller", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[14772] = {
					"East Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[74363] = {
					"Twilight Shadow", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[64063] = {
					"Mogu'shan Arcanist", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17959] = {
					"Coilfang Slavehandler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[48451] = {
					"Ol' Beaky", -- [1]
					"Deadmines", -- [2]
				},
				[36678] = {
					"Professor Putricide", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91000] = {
					"Vileshard Hulk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[83578] = {
					"Ogron Laborer", -- [1]
					"Iron Docks", -- [2]
				},
				[79739] = {
					"Grom'kar Grenadier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[18983] = {
					"Blackfang Tarantula", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[77180] = {
					"Emberscale Ironflight", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[98167] = {
					"Void Tendril", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91001] = {
					"Tarspitter Lurker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[12053] = {
					"Frostwolf Guardian", -- [1]
					"Alterac Valley", -- [2]
				},
				[76157] = {
					"Black Iron Leadbelcher", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[76413] = {
					"Orebender Gor'ashan", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[82556] = {
					"Drakonid Monstrosity", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[99704] = {
					"Shadowmoon Warlock", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[16808] = {
					"Warchief Kargath Bladefist", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[105591] = {
					"Nightmare Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[17960] = {
					"Coilfang Soothsayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[61250] = {
					"Sorcerer Mogu", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[53188] = {
					"Flamewaker Subjugator", -- [1]
					"Firelands", -- [2]
				},
				[18472] = {
					"Darkweaver Syth", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[91004] = {
					"Ularogg Cragshaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[59459] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[173276] = {
					"Stone Legion Commando", -- [1]
					"Castle Nathria", -- [2]
				},
				[91005] = {
					"Naraxas", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				[91006] = {
					"Rockback Gnasher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[20904] = {
					"Warden Mellichar", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[172255] = {
					"Gravestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[14773] = {
					"Iceblood Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59460] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173280] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[17961] = {
					"Coilfang Enchantress", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[18473] = {
					"Talon King Ikiss", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[75396] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[131821] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				[27431] = {
					"Drakkari Commander", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[81283] = {
					"Grom'kar Footsoldier", -- [1]
					"Iron Docks", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[59461] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[64068] = {
					"Mogu'shan Engine Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24552] = {
					"Sliver", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[36939] = {
					"High Overlord Saurfang", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				[24744] = {
					"Vexallus", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[104575] = {
					"Repulsion Tumor", -- [1]
					"Niskara", -- [2]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[102272] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17962] = {
					"Coilfang Collaborator", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[76935] = {
					"Black Iron Drake-Keeper", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[26536] = {
					"Mindless Servant", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[416] = {
					"Lazrot", -- [1]
					"Castle Nathria", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
				},
				[173802] = {
					"Carved Assistant", -- [1]
					"Castle Nathria", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Alterac Valley", -- [2]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[19306] = {
					"Mana Leech", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[134389] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[131318] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156913] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[167151] = {
					"Frail Spotter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[24553] = {
					"Apoko", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24745] = {
					"Pure Energy", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[74890] = {
					"Iron Grunt", -- [1]
					"Defense of Karabor", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[75658] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[113537] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[59464] = {
					"Hopper", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[98693] = {
					"Shackled Servitor", -- [1]
					"Maw of Souls", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[17835] = {
					"Infinite Assassin", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[17963] = {
					"Wastewalker Slave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[18155] = {
					"Bloodfalcon", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
				},
				[166644] = {
					"Artificer Xy'mox", -- [1]
					"Castle Nathria", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[96647] = {
					"Earlnoc the Beastbreaker", -- [1]
					"Halls of Valor", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[19307] = {
					"Nexus Terror", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Eye of Azshara", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24554] = {
					"Eramas Brightblaze", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[74382] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112261] = {
					"Dreadsoul Corruptor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[108934] = {
					"Tainted Blood", -- [1]
					"The Nighthold", -- [2]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[17964] = {
					"Wastewalker Worker", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[36304] = {
					"Mistwing Cliffdweller", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[133379] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[172282] = {
					"Web Wrap", -- [1]
					"Plaguefall", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[78735] = {
					"Zar'shuul", -- [1]
					"Auchindoun", -- [2]
				},
				[103561] = {
					"Shadow Beast", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[76176] = {
					"Black Iron Berserker", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[125828] = {
					"Goindownn", -- [1]
					"Atal'Dazar", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[61131] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24555] = {
					"Garaxxas", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24683] = {
					"Sunblade Mage Guard", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[62795] = {
					"Sik'thik Warden", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[174335] = {
					"Stone Legion Skirmisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[174336] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[75155] = {
					"Aku'mai the Devourer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76179] = {
					"Black Iron Grunt", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[52558] = {
					"Lord Rhyolith", -- [1]
					"Firelands", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[37970] = {
					"Prince Valanar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[172803] = {
					"Afterimage of Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[133389] = {
					"Galvazzt", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[82579] = {
					"Grom'kar Far Seer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[75157] = {
					"Aku'mai the Venomous", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[19949] = {
					"Sapling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76181] = {
					"Ragemaw Worg", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[24556] = {
					"Zelfan", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24684] = {
					"Sunblade Blood Knight", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[76694] = {
					"Emberscale Whelpling", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168713] = {
					"Dread Caller Skulfir", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[100497] = {
					"Ursoc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[13176] = {
					"Smith Regzar", -- [1]
					"Alterac Valley", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[167691] = {
					"Stasis Trap", -- [1]
					"Castle Nathria", -- [2]
				},
				[36948] = {
					"Muradin Bronzebeard", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[3343] = {
					"Grelkor", -- [1]
					"Alterac Valley", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[37972] = {
					"Prince Keleseth", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[58959] = {
					"Fizrik", -- [1]
					"Castle Nathria", -- [2]
				},
				[101778] = {
					"Gorelix the Fleshripper", -- [1]
					"Niskara", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[20078] = {
					"Summoned Bloodwarder Reservist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[24557] = {
					"Kagani Nightstrike", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24685] = {
					"Sunblade Magister", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[37973] = {
					"Prince Taldaram", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[113041] = {
					"Infected Diemetradon", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[76954] = {
					"Pahboo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[14776] = {
					"Tower Point Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[81817] = {
					"Burning Legionnaire", -- [1]
					"Teron'gor's Confrontation", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[128142] = {
					"Voidling", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[17839] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[81818] = {
					"Legion Hunter-Killer", -- [1]
					"Teron'gor's Confrontation", -- [2]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[12121] = {
					"Drakan", -- [1]
					"Alterac Valley", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102295] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[69791] = {
					"Banuk", -- [1]
					"Theater of Pain", -- [2]
				},
				[24686] = {
					"Sunblade Warlock", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[169751] = {
					"Ashen Wasp", -- [1]
					"Theater of Pain", -- [2]
				},
				[83612] = {
					"Skulloc", -- [1]
					"Iron Docks", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[76446] = {
					"Shadowmoon Enslaver", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[69792] = {
					"Banuk", -- [1]
					"Theater of Pain", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Iron Docks", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[56915] = {
					"Sun", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[38104] = {
					"Plagued Zombie", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[113048] = {
					"Corrupted Deer", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[20208] = {
					"Mennu's Healing Ward", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[61139] = {
					"Shan-xi Watershaper", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[24559] = {
					"Warlord Salaris", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24687] = {
					"Sunblade Physician", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24815] = {
					"Sunblade Imp", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[20912] = {
					"Harbinger Skyriss", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[21104] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[58964] = {
					"Illycor", -- [1]
					"Theater of Pain", -- [2]
				},
				[14777] = {
					"West Frostwolf Warmaster", -- [1]
					"Alterac Valley", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[98973] = {
					"Skeletal Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
				},
				[82594] = {
					"Grimrail Loader", -- [1]
					"Grimrail Depot", -- [2]
				},
				[75172] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168740] = {
					"Citadel Recluse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[19505] = {
					"Sunseeker Channeler", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[111004] = {
					"Gelatinized Decay", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[19633] = {
					"Bloodwarder Mender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[163111] = {
					"Magistrate Solomon", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[155945] = {
					"Gherus the Chained", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[12122] = {
					"Duros", -- [1]
					"Alterac Valley", -- [2]
				},
				[105630] = {
					"Eye of Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[24560] = {
					"Priestess Delrissa", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24688] = {
					"Wretched Skulker", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37595] = {
					"Darkfallen Blood Knight", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[97185] = {
					"The Grimewalker", -- [1]
					"Maw of Souls", -- [2]
				},
				[102304] = {
					"Inquisitior Zalinor", -- [1]
					"Niskara", -- [2]
				},
				[82597] = {
					"Grom'kar Captain", -- [1]
					"Grimrail Depot", -- [2]
				},
				[99233] = {
					"Ember", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[22897] = {
					"Summoned Windfury Totem", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[18994] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[59479] = {
					"Yan-Zhu the Uncasked", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[60375] = {
					"Zandalari Skullcharger", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[131383] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				[80808] = {
					"Neesa Nox", -- [1]
					"Iron Docks", -- [2]
				},
				[36829] = {
					"Deathspeaker High Priest", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36957] = {
					"Kor'kron Reaver", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[24689] = {
					"Wretched Bruiser", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133944] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[96677] = {
					"Steeljaw Grizzly", -- [1]
					"Halls of Valor", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112290] = {
					"Horrid Eagle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[173361] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[77483] = {
					"Grom'kar Gunner", -- [1]
					"Grimrail Depot", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
				},
				[26801] = {
					"Horde Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[31216] = {
					"Sabaozinho", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[20083] = {
					"Summoned Bloodwarder Mender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[52571] = {
					"Majordomo Staghelm", -- [1]
					"Firelands", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[24690] = {
					"Wretched Husk", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[83628] = {
					"Lunarfall Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[105383] = {
					"Corruptor Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[79534] = {
					"Iron Grunt", -- [1]
					"Defense of Karabor", -- [2]
				},
				[30385] = {
					"Twilight Volunteer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[13179] = {
					"Wing Commander Guse", -- [1]
					"Alterac Valley", -- [2]
				},
				[18420] = {
					"Sunseeker Geomancer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[26674] = {
					"Darkweb Hatchling", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[112039] = {
					"Screeching Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[19508] = {
					"Sunseeker Herbalist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[137029] = {
					"Ordnance Specialist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Iron Docks", -- [2]
				},
				[56924] = {
					"Inflamed Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[78001] = {
					"Cloudburst Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[37217] = {
					"Precious", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[10364] = {
					"Yaelika Farclaw", -- [1]
					"Alterac Valley", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"Halls of Valor", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
				},
				[48351] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
				},
				[80818] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[133963] = {
					"Test Subject", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[18421] = {
					"Sunseeker Researcher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[26803] = {
					"Horde Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[165189] = {
					"Cuteness", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[19509] = {
					"Sunseeker Harvester", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[53087] = {
					"Right Foot", -- [1]
					"Firelands", -- [2]
				},
				[134991] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[17462] = {
					"Shattered Hand Zealot", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[111022] = {
					"The Demon Within", -- [1]
					"The Nighthold", -- [2]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[104880] = {
					"Thing That Should Not Be", -- [1]
					"The Nighthold", -- [2]
				},
				[97202] = {
					"Olmyr the Enlightened", -- [1]
					"Halls of Valor", -- [2]
				},
				[56927] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[18422] = {
					"Sunseeker Botanist", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[105393] = {
					"Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[27636] = {
					"Azure Ley-Whelp", -- [1]
					"The Oculus", -- [2]
				},
				[19510] = {
					"Bloodwarder Centurion", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[47714] = {
					"Vapor", -- [1]
					"Deadmines", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[52577] = {
					"Left Foot", -- [1]
					"Firelands", -- [2]
				},
				[133463] = {
					"Venture Co. War Machine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[105906] = {
					"Eye of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[75194] = {
					"Gnasher", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[60384] = {
					"Zandalari Pterror Wing", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17975] = {
					"High Botanist Freywinn", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[156501] = {
					"Ravnyr", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[56929] = {
					"Krik'thik Protectorate", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[76220] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[19511] = {
					"Nethervine Inciter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[157016] = {
					"Imperial Archivist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[79548] = {
					"Assault Cannon", -- [1]
					"Grimrail Depot", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[76222] = {
					"Rallying Banner", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[60386] = {
					"Zandalari Terror Rider", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[17976] = {
					"Commander Sarannis", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[36968] = {
					"Kor'kron Axethrower", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53732] = {
					"Unbound Smoldering Elemental", -- [1]
					"Firelands", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[19512] = {
					"Nethervine Reaper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[95676] = {
					"Odyn", -- [1]
					"Halls of Valor", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[170334] = {
					"Glimmerpool Snapper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[139110] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[36969] = {
					"Skybreaker Rifleman", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[169823] = {
					"Gorm Behemoth", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83392] = {
					"Rampaging Clefthoof", -- [1]
					"Iron Docks", -- [2]
				},
				[92350] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[17465] = {
					"Shattered Hand Centurion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[144231] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[175456] = {
					"Swarm Training Dummy", -- [1]
					"Theater of Pain", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[104636] = {
					"Cenarius", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[53094] = {
					"Patriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[53222] = {
					"Flamewaker Centurion", -- [1]
					"Firelands", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[37098] = {
					"Val'kyr Herald", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[172899] = {
					"Nathrian Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[81091] = {
					"Shadowmoon Voidaxe", -- [1]
					"Defense of Karabor", -- [2]
				},
				[81603] = {
					"Champion Druna", -- [1]
					"Iron Docks", -- [2]
				},
				[19513] = {
					"Mutate Fear-Shrieker", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[56678] = {
					"Jade Staff", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[53095] = {
					"Matriarch Fire Turtle", -- [1]
					"Firelands", -- [2]
				},
				[102335] = {
					"Portal Guardian", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[24696] = {
					"Coilskar Witch", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[153451] = {
					"Kosarus the Fallen", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[20857] = {
					"Arcatraz Defender", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[92610] = {
					"Understone Drummer", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[102336] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[17978] = {
					"Thorngrin the Tender", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[53096] = {
					"Fire Turtle Hatchling", -- [1]
					"Firelands", -- [2]
				},
				[53224] = {
					"Flamewaker Taskmaster", -- [1]
					"Firelands", -- [2]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[37868] = {
					"Risen Archmage", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92612] = {
					"Mightstone Breaker", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Halls of Valor", -- [2]
				},
				[134005] = {
					"Shalebiter", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[59751] = {
					"Shado-Pan Warden", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[27960] = {
					"Dark Rune Warrior", -- [1]
					"Halls of Stone", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[95940] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[19962] = {
					"Blue Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[113088] = {
					"Corrupted Feeler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[24697] = {
					"Sister of Torment", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[37229] = {
					"Frostwarden Sorceress", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[16699] = {
					"Shattered Hand Reaver", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[113089] = {
					"Defiled Keeper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[17083] = {
					"Fel Orc Convert", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[58856] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[59752] = {
					"Shado-Pan Ambusher", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[111554] = {
					"Felblaze Trickster", -- [1]
					"The Nighthold", -- [2]
				},
				[115905] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[129214] = {
					"Coin-Operated Crowd Pummeler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[113090] = {
					"Corrupted Gatewarden", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[82378] = {
					"Moonbark Ancient", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[37230] = {
					"Spire Frostwyrm", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[61928] = {
					"Sik'thik Guardian", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[111528] = {
					"Deathroot Ancient", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[75980] = {
					"Blindlight Razorjaw", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[113091] = {
					"Tainted Plainstrider", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[46264] = {
					"Lord Overheat", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[16507] = {
					"Shattered Hand Sentry", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
				},
				[59804] = {
					"Gripping Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[58803] = {
					"Residual Hatred", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56912] = {
					"Krik'thik Engulfer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56764] = {
					"Consuming Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[56719] = {
					"Sha of Violence", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[166262] = {
					"Decaying Corpse", -- [1]
					"Darkmaul Citadel", -- [2]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[61387] = {
					"Quilen Guardian", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[56395] = {
					"Shado-Pan Novice", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[113092] = {
					"Swarming Dread", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[56473] = {
					"Flying Snow", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[13798] = {
					"Jotek", -- [1]
					"Alterac Valley", -- [2]
				},
				[59808] = {
					"Shado-Pan Stormbringer", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[61240] = {
					"Glintrok Skulker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[62982] = {
					"Mindbender", -- [1]
					"Castle Nathria", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[28729] = {
					"Watcher Narjil", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[24698] = {
					"Ethereum Smuggler", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[74446] = {
					"Ghamoo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[28921] = {
					"Hadronox", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[20859] = {
					"Arcatraz Warder", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[20923] = {
					"Blood Guard Porung", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[61398] = {
					"Xin the Weaponmaster", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[113093] = {
					"Infected Gazelle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[65415] = {
					"Void Sha", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[98761] = {
					"Furpix", -- [1]
					"Maw of Souls", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[2225] = {
					"Zora Guthrek", -- [1]
					"Alterac Valley", -- [2]
				},
				[26824] = {
					"Drakkari Raptor Mount", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[17980] = {
					"Laj", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[56658] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[37004] = {
					"Skybreaker Dreadblade", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[47403] = {
					"Defias Reaper", -- [1]
					"Deadmines", -- [2]
				},
				[61392] = {
					"Harthak Flameseeker", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[62632] = {
					"Sik'thik Engineer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[56589] = {
					"Striker Ga'dok", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56541] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[111047] = {
					"Parasitic Shadow Demon", -- [1]
					"The Nighthold", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[37029] = {
					"Kor'kron Reaver", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[56906] = {
					"Saboteur Kip'tilak", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[17994] = {
					"Bloodwarder Falconer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[23035] = {
					"Anzu", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[61634] = {
					"Commander Vo'jak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[63808] = {
					"Faintly Glowing Gem", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[59605] = {
					"Sodden Hozen Brawler", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[76585] = {
					"Ragewing the Untamed", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[37021] = {
					"Skybreaker Vicar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[61247] = {
					"Glintrok Greenhorn", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[61399] = {
					"Glintrok Scout", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
				},
				[39708] = {
					"Twilight Flame Caller", -- [1]
					"Blackrock Caverns", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[83390] = {
					"Thunderlord Wrangler", -- [1]
					"Iron Docks", -- [2]
				},
				[27962] = {
					"Dark Rune Elementalist", -- [1]
					"Halls of Stone", -- [2]
				},
				[27633] = {
					"Azure Inquisitor", -- [1]
					"The Oculus", -- [2]
				},
				[39960] = {
					"Deep Murloc Drudge", -- [1]
					"Throne of the Tides", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[61485] = {
					"General Pa'valak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[173949] = {
					"Nathrian Soldier", -- [1]
					"Castle Nathria", -- [2]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[29209] = {
					"Carrion Beetle", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[20873] = {
					"Negaton Warp-Master", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[102549] = {
					"Niskaran Doombringer", -- [1]
					"Niskara", -- [2]
				},
				[28730] = {
					"Watcher Gashra", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[61243] = {
					"Gekkan", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26638] = {
					"Risen Drakkari Bat Rider", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[28922] = {
					"Anub'ar Crusher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26641] = {
					"Drakkari Gutripper", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[20988] = {
					"Sunseeker Engineer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[56631] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[29097] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[59458] = {
					"Hopling", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[61245] = {
					"Capacitor Totem", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[135562] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[26683] = {
					"Frenzied Worgen", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[102861] = {
					"Niskaran Houndmaster", -- [1]
					"Niskara", -- [2]
				},
				[130653] = {
					"Wanton Sapper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[87761] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				[56637] = {
					"Ook-Ook", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[37228] = {
					"Frostwarden Warrior", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[167119] = {
					"Beckoned Wraith", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[175234] = {
					"Tractus the Icebreaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[27961] = {
					"Dark Rune Worker", -- [1]
					"Halls of Stone", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[173444] = {
					"Caramain", -- [1]
					"Castle Nathria", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[27963] = {
					"Dark Rune Theurgist", -- [1]
					"Halls of Stone", -- [2]
				},
				[27871] = {
					"Flesheating Ghoul", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[26635] = {
					"Risen Drakkari Warrior", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[102273] = {
					"Doomguard Infiltrator", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[173445] = {
					"Sindrel", -- [1]
					"Castle Nathria", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				[38154] = {
					"Warhawk", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[76036] = {
					"Twilight Shadow", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[28731] = {
					"Watcher Silthik", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[48338] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[27978] = {
					"Sjonnir The Ironshaper", -- [1]
					"Halls of Stone", -- [2]
				},
				[29051] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[27483] = {
					"King Dred", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26631] = {
					"Novos the Summoner", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[111054] = {
					"Nightorb", -- [1]
					"The Nighthold", -- [2]
				},
				[173448] = {
					"Dragost", -- [1]
					"Castle Nathria", -- [2]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[47162] = {
					"Glubtok", -- [1]
					"Deadmines", -- [2]
				},
				[18419] = {
					"Bloodwarder Greenkeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[17993] = {
					"Bloodwarder Protector", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
				},
				[13152] = {
					"Commander Malgor", -- [1]
					"Alterac Valley", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[36724] = {
					"Servant of the Throne", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[26620] = {
					"Drakkari Guardian", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26684] = {
					"Ravenous Furbolg", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[17952] = {
					"Darkwater Crocolisk", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[36807] = {
					"Deathspeaker Disciple", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[129227] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74380] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[102253] = {
					"Understone Demolisher", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112153] = {
					"Dire Shaman", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[97163] = {
					"Cursed Falke", -- [1]
					"Maw of Souls", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[27964] = {
					"Dark Rune Scholar", -- [1]
					"Halls of Stone", -- [2]
				},
				[60143] = {
					"Gara'jal the Spiritbinder", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[21140] = {
					"Rift Lord", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[60047] = {
					"Amethyst Guardian", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[30418] = {
					"Bound Air Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[165764] = {
					"Rockbound Vanquisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[58960] = {
					"Korrothion", -- [1]
					"Alterac Valley", -- [2]
				},
				[36597] = {
					"The Lich King", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36725] = {
					"Nerub'ar Broodkeeper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[36853] = {
					"Sindragosa", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28732] = {
					"Anub'ar Warrior", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[102397] = {
					"Wrathlord Bulwark", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[53617] = {
					"Molten Erupter", -- [1]
					"Firelands", -- [2]
				},
				[28924] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[3625] = {
					"Rarck", -- [1]
					"Alterac Valley", -- [2]
				},
				[52498] = {
					"Beth'tilac", -- [1]
					"Firelands", -- [2]
				},
				[96608] = {
					"Ebonclaw Worg", -- [1]
					"Halls of Valor", -- [2]
				},
				[171919] = {
					"Ayeleth's Torturer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[53691] = {
					"Shannox", -- [1]
					"Firelands", -- [2]
				},
				[164476] = {
					"Tortured Amalgamation", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[30111] = {
					"Twilight Worshipper", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[16809] = {
					"Warbringer O'mrogg", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[36805] = {
					"Deathspeaker Servant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[99541] = {
					"Risen Skulker", -- [1]
					"Alterac Valley", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136083] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[105299] = {
					"Recursive Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[113106] = {
					"Sickly Cougar", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[44404] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
				},
				[88163] = {
					"Grom'kar Cinderseer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[76696] = {
					"Emberscale Adolescent", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26621] = {
					"Ghoul Tormentor", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26685] = {
					"Massive Jormungar", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[113103] = {
					"Corrupted Swoop", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[74716] = {
					"Aqua Guardian", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[105721] = {
					"Nightmare Ichor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[10990] = {
					"Alterac Ram", -- [1]
					"Alterac Valley", -- [2]
				},
				[26799] = {
					"Horde Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[129231] = {
					"Rixxa Fluxflame", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[19219] = {
					"Mechano-Lord Capacitus", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[24762] = {
					"Sunblade Keeper", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[79827] = {
					"Void-Touched Seer", -- [1]
					"Defense of Karabor", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[156142] = {
					"Seeker of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173953] = {
					"Loyal Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[26630] = {
					"Trollgore", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[27965] = {
					"Dark Rune Shaper", -- [1]
					"Halls of Stone", -- [2]
				},
				[10367] = {
					"Shrye Ragefist", -- [1]
					"Alterac Valley", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[80005] = {
					"Skylord Tovra", -- [1]
					"Grimrail Depot", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[173973] = {
					"Nathrian Tracker", -- [1]
					"Castle Nathria", -- [2]
				},
				[154010] = {
					"Rotting Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[35831] = {
					"Spitelash Stormfury", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[105611] = {
					"Inconceivable Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[36855] = {
					"Lady Deathwhisper", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[28733] = {
					"Anub'ar Shadowcaster", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[53619] = {
					"Druid of the Flame", -- [1]
					"Firelands", -- [2]
				},
				[28925] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29117] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[18405] = {
					"Tempest-Forge Peacekeeper", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[144232] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59778] = {
					"Krik'thik Striker", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[111370] = {
					"Creature in the Shadows", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[173464] = {
					"Deplina", -- [1]
					"Castle Nathria", -- [2]
				},
				[74719] = {
					"Blindlight Rotmouth", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[99801] = {
					"Destructor Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[60402] = {
					"Zandalari Fire-Dancer", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[171929] = {
					"Errant Stoneborn", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[13153] = {
					"Commander Mulfort", -- [1]
					"Alterac Valley", -- [2]
				},
				[18176] = {
					"Tainted Earthgrab Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[100818] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[16807] = {
					"Grand Warlock Nethekurse", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[26622] = {
					"Drakkari Bat", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[154015] = {
					"Escaped Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173466] = {
					"Fara", -- [1]
					"Castle Nathria", -- [2]
				},
				[74720] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[170395] = {
					"Spiritwing Flutterer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[20343] = {
					"Charming Totem", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[53187] = {
					"Flamewaker Animator", -- [1]
					"Firelands", -- [2]
				},
				[81362] = {
					"Frostwall Goren", -- [1]
					"FW Horde Garrison Level 2", -- [2]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				[83026] = {
					"Siegemaster Olugar", -- [1]
					"Iron Docks", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[154016] = {
					"Prisonbreak Soulmender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[37127] = {
					"Ymirjar Frostbinder", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[155251] = {
					"Elder Longbranch", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102362] = {
					"Niskaran Jailer", -- [1]
					"Niskara", -- [2]
				},
				[37016] = {
					"Skybreaker Luminary", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[74721] = {
					"Blindlight Bilefin", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[19712] = {
					"Mechanar Driller", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[104154] = {
					"Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[56706] = {
					"Krik'thik Bombardier", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[173469] = {
					"Kullan", -- [1]
					"Castle Nathria", -- [2]
				},
				[28734] = {
					"Anub'ar Skirmisher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170910] = {
					"Shimmering Wader", -- [1]
					"Theater of Pain", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[65522] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[160161] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74722] = {
					"Razorshell Snapjaw", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[152995] = {
					"Warden of Souls", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[99804] = {
					"Valarjar Falconer", -- [1]
					"Halls of Valor", -- [2]
				},
				[29118] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[17464] = {
					"Shattered Hand Gladiator", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[113113] = {
					"Essence of Nightmare", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[29310] = {
					"Jedoga Shadowseeker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[73884] = {
					"Iron Shadowskulker", -- [1]
					"Defense of Karabor", -- [2]
				},
				[27973] = {
					"Crystalline Shardling", -- [1]
					"Halls of Stone", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83025] = {
					"Grom'kar Battlemaster", -- [1]
					"Iron Docks", -- [2]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[46260] = {
					"Searing Destroyer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[29822] = {
					"Drakkari Fire Weaver", -- [1]
					"Gundrak", -- [2]
				},
				[59764] = {
					"Healing Tide Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[18343] = {
					"Tavarok", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[36961] = {
					"Skybreaker Sergeant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[88288] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[104566] = {
					"Fiery Gaze of Zalinor", -- [1]
					"Niskara", -- [2]
				},
				[168961] = {
					"The Hungering Ones", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[18177] = {
					"Tainted Stoneskin Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[154022] = {
					"Prisonbreak Packleader", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165060] = {
					"Animimic", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80098] = {
					"Ironbarb Skyreaver", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[26623] = {
					"Scourge Brute", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26687] = {
					"Gortok Palehoof", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[53494] = {
					"Baleroc", -- [1]
					"Firelands", -- [2]
				},
				[157094] = {
					"Imperial Curator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[74980] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[134060] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[76260] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[30419] = {
					"Bound Water Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[20898] = {
					"Gargantuan Abyssal", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[133384] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[111068] = {
					"Archmage Galeorn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[19713] = {
					"Mechanar Wrecker", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[53786] = {
					"Blazing Monstrosity", -- [1]
					"Firelands", -- [2]
				},
				[166915] = {
					"Possessed Tender", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[139097] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[19969] = {
					"Green Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[79843] = {
					"Shadowmoon Zealot", -- [1]
					"Defense of Karabor", -- [2]
				},
				[76773] = {
					"Black Iron Apprentice", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[138338] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[20864] = {
					"Protean Nightmare", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[97081] = {
					"King Bjorn", -- [1]
					"Halls of Valor", -- [2]
				},
				[48284] = {
					"Mining Powder", -- [1]
					"Deadmines", -- [2]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[153003] = {
					"Soul Fragment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[17671] = {
					"Shattered Hand Champion", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[21702] = {
					"Ethereum Life-Binder", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[20865] = {
					"Protean Horror", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29119] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[29311] = {
					"Herald Volazj", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
				},
				[157099] = {
					"Imperial Censor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[101995] = {
					"Festerface", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[171432] = {
					"Suppressor Hersi", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102368] = {
					"Felguard Destroyer", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[111070] = {
					"Soul Fragment of Azzinoth", -- [1]
					"The Nighthold", -- [2]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[171433] = {
					"Suppressor Cer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74983] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[13154] = {
					"Commander Louis Philips", -- [1]
					"Alterac Valley", -- [2]
				},
				[21126] = {
					"Coilfang Scale-Healer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96934] = {
					"Valarjar Trapper", -- [1]
					"Halls of Valor", -- [2]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[26624] = {
					"Wretched Belcher", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[37116] = {
					"Skybreaker Sorcerer", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74728] = {
					"Twilight Lord Bathiel", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[74984] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				[18404] = {
					"Bloodwarder Steward", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[92538] = {
					"Tarspitter Grub", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[82590] = {
					"Grimrail Scout", -- [1]
					"Grimrail Depot", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[37666] = {
					"Darkfallen Tactician", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[134069] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[36626] = {
					"Festergut", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[102370] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[97083] = {
					"King Ranulf", -- [1]
					"Halls of Valor", -- [2]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[74729] = {
					"Voidwalker Minion", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[134686] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
				},
				[46383] = {
					"Randolph Moloch", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[96756] = {
					"Ymiron, the Fallen King", -- [1]
					"Maw of Souls", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[95675] = {
					"God-King Skovald", -- [1]
					"Halls of Valor", -- [2]
				},
				[28736] = {
					"Skittering Infector", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[37117] = {
					"Kor'kron Battle-Mage", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[153011] = {
					"Binder Baritas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76100] = {
					"Black Iron Alchemist", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[37501] = {
					"Nerub'ar Champion", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[20866] = {
					"Soul Devourer", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29120] = {
					"Anub'arak", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[75754] = {
					"Cinderling", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[27972] = {
					"Lightning Construct", -- [1]
					"Halls of Stone", -- [2]
				},
				[80935] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[170417] = {
					"Animated Stygia", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[77034] = {
					"Black Iron Veteran", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[114671] = {
					"Fragmented Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[78314] = {
					"Glacial Icemaw", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[47739] = {
					"\"Captain\" Cookie", -- [1]
					"Deadmines", -- [2]
				},
				[152612] = {
					"Subjugator Klontzas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
				},
				[104676] = {
					"Waning Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
				},
				[18179] = {
					"Corrupted Nova Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[77035] = {
					"Black Iron Dreadweaver", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[77033] = {
					"Black Iron Siegebreaker", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[77803] = {
					"Railmaster Rocketspark", -- [1]
					"Grimrail Depot", -- [2]
				},
				[20059] = {
					"Sunseeker Netherbinder", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[153015] = {
					"Bound Soul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[74988] = {
					"Executioner Gore", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76101] = {
					"Black Iron Engineer", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[37502] = {
					"Nerub'ar Webweaver", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[172979] = {
					"Honeydew Sporeflutterer", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Plaguefall", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[77036] = {
					"Black Iron Summoner", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[26625] = {
					"Darkweb Recluse", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[13284] = {
					"Frostwolf Shaman", -- [1]
					"Alterac Valley", -- [2]
				},
				[107237] = {
					"Icy Enchantment", -- [1]
					"The Nighthold", -- [2]
				},
				[81398] = {
					"Frostwall Goren Hatchling", -- [1]
					"FW Horde Garrison Level 2", -- [2]
				},
				[27969] = {
					"Dark Rune Giant", -- [1]
					"Halls of Stone", -- [2]
				},
				[19843] = {
					"Nethervine Trickster", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[26686] = {
					"Ferocious Rhino", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[132051] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
				},
				[77037] = {
					"Black Iron Elite", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[53115] = {
					"Molten Lord", -- [1]
					"Firelands", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[17990] = {
					"Underbog Mushroom", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[111333] = {
					"Taintheart Trickster", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[61945] = {
					"Gurthan Iron Maw", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[20867] = {
					"Death Watcher", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[43778] = {
					"Foe Reaper 5000", -- [1]
					"Deadmines", -- [2]
				},
				[21818] = {
					"Infinite Whelp", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[17892] = {
					"Infinite Chronomancer", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[105636] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[73967] = {
					"Niuzao", -- [1]
					"Castle Nathria", -- [2]
				},
				[135234] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[104688] = {
					"Voidling", -- [1]
					"The Nighthold", -- [2]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[21891] = {
					"Avian Ripper", -- [1]
					"Auchindoun: Sethekk Halls", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[60410] = {
					"Elegon", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[83389] = {
					"Ironwing Flamespitter", -- [1]
					"Iron Docks", -- [2]
				},
				[37232] = {
					"Nerub'ar Broodling", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[14186] = {
					"Ravak Grimtotem", -- [1]
					"Alterac Valley", -- [2]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[163260] = {
					"Vicious Ghoul", -- [1]
					"Redridge - 9xp Bastion", -- [2]
				},
				[61434] = {
					"Sik'thik Vanguard", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61946] = {
					"Harthak Stormcaller", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[54015] = {
					"Majordomo Staghelm", -- [1]
					"Firelands", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[18317] = {
					"Ethereal Priest", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[79545] = {
					"Nitrogg Thundertower", -- [1]
					"Grimrail Depot", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[37133] = {
					"Ymirjar Warlord", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[168112] = {
					"General Kaal", -- [1]
					"Castle Nathria", -- [2]
				},
				[97259] = {
					"Blazing Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
				},
				[81396] = {
					"Stonetooth", -- [1]
					"FW Horde Garrison Level 2", -- [2]
				},
				[53223] = {
					"Flamewaker Beast Handler", -- [1]
					"Firelands", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[13218] = {
					"Grunnda Wolfheart", -- [1]
					"Alterac Valley", -- [2]
				},
				[19964] = {
					"Red Seedling", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[99307] = {
					"Skjal", -- [1]
					"Maw of Souls", -- [2]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[27970] = {
					"Raging Construct", -- [1]
					"Halls of Stone", -- [2]
				},
				[76599] = {
					"Black Iron Groundshaker", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[27971] = {
					"Unrelenting Construct", -- [1]
					"Halls of Stone", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[65402] = {
					"Gurthan Swiftblade", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[61947] = {
					"Kargesh Ribcrusher", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[157122] = {
					"Patrician Cromwell", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[10404] = {
					"Pustulating Horror", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[20868] = {
					"Entropic Eye", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[20990] = {
					"Bloodwarder Physician", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[76018] = {
					"Drakonid Monstrosity", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[80172] = {
					"Bladespire Raider", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[77042] = {
					"Sargerei Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[102380] = {
					"Shadow Council Warlock", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[17669] = {
					"Rabid Warhound", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[102446] = {
					"Fel Lord Betrug", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[10467] = {
					"Mana Tide Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[83697] = {
					"Grom'kar Deckhand", -- [1]
					"Iron Docks", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[16704] = {
					"Shattered Hand Sharpshooter", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
				},
				[18309] = {
					"Ethereal Scavenger", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[26627] = {
					"Crystal Handler", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[53630] = {
					"Unstable Pyrelord", -- [1]
					"Firelands", -- [2]
				},
				[61436] = {
					"Sik'thik Bladedancer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[82418] = {
					"Black Iron Rageguard", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				[48421] = {
					"Defias Overseer", -- [1]
					"Deadmines", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[53575] = {
					"Lava Wielder", -- [1]
					"Firelands", -- [2]
				},
				[46248] = {
					"Riverpaw Basher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[18429] = {
					"Arcane Fiend", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[46250] = {
					"Riverpaw Poacher", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
				},
				[38125] = {
					"Ymirjar Deathbringer", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[58108] = {
					"Krik'thik Infiltrator", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[94960] = {
					"Hymdall", -- [1]
					"Halls of Valor", -- [2]
				},
				[169925] = {
					"Begrudging Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[111852] = {
					"Rothos", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171461] = {
					"Blighted Servitor", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[21148] = {
					"Rift Keeper", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[76021] = {
					"Kyrak", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[19716] = {
					"Mechanar Tinkerer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[46249] = {
					"Riverpaw Slayer", -- [1]
					"Stormwind Stockade", -- [2]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[170418] = {
					"Goxul the Devourer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[53119] = {
					"Flamewaker Forward Guard", -- [1]
					"Firelands", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[20478] = {
					"Arcane Servant", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[20869] = {
					"Arcatraz Sentinel", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[53631] = {
					"Cinderweb Spiderling", -- [1]
					"Firelands", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[17942] = {
					"Quagmirran", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[62205] = {
					"Wing Leader Ner'onok", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[171463] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[53244] = {
					"Flamewaker Trainee", -- [1]
					"Firelands", -- [2]
				},
				[26626] = {
					"Scourge Reanimator", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[164897] = {
					"Fog Dweller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[83764] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[19167] = {
					"Bloodwarder Slayer", -- [1]
					"Tempest Keep: The Mechanar", -- [2]
				},
				[59518] = {
					"Bloated Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[34944] = {
					"Keep Cannon", -- [1]
					"Isle of Conquest", -- [2]
				},
				[48229] = {
					"Kobold Digger", -- [1]
					"Deadmines", -- [2]
				},
				[17670] = {
					"Shattered Hand Houndmaster", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[171520] = {
					"Blighted Creeper", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[175123] = {
					"Warden Arkoban", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[96754] = {
					"Harbaron", -- [1]
					"Maw of Souls", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
				},
				[36612] = {
					"Lord Marrowgar", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53120] = {
					"Flamewaker Pathfinder", -- [1]
					"Firelands", -- [2]
				},
				[26628] = {
					"Drakkari Scytheclaw", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[60381] = {
					"Zandalari Infiltrator", -- [1]
					"Mogu'shan Vaults", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[37035] = {
					"Kor'kron Vanquisher", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[48230] = {
					"Ogre Henchman", -- [1]
					"Deadmines", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[16700] = {
					"Shattered Hand Legionnaire", -- [1]
					"Hellfire Citadel: The Shattered Halls", -- [2]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157109] = {
					"Vampire Bat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[77816] = {
					"Borka the Brute", -- [1]
					"Grimrail Depot", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[169421] = {
					"Felguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[111856] = {
					"Guardian Gorroc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171522] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[53121] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61567] = {
					"Vizier Jin'bak", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[132056] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[24558] = {
					"Ellrys Duskhallow", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[19920] = {
					"Thorn Flayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[20870] = {
					"Zereketh the Unbound", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[134616] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[48505] = {
					"Defias Shadowguard", -- [1]
					"Deadmines", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134617] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[98293] = {
					"Saltsea Globule", -- [1]
					"Eye of Azshara", -- [2]
				},
				[59520] = {
					"Fizzy Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[82425] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 2", -- [2]
				},
				[169425] = {
					"Felhound", -- [1]
					"Castle Nathria", -- [2]
				},
				[74747] = {
					"Deep Terror", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[111858] = {
					"Guardian Rurson", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[171431] = {
					"Suppressor Vellon", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[10981] = {
					"Frost Wolf", -- [1]
					"Alterac Valley", -- [2]
				},
				[24761] = {
					"Brightscale Wyrm", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[17991] = {
					"Rokmar the Crackler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"Castle Nathria", -- [2]
				},
				[155226] = {
					"Verdant Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[18311] = {
					"Ethereal Crypt Raider", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[80678] = {
					"Black Iron Flame Reaver", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[36998] = {
					"Skybreaker Protector", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[37126] = {
					"Sister Svalna", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[102302] = {
					"Portal Keeper", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[166919] = {
					"Foul Slayer", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[79824] = {
					"Shadowmoon Void-Reaver", -- [1]
					"Defense of Karabor", -- [2]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[114712] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[96759] = {
					"Helya", -- [1]
					"Maw of Souls", -- [2]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170452] = {
					"Essence Orb", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[168700] = {
					"Pestering Fiend", -- [1]
					"Castle Nathria", -- [2]
				},
				[36811] = {
					"Deathspeaker Attendant", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[59521] = {
					"Bubbling Brew Alemental", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[13140] = {
					"Commander Dardosh", -- [1]
					"Alterac Valley", -- [2]
				},
				[169429] = {
					"Shivarra", -- [1]
					"Castle Nathria", -- [2]
				},
				[174090] = {
					"Nathrian Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[111860] = {
					"Bo'lan the Marked", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[80805] = {
					"Makogg Emberblade", -- [1]
					"Iron Docks", -- [2]
				},
				[37025] = {
					"Stinky", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[88314] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Castle Nathria", -- [2]
				},
				[48502] = {
					"Defias Enforcer", -- [1]
					"Deadmines", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[27966] = {
					"Dark Rune Controller", -- [1]
					"Halls of Stone", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[140038] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[164338] = {
					"Mawsworn Guard", -- [1]
					"Ardenweald Covenant Chapter 2 Scenario", -- [2]
				},
				[82428] = {
					"Emberscale Ironflight", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[53635] = {
					"Cinderweb Drone", -- [1]
					"Firelands", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[102672] = {
					"Nythendra", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[81305] = {
					"Fleshrender Nok'gar", -- [1]
					"Iron Docks", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[53616] = {
					"Kar the Everburning", -- [1]
					"Firelands", -- [2]
				},
				[21127] = {
					"Coilfang Tempest", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[20886] = {
					"Wrath-Scryer Soccothrates", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[17977] = {
					"Warp Splinter", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[111350] = {
					"Skittering Shadows", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[102244] = {
					"Felguard Sentry", -- [1]
					"Niskara", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[112118] = {
					"Tainted Bloodpetal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173708] = {
					"Anchoring Rune", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[102287] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[21138] = {
					"Infinite Executioner", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[105720] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[18312] = {
					"Ethereal Spellbinder", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[75927] = {
					"Azzakel", -- [1]
					"Auchindoun", -- [2]
				},
				[61442] = {
					"Kuai the Brute", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[100943] = {
					"Earthen Wall Totem", -- [1]
					"Castle Nathria", -- [2]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
				},
				[53206] = {
					"Hell Hound", -- [1]
					"Firelands", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
				},
				[24722] = {
					"Fel Crystal", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[63106] = {
					"Sik'thik Swarmer", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[81407] = {
					"Grimrail Bombardier", -- [1]
					"Grimrail Depot", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[18431] = {
					"Ethereal Beacon", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[26798] = {
					"Commander Kolurg", -- [1]
					"The Nexus", -- [2]
				},
				[86526] = {
					"Grom'kar Chainmaster", -- [1]
					"Iron Docks", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[27974] = {
					"Eroded Shardling", -- [1]
					"Halls of Stone", -- [2]
				},
				[17940] = {
					"Coilfang Technician", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[24561] = {
					"Yazzai", -- [1]
					"Magisters' Terrace", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
				},
				[48262] = {
					"Ogre Bodyguard", -- [1]
					"Deadmines", -- [2]
				},
				[102282] = {
					"Lord Malgath", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[17941] = {
					"Mennu the Betrayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[76801] = {
					"Ragewing Whelp", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[40584] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
				},
				[97788] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[102395] = {
					"Infiltrator Assassin", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[41096] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[95674] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[75410] = {
					"Guardian of the Deep", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[29062] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[75522] = {
					"Bloodtail Grouper", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[75286] = {
					"Twilight Disciple", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[21128] = {
					"Coilfang Ray", -- [1]
					"Coilfang: The Slave Pens", -- [2]
				},
				[52530] = {
					"Alysrazor", -- [1]
					"Firelands", -- [2]
				},
				[53140] = {
					"Son of Flame", -- [1]
					"Firelands", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[79720] = {
					"Grom'kar Boomer", -- [1]
					"Grimrail Depot", -- [2]
				},
				[47296] = {
					"Helix Gearbreaker", -- [1]
					"Deadmines", -- [2]
				},
				[112260] = {
					"Dreadsoul Defiler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[111354] = {
					"Taintheart Befouler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[103045] = {
					"Plaguemaw", -- [1]
					"Maw of Souls", -- [2]
				},
				[18344] = {
					"Nexus-Prince Shaffar", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[36808] = {
					"Deathspeaker Zealot", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[21395] = {
					"Protean Spawn", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[37017] = {
					"Skybreaker Assassin", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[98406] = {
					"Embershard Scorpion", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[29217] = {
					"Anub'ar Venomancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[18313] = {
					"Ethereal Sorcerer", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[61444] = {
					"Ming the Cunning", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[79888] = {
					"Iron Infantry", -- [1]
					"Grimrail Depot", -- [2]
				},
				[111355] = {
					"Taintheart Tormenter", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[107459] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[21139] = {
					"Infinite Vanquisher", -- [1]
					"Opening of the Dark Portal", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[99868] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[36950] = {
					"Skybreaker Marine", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[20883] = {
					"Spiteful Temptress", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[19507] = {
					"Sunseeker Gene-Splicer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[59487] = {
					"Bubble Shield", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[102398] = {
					"Blazing Infernal", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[19598] = {
					"Mutate Fleshlasher", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[102270] = {
					"Eredar Invader", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[27975] = {
					"Maiden of Grief", -- [1]
					"Halls of Stone", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
				},
				[100351] = {
					"Avatar of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[76037] = {
					"Twilight Storm Mender", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[29096] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28695] = {
					"Molten Golem", -- [1]
					"Halls of Lightning", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
				},
				[76151] = {
					"Black Iron Warcaster", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[53127] = {
					"Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[61445] = {
					"Haiyan the Unstoppable", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[37003] = {
					"Skybreaker Vindicator", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[61701] = {
					"Sik'thik Warrior", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[53639] = {
					"Flamewaker Cauterizer", -- [1]
					"Firelands", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[20879] = {
					"Eredar Soul-Eater", -- [1]
					"Tempest Keep: The Arcatraz", -- [2]
				},
				[29063] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29098] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[26637] = {
					"Risen Drakkari Handler", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[76038] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[135971] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
				},
				[27982] = {
					"Forged Iron Dwarf", -- [1]
					"Halls of Stone", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[102400] = {
					"Eredar Shadow Mender", -- [1]
					"Assault on Violet Hold", -- [2]
				},
				[59684] = {
					"Hozen Party Animal", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[19557] = {
					"Greater Frayer", -- [1]
					"Tempest Keep: The Botanica", -- [2]
				},
				[27983] = {
					"Dark Rune Protector", -- [1]
					"Halls of Stone", -- [2]
				},
				[62348] = {
					"Sik'thik Soldier", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[56865] = {
					"Aqua Dancer", -- [1]
					"Stormstout Brewery", -- [2]
				},
				[168683] = {
					"Gorak Zhar", -- [1]
					"9.0 Ardenweald Covenant Finale Drust Scenario", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[76039] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[48521] = {
					"Defias Squallshaper", -- [1]
					"Deadmines", -- [2]
				},
				[61216] = {
					"Glintrok Hexxer", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[18314] = {
					"Nexus Stalker", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
				},
				[53128] = {
					"Giant Fire Scorpion", -- [1]
					"Firelands", -- [2]
				},
				[26632] = {
					"The Prophet Tharon'ja", -- [1]
					"Drak'Tharon Keep", -- [2]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
				},
				[37132] = {
					"Ymirjar Battle-Maiden", -- [1]
					"Icecrown Citadel", -- [2]
				},
				[53640] = {
					"Flamewaker Sentinel", -- [1]
					"Firelands", -- [2]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
				},
				[174570] = {
					"Swarm Training Dummy", -- [1]
					"Theater of Pain", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[167404] = {
					"Dauntless Champion", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[100354] = {
					"Grasping Tentacle", -- [1]
					"Maw of Souls", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[137204] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[174571] = {
					"Cleave Training Dummy", -- [1]
					"Theater of Pain", -- [2]
				},
				[59835] = {
					"Krik'thik Swarmer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[56877] = {
					"Raigonn", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[80703] = {
					"Windfury Totem", -- [1]
					"Upper Blackrock Spire", -- [2]
				},
				[74505] = {
					"Thruk", -- [1]
					"Blackfathom Deeps", -- [2]
				},
				[47626] = {
					"Admiral Ripsnarl", -- [1]
					"Deadmines", -- [2]
				},
				[58198] = {
					"Shado-Pan Disciple", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[61389] = {
					"Kargesh Highguard", -- [1]
					"Mogu'shan Palace", -- [2]
				},
				[167406] = {
					"Sire Denathrius", -- [1]
					"Castle Nathria", -- [2]
				},
				[56713] = {
					"Master Snowdrift", -- [1]
					"Shado-Pan Monastery", -- [2]
				},
				[48266] = {
					"Defias Cannon", -- [1]
					"Deadmines", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[48522] = {
					"Defias Pirate", -- [1]
					"Deadmines", -- [2]
				},
				[59820] = {
					"Pandaren Cannoneer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[113920] = {
					"Flail of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[31146] = {
					"Raider's Training Dummy", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[172064] = {
					"Unstable Larva", -- [1]
					"Plaguefall", -- [2]
				},
			},
			["aura_stack_size"] = 8,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604674264,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 695,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1619567961,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604696442,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 970,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1619567961,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604593143,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 833,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 25,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 30,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1619567961,
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1627222921,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1611856720,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 369,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Blink Enabled",
							["Value"] = true,
							["Key"] = "blinkEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = true,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Change NamePlate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Name"] = "Timeleft to Blink",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Name"] = "Blink Speed",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Name"] = "Blink Max Alpha",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Blink Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "blinkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Timer Color Enabled",
							["Value"] = true,
							["Key"] = "timerColorEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 8,
							["Name"] = "Time Left Warning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Time Left Critical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Name"] = "Warning Color",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "warningColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Critical Color",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "criticalColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["__TrashAt"] = 1628170924,
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625698948,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1138,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"355571", -- [1]
									"14", -- [2]
								}, -- [3]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["SpellIds"] = {
						350421, -- [1]
						355571, -- [2]
						355787, -- [3]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1628170924,
				}, -- [6]
			},
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
					},
					["__TrashAt"] = 1609083418,
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["__TrashAt"] = 1621986535,
					["Time"] = 1547993111,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["__TrashAt"] = 1621986535,
					["Time"] = 1603567332,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 254,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["__TrashAt"] = 1622764197,
					["Time"] = 1621456459,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 268,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [4]
			},
			["auto_toggle_friendly"] = {
				["arena"] = true,
				["cities"] = false,
				["world"] = false,
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Combo Points"] = 6,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 2,
			},
			["aura_timer_text_font"] = "Accidental Presidency",
			["aura_height"] = 11,
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Pins",
			["saved_cvars"] = {
				["nameplateShowEnemyMinions"] = "1",
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.5700000524521",
				["nameplateLargeTopInset"] = "0.085",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.75",
				["nameplateShowSelf"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateShowOnlyNames"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowFriends"] = "0",
				["nameplateShowFriendlyMinions"] = "0",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateMotion"] = "1",
				["nameplateShowEnemies"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["NamePlateVerticalScale"] = "1",
			},
			["login_counter"] = 2907,
			["aura_stack_font"] = "Accidental Presidency",
			["plate_config"] = {
				["global_health_height"] = 9,
				["friendlyplayer"] = {
					["actorname_use_class_color"] = true,
					["cast"] = {
						90, -- [1]
					},
					["only_damaged"] = false,
					["cast_incombat"] = {
						90, -- [1]
					},
					["percent_text_enabled"] = true,
					["health_incombat"] = {
						90, -- [1]
						9, -- [2]
					},
					["health"] = {
						90, -- [1]
						9, -- [2]
					},
				},
				["enemynpc"] = {
					["spellpercent_text_font"] = "Accidental Presidency",
					["cast"] = {
						90, -- [1]
						15, -- [2]
					},
					["actorname_text_font"] = "Accidental Presidency",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 6,
					["cast_incombat"] = {
						90, -- [1]
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["percent_text_anchor"] = {
						["y"] = 0.4000015258789063,
					},
					["spellname_text_font"] = "Accidental Presidency",
					["actorname_text_size"] = 7,
					["spellpercent_text_size"] = 13,
					["percent_show_health"] = false,
					["percent_text_font"] = "Accidental Presidency",
					["health_incombat"] = {
						90, -- [1]
						9, -- [2]
					},
					["health"] = {
						90, -- [1]
						9, -- [2]
					},
				},
				["global_health_width"] = 90,
				["enemyplayer"] = {
					["cast"] = {
						90, -- [1]
					},
					["cast_incombat"] = {
						90, -- [1]
					},
					["health_incombat"] = {
						90, -- [1]
						9, -- [2]
					},
					["health"] = {
						90, -- [1]
						9, -- [2]
					},
				},
				["friendlynpc"] = {
					["cast"] = {
						90, -- [1]
					},
					["cast_incombat"] = {
						90, -- [1]
					},
					["health_incombat"] = {
						90, -- [1]
						9, -- [2]
					},
					["health"] = {
						90, -- [1]
						9, -- [2]
					},
				},
			},
			["aura_y_offset"] = 5,
			["border_thickness"] = 1.190000057220459,
			["resources_settings"] = {
				["chr"] = {
					["Player-61-0EA51CA7"] = "ArcaneCharges",
					["Player-61-0E8B2227"] = "HolyPower",
					["Player-61-0E6316C4"] = "Runes",
					["Player-61-0E5C2347"] = "ComboPoints",
				},
			},
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547392935,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["version"] = -1,
				}, -- [1]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Author"] = "Ahwa-Azralon",
					["Time"] = 1547406548,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Name"] = "Execute Range [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["version"] = -1,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1541606242,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["version"] = -1,
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Author"] = "Tecno-Azralon",
					["Time"] = 1547409079,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["version"] = -1,
				}, -- [7]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["version"] = -1,
				}, -- [9]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1548278227,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["version"] = -1,
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1552354619,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["version"] = -1,
				}, -- [12]
			},
			["aura_width"] = 14,
			["aura_x_offset"] = 0,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["update_throttle"] = 0.05000000074505806,
			["not_affecting_combat_alpha"] = 0.2800000011920929,
			["use_ui_parent"] = true,
			["use_health_animation"] = true,
			["patch_version"] = 18,
			["aura_timer_text_size"] = 11,
			["number_region_first_run"] = true,
			["script_auto_imported"] = {
				["Unit - Important"] = 11,
				["Aura - Buff Alert"] = 13,
				["Cast - Very Important"] = 12,
				["Explosion Affix M+"] = 11,
				["Aura - Debuff Alert"] = 11,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 11,
				["Cast - Big Alert"] = 12,
				["Cast - Small Alert"] = 11,
				["Auto Set Skull"] = 11,
				["Fixate On You"] = 11,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Cast - Important Target [P]"] = 1,
				["Countdown"] = 11,
				["Unit - Health Markers"] = 12,
				["Cast - Frontal Cone"] = 11,
				["Fixate"] = 11,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Alert + Timer [P]"] = 2,
				["Spiteful Affix"] = 3,
				["Unit - Show Energy"] = 11,
			},
			["first_run3"] = true,
			["ui_parent_scale_tune"] = 1.559999942779541,
			["auto_toggle_friendly_enabled"] = true,
			["cast_statusbar_spark_width"] = 4,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
		},
	},
	["profileKeys"] = {
		["Chadlad - Stormrage"] = "Default",
		["Clapmycheeks - Zul'jin"] = "Default",
		["Rotrin - Area 52"] = "Default",
		["Tethock - Stormrage"] = "Default",
		["Grabbahan - Moon Guard"] = "Default",
		["Fhayslam - Area 52"] = "Default",
		["Faogar - Stormrage"] = "Default",
		["Primedrood - Stormrage"] = "Default",
		["Fhayeet - Area 52"] = "Default",
		["Poguezclap - Area 52"] = "Default",
		["Primeslam - Stormrage"] = "Default",
		["Primadin - Stormrage"] = "Default",
		["Normiesomega - Area 52"] = "Default",
		["Primesham - Stormrage"] = "Main Profile",
		["Primeslay - Zul'jin"] = "Main Profile",
		["Leedledorf - Zul'jin"] = "Default",
		["Rantuur - Stormrage"] = "Default",
		["Primelight - Stormrage"] = "Default",
		["Primedeth - Zul'jin"] = "Main Profile",
		["Thyyr - Stormrage"] = "Default",
		["Prettyflower - Stormrage"] = "Default",
		["Primeslam - Zul'jin"] = "Default",
		["Primedrood - Zul'jin"] = "Default",
		["Diuhreeuh - Area 52"] = "Default",
		["Primestab - Stormrage"] = "Default",
		["Primecast - Zul'jin"] = "Main Profile",
		["Gruftuun - Stormrage"] = "Default",
		["Fhdgshsfnsdf - Zul'jin"] = "Default",
		["Thartuk - Area 52"] = "MyNewProfile",
		["Primepunch - Zul'jin"] = "Default",
		["Yyarad - Stormrage"] = "Default",
		["Rhyolun - Stormrage"] = "Default",
		["Tyeir - Stormrage"] = "Default",
		["Dulgan - Kilrogg"] = "Main Profile",
		["Grintusk - Area 52"] = "Default",
		["Peepeesmalls - Stormrage"] = "Default",
		["Primedeath - Stormrage"] = "Main Profile",
		["Zethyn - Stormrage"] = "Default",
		["Girynth - Stormrage"] = "Default",
		["Primestab - Zul'jin"] = "Main Profile",
		["Primerlock - Stormrage"] = "Default",
		["Fhaykum - Area 52"] = "Default",
		["Plskillme - Kilrogg"] = "Default",
		["Kranu - Stormrage"] = "Default",
		["Probemybhole - Zul'jin"] = "Default",
		["Ryto - Stormrage"] = "Default",
		["Primepriest - Zul'jin"] = "Main Profile",
		["Bjorton - Stormrage"] = "Default",
		["Ahriak - Area 52"] = "Default",
		["Primesham - Zul'jin"] = "Default",
		["Primehunt - Stormrage"] = "Main Profile",
		["Primeshoot - Zul'jin"] = "Default",
		["Primelocker - Zul'jin"] = "Default",
		["Primepaladin - Zul'jin"] = "Main Profile",
		["Primepal - Zul'jin"] = "Main Profile",
		["Primeage - Stormrage"] = "Main Profile",
	},
	["captured_casts"] = {
		[49034] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 1976,
			["npcID"] = 26631,
		},
		[327584] = {
			["npcID"] = 168393,
		},
		[69899] = {
			["npcID"] = 37030,
		},
		[157170] = {
			["npcID"] = 77812,
		},
		[228321] = {
			["npcID"] = 114538,
		},
		[338847] = {
			["npcID"] = 167525,
		},
		[79881] = {
			["npcID"] = 38913,
		},
		[332705] = {
			["npcID"] = 170490,
		},
		[333729] = {
			["npcID"] = 168949,
		},
		[355228] = {
			["npcID"] = 178631,
		},
		[202728] = {
			["npcID"] = 99649,
		},
		[332706] = {
			["npcID"] = 170490,
		},
		[329635] = {
			["npcID"] = 158256,
		},
		[352158] = {
			["npcID"] = 175727,
		},
		[349087] = {
			["npcID"] = 176705,
		},
		[322470] = {
			["npcID"] = 177912,
		},
		[332708] = {
			["npcID"] = 167532,
		},
		[338851] = {
			["npcID"] = 167525,
		},
		[364445] = {
			["npcID"] = 180089,
		},
		[336804] = {
			["npcID"] = 177295,
		},
		[338852] = {
			["npcID"] = 167527,
		},
		[323496] = {
			["npcID"] = 165872,
		},
		[357280] = {
			["npcID"] = 180387,
		},
		[338853] = {
			["npcID"] = 167527,
		},
		[364447] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 184522,
		},
		[357281] = {
			["npcID"] = 180432,
		},
		[123648] = {
			["npcID"] = 61946,
		},
		[335783] = {
			["npcID"] = 155790,
		},
		[347045] = {
			["npcID"] = 176131,
		},
		[364449] = {
			["npcID"] = 179939,
		},
		[139771] = {
			["npcID"] = 70240,
		},
		[358307] = {
			["npcID"] = 179913,
		},
		[338856] = {
			["npcID"] = 167527,
		},
		[356260] = {
			["npcID"] = 179388,
		},
		[357284] = {
			["npcID"] = 180432,
		},
		[240611] = {
			["npcID"] = 120482,
		},
		[338857] = {
			["npcID"] = 167527,
		},
		[348071] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[336810] = {
			["npcID"] = 160785,
		},
		[136189] = {
			["encounterName"] = "Council of Elders",
			["npcID"] = 69078,
			["encounterID"] = 1570,
		},
		[123649] = {
			["npcID"] = 61947,
		},
		[16006] = {
			["npcID"] = 78996,
		},
		[162295] = {
			["npcID"] = 75348,
		},
		[362405] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[326574] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[241636] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 118289,
		},
		[345002] = {
			["npcID"] = 168977,
		},
		[334765] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[76813] = {
			["npcID"] = 41096,
		},
		[20299] = {
			["npcID"] = 24696,
		},
		[325552] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[345004] = {
			["npcID"] = 175347,
		},
		[16588] = {
			["npcID"] = 65598,
		},
		[368551] = {
			["npcID"] = 184605,
		},
		[358314] = {
			["npcID"] = 180162,
		},
		[338863] = {
			["npcID"] = 167526,
		},
		[352172] = {
			["npcID"] = 178102,
		},
		[197105] = {
			["npcID"] = 97171,
		},
		[362410] = {
			["npcID"] = 181349,
		},
		[338864] = {
			["npcID"] = 167526,
		},
		[198641] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98965,
			["encounterID"] = 1835,
		},
		[361387] = {
			["npcID"] = 182466,
		},
		[358316] = {
			["npcID"] = 180681,
		},
		[338865] = {
			["npcID"] = 173191,
		},
		[200689] = {
			["npcID"] = 102724,
		},
		[152573] = {
			["npcID"] = 75241,
		},
		[330676] = {
			["npcID"] = 172388,
		},
		[211439] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 111022,
			["encounterID"] = 1866,
		},
		[354223] = {
			["npcID"] = 177514,
		},
		[338867] = {
			["npcID"] = 167526,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["npcID"] = 40765,
		},
		[338868] = {
			["npcID"] = 167526,
		},
		[76815] = {
			["npcID"] = 41096,
		},
		[358320] = {
			["npcID"] = 180162,
		},
		[49037] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 1976,
			["npcID"] = 26631,
		},
		[123652] = {
			["npcID"] = 61947,
		},
		[154623] = {
			["npcID"] = 77131,
		},
		[204275] = {
			["encounterName"] = "Skorpyron",
			["npcID"] = 102263,
			["encounterID"] = 1849,
		},
		[323515] = {
			["encounterName"] = "Gorechop",
			["npcID"] = 162317,
			["encounterID"] = 2365,
		},
		[214001] = {
			["npcID"] = 102095,
		},
		[338872] = {
			["npcID"] = 167526,
		},
		[202740] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[59019] = {
			["npcID"] = 29774,
		},
		[288710] = {
			["npcID"] = 157683,
		},
		[189944] = {
			["npcID"] = 95602,
		},
		[210931] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["npcID"] = 105906,
			["encounterID"] = 1873,
		},
		[321471] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[52237] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 1985,
		},
		[32329] = {
			["npcID"] = 17871,
		},
		[52493] = {
			["encounterName"] = "Hadronox",
			["npcID"] = 28731,
			["encounterID"] = 1972,
		},
		[355256] = {
			["npcID"] = 178631,
		},
		[358328] = {
			["npcID"] = 179760,
		},
		[32914] = {
			["npcID"] = 25464,
		},
		[230384] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115767,
		},
		[123654] = {
			["encounterName"] = "Trial of the King",
			["npcID"] = 61444,
			["encounterID"] = 1442,
		},
		[150020] = {
			["encounterName"] = "Twilight Lord Bathiel",
			["encounterID"] = 1671,
			["npcID"] = 74728,
		},
		[193018] = {
			["encounterName"] = "King Deepbeard",
			["npcID"] = 91797,
			["encounterID"] = 1812,
		},
		[348094] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[59020] = {
			["npcID"] = 29774,
		},
		[240623] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 117279,
		},
		[318406] = {
			["encounterName"] = "Gorechop",
			["npcID"] = 162317,
			["encounterID"] = 2365,
		},
		[336834] = {
			["npcID"] = 177295,
		},
		[317383] = {
			["npcID"] = 150237,
		},
		[304075] = {
			["npcID"] = 155812,
		},
		[236529] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118523,
		},
		[347073] = {
			["npcID"] = 177187,
		},
		[151558] = {
			["npcID"] = 74349,
		},
		[354240] = {
			["npcID"] = 179433,
		},
		[185854] = {
			["npcID"] = 92792,
		},
		[344003] = {
			["npcID"] = 168580,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74475,
		},
		[336838] = {
			["npcID"] = 158278,
		},
		[354242] = {
			["npcID"] = 179434,
		},
		[71189] = {
			["encounterName"] = "Valithria Dreamwalker",
			["npcID"] = 36789,
			["encounterID"] = 1098,
		},
		[326602] = {
			["npcID"] = 170767,
		},
		[200700] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[50319] = {
			["npcID"] = 25465,
		},
		[335817] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[328651] = {
			["npcID"] = 167493,
		},
		[163334] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80808,
			["encounterID"] = 1748,
		},
		[320462] = {
			["npcID"] = 163128,
		},
		[185857] = {
			["npcID"] = 101026,
		},
		[43665] = {
			["npcID"] = 24071,
		},
		[341962] = {
			["npcID"] = 162109,
		},
		[356295] = {
			["npcID"] = 170257,
		},
		[32330] = {
			["npcID"] = 17732,
		},
		[226296] = {
			["npcID"] = 91000,
		},
		[326607] = {
			["npcID"] = 167612,
		},
		[320465] = {
			["npcID"] = 177140,
		},
		[358344] = {
			["npcID"] = 180015,
		},
		[330703] = {
			["npcID"] = 174210,
		},
		[354250] = {
			["npcID"] = 179434,
		},
		[323538] = {
			["encounterName"] = "High Adjudicator Aleez",
			["npcID"] = 165410,
			["encounterID"] = 2403,
		},
		[186883] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90432,
			["encounterID"] = 1778,
		},
		[341966] = {
			["npcID"] = 162690,
		},
		[131601] = {
			["npcID"] = 66948,
		},
		[358348] = {
			["npcID"] = 179472,
		},
		[192003] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 97259,
			["encounterID"] = 1813,
		},
		[341969] = {
			["npcID"] = 174210,
		},
		[222716] = {
			["npcID"] = 111354,
		},
		[319447] = {
			["npcID"] = 157099,
		},
		[3243] = {
			["npcID"] = 1753,
		},
		[359374] = {
			["npcID"] = 181028,
		},
		[356303] = {
			["npcID"] = 170257,
		},
		[354256] = {
			["npcID"] = 179434,
		},
		[347090] = {
			["npcID"] = 178263,
		},
		[323544] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 165905,
			["encounterID"] = 2395,
		},
		[304093] = {
			["npcID"] = 155908,
		},
		[166923] = {
			["npcID"] = 81603,
		},
		[347091] = {
			["npcID"] = 164047,
		},
		[345044] = {
			["npcID"] = 170028,
		},
		[358353] = {
			["npcID"] = 179760,
		},
		[356306] = {
			["npcID"] = 183652,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74475,
		},
		[348117] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[112911] = {
			["npcID"] = 58810,
		},
		[347094] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[50705] = {
			["npcID"] = 27636,
		},
		[328667] = {
			["npcID"] = 163126,
		},
		[347095] = {
			["npcID"] = 178263,
		},
		[6917] = {
			["npcID"] = 25445,
		},
		[320478] = {
			["npcID"] = 180379,
		},
		[341977] = {
			["npcID"] = 170690,
		},
		[330716] = {
			["npcID"] = 167998,
		},
		[352215] = {
			["npcID"] = 176578,
		},
		[43667] = {
			["encounterName"] = "Prince Keleseth",
			["npcID"] = 23953,
			["encounterID"] = 2026,
		},
		[327646] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[226304] = {
			["npcID"] = 91000,
		},
		[323552] = {
			["encounterName"] = "High Adjudicator Aleez",
			["npcID"] = 165410,
			["encounterID"] = 2403,
		},
		[354265] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[331743] = {
			["npcID"] = 166276,
		},
		[233983] = {
			["encounterName"] = "Demonic Inquisition",
			["encounterID"] = 2048,
			["npcID"] = 116691,
		},
		[343005] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[162321] = {
			["npcID"] = 78173,
		},
		[252923] = {
			["npcID"] = 122969,
		},
		[131097] = {
			["npcID"] = 66052,
		},
		[42772] = {
			["npcID"] = 23956,
		},
		[360412] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[325605] = {
			["npcID"] = 172080,
		},
		[355294] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[352223] = {
			["npcID"] = 176578,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74475,
		},
		[71196] = {
			["npcID"] = 36789,
		},
		[360414] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[357343] = {
			["npcID"] = 180427,
		},
		[297966] = {
			["npcID"] = 153382,
		},
		[327655] = {
			["npcID"] = 168420,
		},
		[110099] = {
			["npcID"] = 57109,
		},
		[228868] = {
			["npcID"] = 114813,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[166420] = {
			["npcID"] = 81422,
		},
		[350180] = {
			["npcID"] = 177286,
		},
		[355299] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 178661,
			["encounterID"] = 2423,
		},
		[54290] = {
			["encounterName"] = "Hadronox",
			["npcID"] = 29335,
			["encounterID"] = 1972,
		},
		[50323] = {
			["npcID"] = 25609,
		},
		[305136] = {
			["npcID"] = 156226,
		},
		[351206] = {
			["npcID"] = 176575,
		},
		[324589] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 166524,
			["encounterID"] = 2404,
		},
		[51475] = {
			["npcID"] = 27962,
		},
		[196111] = {
			["npcID"] = 91793,
		},
		[358375] = {
			["npcID"] = 179472,
		},
		[52755] = {
			["npcID"] = 28580,
		},
		[328687] = {
			["npcID"] = 166079,
		},
		[366566] = {
			["npcID"] = 184910,
		},
		[212492] = {
			["encounterName"] = "Spellblade Aluriel",
			["npcID"] = 104881,
			["encounterID"] = 1871,
		},
		[327664] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[361448] = {
			["npcID"] = 182368,
		},
		[272382] = {
			["npcID"] = 155250,
		},
		[355306] = {
			["npcID"] = 179778,
		},
		[262145] = {
			["npcID"] = 175670,
		},
		[357354] = {
			["npcID"] = 180427,
		},
		[337903] = {
			["npcID"] = 162874,
		},
		[200720] = {
			["npcID"] = 101753,
		},
		[340975] = {
			["npcID"] = 165344,
		},
		[166425] = {
			["npcID"] = 75348,
		},
		[288765] = {
			["npcID"] = 177637,
		},
		[192019] = {
			["npcID"] = 97182,
		},
		[151581] = {
			["npcID"] = 75193,
		},
		[295932] = {
			["npcID"] = 151329,
		},
		[296956] = {
			["npcID"] = 185012,
		},
		[322550] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[191509] = {
			["npcID"] = 102886,
		},
		[360432] = {
			["npcID"] = 178963,
		},
		[345076] = {
			["npcID"] = 170037,
		},
		[362480] = {
			["npcID"] = 182322,
		},
		[322554] = {
			["encounterName"] = "Executor Tarvold",
			["encounterID"] = 2361,
			["npcID"] = 162103,
		},
		[150048] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74579,
		},
		[79903] = {
			["npcID"] = 81996,
		},
		[336888] = {
			["npcID"] = 168233,
		},
		[338936] = {
			["npcID"] = 172390,
		},
		[357364] = {
			["npcID"] = 178294,
		},
		[322557] = {
			["npcID"] = 164920,
		},
		[338939] = {
			["npcID"] = 167055,
		},
		[320512] = {
			["npcID"] = 163892,
		},
		[336893] = {
			["npcID"] = 162873,
		},
		[350202] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[351226] = {
			["npcID"] = 178071,
		},
		[357369] = {
			["npcID"] = 178294,
		},
		[277517] = {
			["npcID"] = 177862,
		},
		[339966] = {
			["npcID"] = 164861,
		},
		[357370] = {
			["npcID"] = 178294,
		},
		[189467] = {
			["npcID"] = 97090,
		},
		[328707] = {
			["npcID"] = 168992,
		},
		[330755] = {
			["npcID"] = 169859,
		},
		[348159] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[333827] = {
			["npcID"] = 167533,
		},
		[348160] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[200218] = {
			["npcID"] = 101462,
		},
		[241680] = {
			["encounterName"] = "Harjatan",
			["encounterID"] = 2036,
			["npcID"] = 121184,
		},
		[131627] = {
			["npcID"] = 66425,
		},
		[362494] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[15241] = {
			["npcID"] = 8910,
		},
		[15305] = {
			["npcID"] = 78553,
		},
		[119577] = {
			["npcID"] = 58216,
		},
		[352259] = {
			["npcID"] = 185028,
		},
		[228373] = {
			["npcID"] = 114539,
		},
		[343046] = {
			["npcID"] = 169041,
		},
		[200732] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[296978] = {
			["npcID"] = 153003,
		},
		[235028] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 118289,
		},
		[360451] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[15785] = {
			["npcID"] = 19306,
		},
		[130583] = {
			["npcID"] = 66395,
		},
		[365572] = {
			["npcID"] = 184733,
		},
		[338955] = {
			["npcID"] = 166179,
		},
		[75813] = {
			["npcID"] = 40634,
		},
		[121114] = {
			["npcID"] = 61929,
		},
		[153642] = {
			["npcID"] = 76151,
		},
		[320529] = {
			["npcID"] = 168886,
		},
		[48920] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 1977,
			["npcID"] = 27483,
		},
		[338957] = {
			["npcID"] = 165998,
		},
		[319506] = {
			["npcID"] = 164232,
		},
		[336910] = {
			["npcID"] = 162872,
		},
		[333839] = {
			["npcID"] = 167534,
		},
		[336911] = {
			["npcID"] = 178979,
		},
		[347149] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[343055] = {
			["npcID"] = 178988,
		},
		[6358] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 120526,
			["encounterID"] = 2544,
		},
		[362507] = {
			["npcID"] = 182690,
		},
		[343056] = {
			["npcID"] = 172025,
		},
		[241687] = {
			["npcID"] = 117484,
		},
		[343057] = {
			["npcID"] = 178988,
		},
		[352271] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[191524] = {
			["npcID"] = 96657,
		},
		[343058] = {
			["npcID"] = 178988,
		},
		[131635] = {
			["npcID"] = 65880,
		},
		[333845] = {
			["npcID"] = 167534,
		},
		[323608] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[195108] = {
			["npcID"] = 91783,
		},
		[343060] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[13322] = {
			["npcID"] = 1522,
		},
		[156718] = {
			["npcID"] = 76104,
		},
		[195109] = {
			["npcID"] = 91783,
		},
		[329753] = {
			["npcID"] = 156134,
		},
		[343062] = {
			["npcID"] = 169042,
		},
		[321564] = {
			["npcID"] = 165124,
		},
		[206883] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104534,
			["encounterID"] = 1866,
		},
		[357396] = {
			["npcID"] = 180070,
		},
		[191527] = {
			["npcID"] = 96657,
		},
		[355349] = {
			["npcID"] = 177646,
		},
		[9739] = {
			["npcID"] = 82013,
		},
		[209443] = {
			["encounterName"] = "Xavius",
			["npcID"] = 103769,
			["encounterID"] = 1864,
		},
		[197670] = {
			["npcID"] = 97418,
		},
		[239132] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 116939,
		},
		[167470] = {
			["npcID"] = 78553,
		},
		[292903] = {
			["npcID"] = 150958,
		},
		[355352] = {
			["encounterName"] = "Guardian of the First Ones",
			["encounterID"] = 2436,
			["npcID"] = 175731,
		},
		[368661] = {
			["npcID"] = 179386,
		},
		[347163] = {
			["npcID"] = 176198,
		},
		[225313] = {
			["npcID"] = 113084,
		},
		[234015] = {
			["encounterName"] = "Demonic Inquisition",
			["encounterID"] = 2048,
			["npcID"] = 116691,
		},
		[205862] = {
			["encounterName"] = "Krosus",
			["npcID"] = 101002,
			["encounterID"] = 1842,
		},
		[330784] = {
			["npcID"] = 174197,
		},
		[357402] = {
			["npcID"] = 180070,
		},
		[298025] = {
			["npcID"] = 158160,
		},
		[139319] = {
			["npcID"] = 70236,
		},
		[218148] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109038,
			["encounterID"] = 1886,
		},
		[330786] = {
			["npcID"] = 169861,
		},
		[38557] = {
			["npcID"] = 80886,
		},
		[343072] = {
			["npcID"] = 172025,
		},
		[331811] = {
			["npcID"] = 165687,
		},
		[328740] = {
			["npcID"] = 168992,
		},
		[332836] = {
			["npcID"] = 169927,
		},
		[292910] = {
			["npcID"] = 150965,
		},
		[163379] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80875,
			["encounterID"] = 1748,
		},
		[353312] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[333861] = {
			["npcID"] = 167536,
		},
		[15242] = {
			["npcID"] = 17477,
		},
		[118049] = {
			["encounterName"] = "The Spirit Kings",
			["encounterID"] = 1436,
			["npcID"] = 60710,
		},
		[193069] = {
			["npcID"] = 96587,
		},
		[70189] = {
			["npcID"] = 37544,
		},
		[356386] = {
			["npcID"] = 178907,
		},
		[295985] = {
			["npcID"] = 159755,
		},
		[330793] = {
			["npcID"] = 169859,
		},
		[238627] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 119938,
		},
		[359459] = {
			["npcID"] = 184060,
		},
		[352293] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[50843] = {
			["encounterName"] = "Krystallus",
			["encounterID"] = 1994,
			["npcID"] = 27977,
		},
		[183345] = {
			["npcID"] = 153011,
		},
		[343080] = {
			["npcID"] = 169042,
		},
		[107045] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56762,
		},
		[228391] = {
			["npcID"] = 114532,
		},
		[160312] = {
			["npcID"] = 77134,
		},
		[230951] = {
			["encounterName"] = "Spellblade Aluriel",
			["npcID"] = 115905,
			["encounterID"] = 1871,
		},
		[295991] = {
			["npcID"] = 151331,
		},
		[110117] = {
			["npcID"] = 65414,
		},
		[196144] = {
			["npcID"] = 91790,
		},
		[69679] = {
			["encounterName"] = "Icecrown Gunship Battle",
			["encounterID"] = 1099,
			["npcID"] = 36978,
		},
		[139838] = {
			["encounterName"] = "Megaera",
			["npcID"] = 70247,
			["encounterID"] = 1578,
		},
		[193585] = {
			["npcID"] = 102232,
		},
		[123938] = {
			["npcID"] = 63279,
		},
		[357418] = {
			["npcID"] = 178443,
		},
		[297017] = {
			["npcID"] = 185012,
		},
		[192050] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 91808,
			["encounterID"] = 1813,
		},
		[209454] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 105630,
			["encounterID"] = 1866,
		},
		[197681] = {
			["npcID"] = 97418,
		},
		[340016] = {
			["npcID"] = 171184,
		},
		[236072] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118462,
		},
		[166969] = {
			["npcID"] = 79315,
		},
		[328756] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[333875] = {
			["npcID"] = 168942,
		},
		[51612] = {
			["npcID"] = 27964,
		},
		[340018] = {
			["npcID"] = 172523,
		},
		[99625] = {
			["npcID"] = 53121,
		},
		[292926] = {
			["npcID"] = 151127,
		},
		[204337] = {
			["npcID"] = 118787,
		},
		[208944] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 106643,
			["encounterID"] = 1872,
		},
		[357423] = {
			["npcID"] = 178443,
		},
		[323640] = {
			["npcID"] = 165473,
		},
		[329783] = {
			["npcID"] = 156226,
		},
		[326712] = {
			["npcID"] = 167956,
		},
		[13323] = {
			["npcID"] = 26727,
		},
		[319547] = {
			["npcID"] = 160716,
		},
		[320571] = {
			["npcID"] = 163128,
		},
		[324667] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[315454] = {
			["npcID"] = 177978,
		},
		[355381] = {
			["npcID"] = 177646,
		},
		[200757] = {
			["npcID"] = 96280,
		},
		[357429] = {
			["npcID"] = 178824,
		},
		[209971] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 106643,
			["encounterID"] = 1872,
		},
		[206388] = {
			["encounterName"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["encounterID"] = 1863,
		},
		[340026] = {
			["npcID"] = 171184,
		},
		[325694] = {
			["npcID"] = 160359,
		},
		[356407] = {
			["npcID"] = 180091,
		},
		[320576] = {
			["npcID"] = 168886,
		},
		[56860] = {
			["npcID"] = 26728,
		},
		[154178] = {
			["npcID"] = 76314,
		},
		[122406] = {
			["encounterName"] = "Wind Lord Mel'jarak",
			["npcID"] = 62397,
			["encounterID"] = 1498,
		},
		[336958] = {
			["npcID"] = 162853,
		},
		[337982] = {
			["npcID"] = 162872,
		},
		[330816] = {
			["npcID"] = 169861,
		},
		[195129] = {
			["npcID"] = 91782,
		},
		[200248] = {
			["npcID"] = 98280,
		},
		[359483] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[325700] = {
			["npcID"] = 165529,
		},
		[355389] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176703,
			["encounterID"] = 2422,
		},
		[184381] = {
			["npcID"] = 159190,
		},
		[160323] = {
			["npcID"] = 92529,
		},
		[70196] = {
			["npcID"] = 37126,
		},
		[343105] = {
			["npcID"] = 170208,
		},
		[165954] = {
			["npcID"] = 82418,
		},
		[99629] = {
			["npcID"] = 53619,
		},
		[292942] = {
			["npcID"] = 151128,
		},
		[319560] = {
			["npcID"] = 172704,
		},
		[357439] = {
			["npcID"] = 178653,
		},
		[330822] = {
			["npcID"] = 169859,
		},
		[331846] = {
			["npcID"] = 167964,
		},
		[334918] = {
			["npcID"] = 162047,
		},
		[205370] = {
			["encounterName"] = "Krosus",
			["npcID"] = 101002,
			["encounterID"] = 1842,
		},
		[193597] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[70965] = {
			["npcID"] = 36725,
		},
		[196157] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99645,
		},
		[15659] = {
			["encounterName"] = "Darkweaver Syth",
			["encounterID"] = 1903,
			["npcID"] = 18472,
		},
		[235572] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 116939,
		},
		[296019] = {
			["npcID"] = 151128,
		},
		[225847] = {
			["npcID"] = 112973,
		},
		[328781] = {
			["npcID"] = 159916,
		},
		[350280] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[155721] = {
			["encounterName"] = "Warlord Zaela",
			["encounterID"] = 1762,
			["npcID"] = 77120,
		},
		[52383] = {
			["npcID"] = 27972,
		},
		[346186] = {
			["npcID"] = 167323,
		},
		[181827] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 91541,
			["encounterID"] = 1788,
		},
		[56862] = {
			["npcID"] = 30419,
		},
		[110125] = {
			["npcID"] = 57109,
		},
		[334926] = {
			["npcID"] = 168878,
		},
		[350283] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[351307] = {
			["npcID"] = 176572,
		},
		[295001] = {
			["npcID"] = 151128,
		},
		[362569] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[298073] = {
			["npcID"] = 153451,
		},
		[200768] = {
			["npcID"] = 95766,
		},
		[320596] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[334929] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[17174] = {
			["npcID"] = 23177,
		},
		[164426] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["npcID"] = 81305,
			["encounterID"] = 1749,
		},
		[362572] = {
			["npcID"] = 182728,
		},
		[343121] = {
			["npcID"] = 169043,
		},
		[356430] = {
			["npcID"] = 178958,
		},
		[338003] = {
			["npcID"] = 165414,
		},
		[356431] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 180113,
		},
		[198723] = {
			["npcID"] = 99358,
		},
		[328791] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[338005] = {
			["npcID"] = 165415,
		},
		[204866] = {
			["npcID"] = 103271,
		},
		[193093] = {
			["encounterName"] = "King Deepbeard",
			["npcID"] = 91797,
			["encounterID"] = 1812,
		},
		[362576] = {
			["npcID"] = 182728,
		},
		[326745] = {
			["npcID"] = 170016,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[365649] = {
			["npcID"] = 184734,
		},
		[338008] = {
			["npcID"] = 163213,
		},
		[9613] = {
			["npcID"] = 19411,
		},
		[200261] = {
			["npcID"] = 98243,
		},
		[316511] = {
			["npcID"] = 172786,
		},
		[325725] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[166478] = {
			["npcID"] = 82647,
		},
		[338011] = {
			["npcID"] = 166318,
		},
		[192072] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["encounterID"] = 1810,
		},
		[270444] = {
			["npcID"] = 157145,
		},
		[112944] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 56717,
			["encounterID"] = 1413,
		},
		[352345] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 176178,
			["encounterID"] = 2419,
		},
		[328799] = {
			["npcID"] = 166741,
		},
		[321633] = {
			["npcID"] = 170228,
		},
		[192073] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["encounterID"] = 1810,
		},
		[106546] = {
			["npcID"] = 59518,
		},
		[320610] = {
			["npcID"] = 165909,
		},
		[346204] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[355418] = {
			["npcID"] = 180511,
		},
		[352347] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[346205] = {
			["npcID"] = 173717,
		},
		[352348] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
		},
		[173135] = {
			["npcID"] = 83578,
		},
		[260666] = {
			["npcID"] = 132126,
		},
		[106547] = {
			["npcID"] = 56395,
		},
		[320614] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[346208] = {
			["npcID"] = 177899,
		},
		[70460] = {
			["npcID"] = 37744,
		},
		[206920] = {
			["encounterName"] = "Xavius",
			["npcID"] = 104592,
			["encounterID"] = 1864,
		},
		[150102] = {
			["npcID"] = 80227,
		},
		[336996] = {
			["npcID"] = 162744,
		},
		[11085] = {
			["encounterName"] = "Electrocutioner 6000",
			["npcID"] = 6235,
			["encounterID"] = 380,
		},
		[206921] = {
			["encounterName"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["encounterID"] = 1863,
		},
		[358496] = {
			["npcID"] = 179805,
		},
		[249919] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[213576] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[339046] = {
			["npcID"] = 169759,
		},
		[352355] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
			["encounterID"] = 2422,
		},
		[139867] = {
			["encounterName"] = "Dark Animus",
			["npcID"] = 69427,
			["encounterID"] = 1576,
		},
		[333929] = {
			["npcID"] = 172388,
		},
		[354405] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[355429] = {
			["npcID"] = 178165,
		},
		[340073] = {
			["npcID"] = 168697,
		},
		[51363] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 1976,
			["npcID"] = 27600,
		},
		[333931] = {
			["npcID"] = 172388,
		},
		[111668] = {
			["npcID"] = 56877,
		},
		[128304] = {
			["npcID"] = 58198,
		},
		[199758] = {
			["npcID"] = 96682,
		},
		[196175] = {
			["npcID"] = 95947,
		},
		[79932] = {
			["npcID"] = 82008,
		},
		[52387] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 1985,
		},
		[329838] = {
			["npcID"] = 159027,
		},
		[60833] = {
			["npcID"] = 30414,
		},
		[150619] = {
			["npcID"] = 74729,
		},
		[249923] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[160345] = {
			["npcID"] = 92529,
		},
		[342125] = {
			["npcID"] = 167538,
		},
		[191058] = {
			["npcID"] = 99451,
		},
		[162905] = {
			["npcID"] = 77180,
		},
		[159322] = {
			["npcID"] = 74622,
		},
		[200784] = {
			["npcID"] = 98792,
		},
		[321652] = {
			["npcID"] = 170228,
		},
		[310392] = {
			["npcID"] = 159190,
		},
		[300155] = {
			["npcID"] = 164929,
		},
		[317559] = {
			["npcID"] = 153964,
		},
		[355438] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176563,
			["encounterID"] = 2440,
		},
		[364652] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[320631] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[347249] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[201298] = {
			["npcID"] = 100532,
		},
		[366701] = {
			["npcID"] = 185268,
		},
		[343155] = {
			["npcID"] = 173446,
		},
		[365678] = {
			["npcID"] = 184734,
		},
		[209489] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 106545,
			["encounterID"] = 1866,
		},
		[334967] = {
			["npcID"] = 171343,
		},
		[167516] = {
			["npcID"] = 86809,
		},
		[33961] = {
			["npcID"] = 18318,
		},
		[342135] = {
			["npcID"] = 162744,
		},
		[343159] = {
			["npcID"] = 173444,
		},
		[320637] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[330875] = {
			["npcID"] = 169893,
		},
		[353398] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 179010,
			["encounterID"] = 2431,
		},
		[173148] = {
			["npcID"] = 81279,
		},
		[161887] = {
			["npcID"] = 78314,
		},
		[342139] = {
			["npcID"] = 167536,
		},
		[351353] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177891,
			["encounterID"] = 2435,
		},
		[126005] = {
			["npcID"] = 63809,
		},
		[355450] = {
			["npcID"] = 180524,
		},
		[352379] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[54309] = {
			["npcID"] = 29128,
		},
		[320644] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[189531] = {
			["npcID"] = 95603,
		},
		[359547] = {
			["npcID"] = 182353,
		},
		[270481] = {
			["npcID"] = 135002,
		},
		[55077] = {
			["npcID"] = 29735,
		},
		[51494] = {
			["npcID"] = 27969,
		},
		[366716] = {
			["npcID"] = 185274,
		},
		[331909] = {
			["npcID"] = 165473,
		},
		[329862] = {
			["npcID"] = 153885,
		},
		[355456] = {
			["npcID"] = 178958,
		},
		[157797] = {
			["npcID"] = 77080,
		},
		[215639] = {
			["npcID"] = 95935,
		},
		[346243] = {
			["npcID"] = 168233,
		},
		[241233] = {
			["npcID"] = 121003,
		},
		[115002] = {
			["encounterName"] = "Taran Zhu",
			["encounterID"] = 1306,
			["npcID"] = 56884,
		},
		[350339] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177407,
			["encounterID"] = 2429,
		},
		[360577] = {
			["npcID"] = 180930,
		},
		[236115] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118374,
		},
		[167012] = {
			["npcID"] = 155945,
		},
		[326794] = {
			["npcID"] = 167876,
		},
		[319628] = {
			["npcID"] = 178376,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["npcID"] = 40765,
		},
		[255567] = {
			["npcID"] = 128455,
		},
		[206939] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[357508] = {
			["npcID"] = 180495,
		},
		[350342] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[352390] = {
			["npcID"] = 179334,
		},
		[115003] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["npcID"] = 59479,
			["encounterID"] = 1414,
		},
		[59685] = {
			["npcID"] = 23956,
		},
		[357510] = {
			["npcID"] = 177330,
		},
		[150634] = {
			["encounterName"] = "Subjugator Kor'ul",
			["encounterID"] = 1669,
			["npcID"] = 74565,
		},
		[334988] = {
			["npcID"] = 171596,
		},
		[355464] = {
			["npcID"] = 178165,
		},
		[161896] = {
			["npcID"] = 78314,
		},
		[353417] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[346251] = {
			["npcID"] = 168233,
		},
		[353418] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[193633] = {
			["npcID"] = 98275,
		},
		[49704] = {
			["npcID"] = 26625,
		},
		[20825] = {
			["npcID"] = 9547,
		},
		[233048] = {
			["npcID"] = 118776,
		},
		[204895] = {
			["npcID"] = 102302,
		},
		[357516] = {
			["npcID"] = 177137,
		},
		[200289] = {
			["encounterName"] = "Shade of Xavius",
			["npcID"] = 99192,
			["encounterID"] = 1839,
		},
		[51240] = {
			["npcID"] = 26830,
		},
		[345232] = {
			["npcID"] = 168693,
		},
		[51496] = {
			["npcID"] = 27965,
		},
		[345233] = {
			["npcID"] = 168693,
		},
		[325782] = {
			["npcID"] = 169823,
		},
		[322711] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[84037] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 40792,
		},
		[172649] = {
			["npcID"] = 81432,
		},
		[360591] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182045,
			["encounterID"] = 2544,
		},
		[52904] = {
			["npcID"] = 28965,
		},
		[355473] = {
			["npcID"] = 179821,
		},
		[331927] = {
			["npcID"] = 167962,
		},
		[115006] = {
			["npcID"] = 55470,
		},
		[333975] = {
			["npcID"] = 165998,
		},
		[243289] = {
			["npcID"] = 121399,
		},
		[328857] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[50089] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 1976,
			["npcID"] = 26631,
		},
		[198245] = {
			["encounterName"] = "Smashspite the Hateful",
			["npcID"] = 98949,
			["encounterID"] = 1834,
		},
		[141427] = {
			["npcID"] = 183258,
		},
		[358548] = {
			["npcID"] = 180664,
		},
		[355477] = {
			["npcID"] = 179842,
		},
		[328860] = {
			["npcID"] = 165549,
		},
		[325790] = {
			["npcID"] = 158629,
		},
		[355479] = {
			["npcID"] = 179821,
		},
		[348313] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[365717] = {
			["npcID"] = 183432,
		},
		[255577] = {
			["encounterName"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["npcID"] = 122967,
		},
		[52905] = {
			["npcID"] = 28826,
		},
		[347291] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[331935] = {
			["npcID"] = 170385,
		},
		[263344] = {
			["npcID"] = 157094,
		},
		[338079] = {
			["npcID"] = 164737,
		},
		[322723] = {
			["npcID"] = 165591,
		},
		[350365] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[255579] = {
			["encounterName"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["npcID"] = 122967,
		},
		[323748] = {
			["npcID"] = 158642,
		},
		[89415] = {
			["npcID"] = 57783,
		},
		[191595] = {
			["npcID"] = 96587,
		},
		[106563] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["npcID"] = 59479,
			["encounterID"] = 1414,
		},
		[365723] = {
			["npcID"] = 183438,
		},
		[243295] = {
			["npcID"] = 121400,
		},
		[340130] = {
			["npcID"] = 165663,
		},
		[328869] = {
			["npcID"] = 157122,
		},
		[17883] = {
			["npcID"] = 18312,
		},
		[204905] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99676,
		},
		[361630] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[336037] = {
			["npcID"] = 181186,
		},
		[324776] = {
			["npcID"] = 166275,
		},
		[342180] = {
			["npcID"] = 170835,
		},
		[330919] = {
			["npcID"] = 169912,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["encounterID"] = 1816,
			["npcID"] = 95886,
		},
		[152183] = {
			["npcID"] = 75406,
		},
		[298160] = {
			["npcID"] = 153451,
		},
		[236131] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118462,
		},
		[325802] = {
			["npcID"] = 166936,
		},
		[344230] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[226406] = {
			["npcID"] = 113537,
		},
		[326827] = {
			["npcID"] = 162040,
		},
		[202860] = {
			["npcID"] = 104328,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 2025,
		},
		[195694] = {
			["npcID"] = 98884,
		},
		[196206] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99704,
		},
		[59433] = {
			["encounterName"] = "Anub'arak",
			["encounterID"] = 1973,
			["npcID"] = 29120,
		},
		[205420] = {
			["encounterName"] = "Krosus",
			["npcID"] = 101002,
			["encounterID"] = 1842,
		},
		[201837] = {
			["npcID"] = 99366,
		},
		[326829] = {
			["npcID"] = 167876,
		},
		[326830] = {
			["npcID"] = 167851,
		},
		[341163] = {
			["npcID"] = 171396,
		},
		[342187] = {
			["npcID"] = 166135,
		},
		[330926] = {
			["npcID"] = 172395,
		},
		[61353] = {
			["npcID"] = 96779,
		},
		[69967] = {
			["npcID"] = 37021,
		},
		[342189] = {
			["npcID"] = 174175,
		},
		[119875] = {
			["encounterName"] = "General Pa'valak",
			["npcID"] = 61485,
			["encounterID"] = 1447,
		},
		[329905] = {
			["npcID"] = 157118,
		},
		[336048] = {
			["npcID"] = 167704,
		},
		[346286] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 175646,
			["encounterID"] = 2424,
		},
		[339120] = {
			["npcID"] = 173240,
		},
		[319669] = {
			["encounterName"] = "Kul'tharok",
			["encounterID"] = 2364,
			["npcID"] = 162309,
		},
		[106055] = {
			["encounterName"] = "Wise Mari",
			["encounterID"] = 1418,
			["npcID"] = 56448,
		},
		[326836] = {
			["npcID"] = 162039,
		},
		[69968] = {
			["npcID"] = 37027,
		},
		[329908] = {
			["npcID"] = 157017,
		},
		[326837] = {
			["npcID"] = 162040,
		},
		[194675] = {
			["npcID"] = 98963,
		},
		[357550] = {
			["npcID"] = 176940,
		},
		[329909] = {
			["npcID"] = 157017,
		},
		[322743] = {
			["npcID"] = 155824,
		},
		[320696] = {
			["npcID"] = 163121,
		},
		[350385] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[52780] = {
			["encounterName"] = "Ionar",
			["npcID"] = 28546,
			["encounterID"] = 1984,
		},
		[236138] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118462,
		},
		[322745] = {
			["npcID"] = 170853,
		},
		[119365] = {
			["npcID"] = 61250,
		},
		[30937] = {
			["npcID"] = 17653,
		},
		[231532] = {
			["npcID"] = 114845,
		},
		[365744] = {
			["npcID"] = 184651,
		},
		[33969] = {
			["npcID"] = 18981,
		},
		[334009] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[351413] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[178298] = {
			["npcID"] = 81432,
		},
		[341176] = {
			["npcID"] = 166317,
		},
		[343224] = {
			["npcID"] = 160785,
		},
		[192631] = {
			["encounterName"] = "Ash'Golm",
			["encounterID"] = 1816,
			["npcID"] = 95886,
		},
		[69970] = {
			["npcID"] = 37016,
		},
		[329916] = {
			["npcID"] = 171173,
		},
		[35377] = {
			["npcID"] = 59021,
		},
		[211571] = {
			["npcID"] = 113012,
		},
		[329917] = {
			["npcID"] = 168578,
		},
		[293063] = {
			["npcID"] = 151331,
		},
		[326847] = {
			["npcID"] = 167876,
		},
		[236142] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118460,
		},
		[326848] = {
			["npcID"] = 163992,
		},
		[356537] = {
			["npcID"] = 179334,
		},
		[197240] = {
			["npcID"] = 98986,
		},
		[57644] = {
			["encounterName"] = "Herald Volazj",
			["npcID"] = 30621,
			["encounterID"] = 1968,
		},
		[150660] = {
			["npcID"] = 74747,
		},
		[322756] = {
			["npcID"] = 165137,
		},
		[348350] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[336066] = {
			["npcID"] = 182686,
		},
		[69972] = {
			["npcID"] = 37148,
		},
		[321734] = {
			["npcID"] = 156564,
		},
		[322759] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[336068] = {
			["npcID"] = 182686,
		},
		[297166] = {
			["npcID"] = 152875,
		},
		[69973] = {
			["npcID"] = 37148,
		},
		[334023] = {
			["npcID"] = 167536,
		},
		[335047] = {
			["npcID"] = 172040,
		},
		[49711] = {
			["npcID"] = 26637,
		},
		[71253] = {
			["npcID"] = 37134,
		},
		[330953] = {
			["npcID"] = 172399,
		},
		[327882] = {
			["npcID"] = 168153,
		},
		[320716] = {
			["npcID"] = 179805,
		},
		[329930] = {
			["npcID"] = 157083,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 104293,
		},
		[356548] = {
			["npcID"] = 178392,
		},
		[68950] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[355525] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[360644] = {
			["npcID"] = 181339,
		},
		[69974] = {
			["npcID"] = 37144,
		},
		[51503] = {
			["npcID"] = 27966,
		},
		[202365] = {
			["npcID"] = 102375,
		},
		[327885] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[71254] = {
			["encounterName"] = "Lady Deathwhisper",
			["encounterID"] = 1100,
			["npcID"] = 36855,
		},
		[322767] = {
			["npcID"] = 164921,
		},
		[188545] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90409,
			["encounterID"] = 1778,
		},
		[193152] = {
			["encounterName"] = "King Deepbeard",
			["npcID"] = 91797,
			["encounterID"] = 1812,
		},
		[330958] = {
			["npcID"] = 177133,
		},
		[306389] = {
			["npcID"] = 156825,
		},
		[69975] = {
			["npcID"] = 37144,
		},
		[350411] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175728,
			["encounterID"] = 2434,
		},
		[49712] = {
			["npcID"] = 26637,
		},
		[224378] = {
			["npcID"] = 112655,
		},
		[33844] = {
			["npcID"] = 82025,
		},
		[358603] = {
			["npcID"] = 181212,
		},
		[327891] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 169506,
			["encounterID"] = 2396,
		},
		[197250] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[335059] = {
			["npcID"] = 171696,
		},
		[3237] = {
			["npcID"] = 1674,
		},
		[337107] = {
			["npcID"] = 168693,
		},
		[95826] = {
			["npcID"] = 51346,
		},
		[225404] = {
			["npcID"] = 112804,
		},
		[197251] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[201858] = {
			["npcID"] = 100539,
		},
		[320729] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[357586] = {
			["npcID"] = 178653,
		},
		[325850] = {
			["npcID"] = 166942,
		},
		[330969] = {
			["npcID"] = 177437,
		},
		[121165] = {
			["encounterName"] = "Gekkan",
			["npcID"] = 61392,
		},
		[358611] = {
			["npcID"] = 179760,
		},
		[355540] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[323804] = {
			["npcID"] = 163524,
		},
		[341208] = {
			["npcID"] = 166317,
		},
		[350422] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175727,
			["encounterID"] = 2434,
		},
		[31707] = {
			["npcID"] = 78116,
		},
		[151697] = {
			["npcID"] = 75193,
		},
		[305378] = {
			["npcID"] = 177862,
		},
		[319711] = {
			["npcID"] = 172053,
		},
		[227967] = {
			["encounterName"] = "Helya",
			["npcID"] = 114537,
			["encounterID"] = 2008,
		},
		[357591] = {
			["npcID"] = 177984,
		},
		[362710] = {
			["npcID"] = 183229,
		},
		[153234] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["encounterID"] = 1678,
			["npcID"] = 75927,
		},
		[319713] = {
			["encounterName"] = "Kryxis the Voracious",
			["encounterID"] = 2360,
			["npcID"] = 162100,
		},
		[195720] = {
			["npcID"] = 101077,
		},
		[253562] = {
			["npcID"] = 122972,
		},
		[340189] = {
			["npcID"] = 173655,
		},
		[165520] = {
			["npcID"] = 82003,
		},
		[323810] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 166085,
		},
		[240766] = {
			["npcID"] = 120777,
		},
		[75610] = {
			["npcID"] = 39679,
		},
		[225410] = {
			["npcID"] = 113128,
		},
		[308455] = {
			["encounterName"] = "Tunk",
			["npcID"] = 157300,
			["encounterID"] = 2325,
		},
		[321764] = {
			["npcID"] = 164861,
		},
		[157331] = {
			["npcID"] = 77942,
		},
		[332002] = {
			["npcID"] = 170417,
		},
		[224387] = {
			["npcID"] = 112718,
		},
		[225411] = {
			["npcID"] = 108925,
		},
		[334051] = {
			["npcID"] = 168942,
		},
		[338147] = {
			["npcID"] = 169885,
		},
		[193164] = {
			["npcID"] = 96657,
		},
		[334053] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[345315] = {
			["npcID"] = 162849,
		},
		[358624] = {
			["npcID"] = 178997,
		},
		[18399] = {
			["npcID"] = 17395,
		},
		[221830] = {
			["npcID"] = 111361,
		},
		[22686] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 1977,
			["npcID"] = 27483,
		},
		[351459] = {
			["npcID"] = 176572,
		},
		[15536] = {
			["npcID"] = 40882,
		},
		[272631] = {
			["npcID"] = 127757,
		},
		[225414] = {
			["npcID"] = 108925,
		},
		[31516] = {
			["npcID"] = 38981,
		},
		[54962] = {
			["npcID"] = 23956,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["encounterID"] = 1981,
			["npcID"] = 29306,
		},
		[323821] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 162099,
		},
		[328940] = {
			["npcID"] = 170923,
		},
		[51507] = {
			["npcID"] = 27966,
		},
		[11921] = {
			["npcID"] = 19016,
		},
		[337131] = {
			["npcID"] = 162872,
		},
		[368868] = {
			["npcID"] = 184738,
		},
		[338157] = {
			["npcID"] = 165047,
		},
		[343276] = {
			["npcID"] = 173178,
		},
		[323825] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165994,
			["encounterID"] = 2404,
		},
		[349419] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[166040] = {
			["encounterName"] = "Warlord Zaela",
			["encounterID"] = 1762,
			["npcID"] = 82428,
		},
		[178837] = {
			["npcID"] = 79510,
		},
		[193682] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[340208] = {
			["npcID"] = 173655,
		},
		[325876] = {
			["npcID"] = 165414,
		},
		[196242] = {
			["npcID"] = 99649,
		},
		[201873] = {
			["npcID"] = 102274,
		},
		[188053] = {
			["npcID"] = 94806,
		},
		[225420] = {
			["npcID"] = 108925,
		},
		[365805] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[156829] = {
			["npcID"] = 78437,
		},
		[329975] = {
			["npcID"] = 168004,
		},
		[115030] = {
			["npcID"] = 55555,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["encounterID"] = 1652,
			["npcID"] = 75786,
		},
		[128339] = {
			["npcID"] = 65414,
		},
		[355571] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[204947] = {
			["npcID"] = 102336,
		},
		[357619] = {
			["npcID"] = 177445,
		},
		[350453] = {
			["npcID"] = 179894,
		},
		[357620] = {
			["npcID"] = 177445,
		},
		[359668] = {
			["npcID"] = 180051,
		},
		[326909] = {
			["npcID"] = 163992,
		},
		[334076] = {
			["npcID"] = 168942,
		},
		[183962] = {
			["encounterName"] = "Archimonde",
			["npcID"] = 92769,
			["encounterID"] = 1799,
		},
		[71778] = {
			["npcID"] = 37122,
		},
		[121174] = {
			["encounterName"] = "Gekkan",
			["npcID"] = 61392,
		},
		[44599] = {
			["npcID"] = 24687,
		},
		[215699] = {
			["npcID"] = 94507,
		},
		[355577] = {
			["npcID"] = 178171,
		},
		[205462] = {
			["npcID"] = 175922,
		},
		[322818] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[256138] = {
			["npcID"] = 127799,
		},
		[357626] = {
			["npcID"] = 177445,
		},
		[196249] = {
			["npcID"] = 99649,
		},
		[184476] = {
			["encounterName"] = "Hellfire High Council",
			["npcID"] = 92144,
			["encounterID"] = 1798,
		},
		[172703] = {
			["npcID"] = 81432,
		},
		[153764] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["encounterID"] = 1678,
			["npcID"] = 75927,
		},
		[54965] = {
			["npcID"] = 23960,
		},
		[212630] = {
			["encounterName"] = "Cenarius",
			["npcID"] = 106482,
			["encounterID"] = 1877,
		},
		[157348] = {
			["npcID"] = 77942,
		},
		[276754] = {
			["npcID"] = 156245,
		},
		[172193] = {
			["npcID"] = 172589,
		},
		[357631] = {
			["npcID"] = 177982,
		},
		[52534] = {
			["encounterName"] = "Hadronox",
			["npcID"] = 28733,
			["encounterID"] = 1972,
		},
		[355584] = {
			["npcID"] = 178171,
		},
		[270613] = {
			["npcID"] = 179079,
		},
		[240273] = {
			["npcID"] = 120477,
		},
		[69989] = {
			["npcID"] = 37144,
		},
		[350467] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[343302] = {
			["npcID"] = 173446,
		},
		[353540] = {
			["npcID"] = 179152,
		},
		[350469] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[294165] = {
			["npcID"] = 178190,
		},
		[321807] = {
			["npcID"] = 163619,
		},
		[71782] = {
			["npcID"] = 37122,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 40792,
		},
		[236694] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118374,
		},
		[359688] = {
			["npcID"] = 181967,
		},
		[357641] = {
			["npcID"] = 177982,
		},
		[350475] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[347404] = {
			["npcID"] = 177291,
		},
		[348428] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176605,
			["encounterID"] = 2422,
		},
		[320787] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[313621] = {
			["npcID"] = 177637,
		},
		[320788] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[354572] = {
			["npcID"] = 180158,
		},
		[294171] = {
			["npcID"] = 150959,
		},
		[365834] = {
			["npcID"] = 181203,
		},
		[366858] = {
			["npcID"] = 183748,
		},
		[204448] = {
			["encounterName"] = "Skorpyron",
			["npcID"] = 102263,
			["encounterID"] = 1849,
		},
		[365835] = {
			["npcID"] = 183407,
		},
		[169129] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 84464,
			["encounterID"] = 1754,
		},
		[202913] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[209568] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 105301,
			["encounterID"] = 1872,
		},
		[84837] = {
			["npcID"] = 45264,
		},
		[368909] = {
			["npcID"] = 185861,
		},
		[350482] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[208545] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104534,
			["encounterID"] = 1866,
		},
		[339222] = {
			["npcID"] = 158259,
		},
		[198820] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[339223] = {
			["npcID"] = 158259,
		},
		[204963] = {
			["npcID"] = 102282,
		},
		[328986] = {
			["npcID"] = 169159,
		},
		[347414] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[183465] = {
			["npcID"] = 91001,
		},
		[337178] = {
			["npcID"] = 170838,
		},
		[197798] = {
			["npcID"] = 95881,
		},
		[319775] = {
			["npcID"] = 166872,
		},
		[341274] = {
			["npcID"] = 166120,
		},
		[14034] = {
			["npcID"] = 25420,
		},
		[120670] = {
			["npcID"] = 60402,
		},
		[116831] = {
			["npcID"] = 55509,
		},
		[112992] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 56717,
			["encounterID"] = 1413,
		},
		[366869] = {
			["npcID"] = 184651,
		},
		[194216] = {
			["encounterName"] = "Harbaron",
			["encounterID"] = 1823,
			["npcID"] = 96754,
		},
		[113760] = {
			["npcID"] = 56472,
		},
		[195240] = {
			["npcID"] = 96124,
		},
		[32735] = {
			["npcID"] = 35111,
		},
		[352538] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[353562] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 179177,
		},
		[354586] = {
			["npcID"] = 185026,
		},
		[71787] = {
			["npcID"] = 37125,
		},
		[357659] = {
			["npcID"] = 178878,
		},
		[214181] = {
			["npcID"] = 112251,
		},
		[153268] = {
			["npcID"] = 77700,
		},
		[320805] = {
			["npcID"] = 156561,
		},
		[355613] = {
			["npcID"] = 178958,
		},
		[106851] = {
			["npcID"] = 59519,
		},
		[331044] = {
			["npcID"] = 170067,
		},
		[120160] = {
			["encounterName"] = "Trial of the King",
			["npcID"] = 61445,
			["encounterID"] = 1442,
		},
		[52026] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 28586,
			["encounterID"] = 1987,
		},
		[331045] = {
			["npcID"] = 170067,
		},
		[204901] = {
			["npcID"] = 102336,
		},
		[335141] = {
			["npcID"] = 165824,
		},
		[360472] = {
			["npcID"] = 178963,
		},
		[364666] = {
			["npcID"] = 178563,
		},
		[364808] = {
			["npcID"] = 181145,
		},
		[326952] = {
			["npcID"] = 168058,
		},
		[322491] = {
			["encounterName"] = "Stradama Margrave",
			["npcID"] = 164267,
			["encounterID"] = 2386,
		},
		[366685] = {
			["npcID"] = 185271,
		},
		[321834] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[335143] = {
			["npcID"] = 165222,
		},
		[363533] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[11443] = {
			["npcID"] = 19434,
		},
		[138427] = {
			["npcID"] = 69916,
		},
		[131575] = {
			["npcID"] = 66947,
		},
		[364833] = {
			["npcID"] = 181111,
		},
		[308527] = {
			["encounterName"] = "Ravnyr",
			["npcID"] = 156814,
			["encounterID"] = 2326,
		},
		[197805] = {
			["encounterName"] = "Helya",
			["encounterID"] = 1824,
			["npcID"] = 96759,
		},
		[365850] = {
			["npcID"] = 181652,
		},
		[360717] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[353573] = {
			["npcID"] = 179136,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["encounterID"] = 1980,
			["npcID"] = 29305,
		},
		[79896] = {
			["npcID"] = 184080,
		},
		[343086] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[106853] = {
			["encounterName"] = "Master Snowdrift",
			["encounterID"] = 1304,
			["npcID"] = 56541,
		},
		[7978] = {
			["npcID"] = 65882,
		},
		[197180] = {
			["npcID"] = 96441,
		},
		[361513] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[357670] = {
			["npcID"] = 178859,
		},
		[228519] = {
			["encounterName"] = "Helya",
			["npcID"] = 114709,
			["encounterID"] = 2008,
		},
		[115199] = {
			["npcID"] = 17820,
		},
		[339013] = {
			["npcID"] = 183512,
		},
		[131067] = {
			["npcID"] = 65842,
		},
		[358695] = {
			["npcID"] = 180426,
		},
		[356404] = {
			["npcID"] = 180091,
		},
		[48700] = {
			["npcID"] = 26554,
		},
		[167092] = {
			["npcID"] = 79510,
		},
		[167095] = {
			["npcID"] = 83390,
		},
		[365458] = {
			["npcID"] = 184651,
		},
		[178154] = {
			["encounterName"] = "Oshir",
			["npcID"] = 89011,
			["encounterID"] = 1750,
		},
		[205486] = {
			["encounterName"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["encounterID"] = 1863,
		},
		[342317] = {
			["npcID"] = 177476,
		},
		[359704] = {
			["npcID"] = 181626,
		},
		[350101] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176705,
			["encounterID"] = 2441,
		},
		[324914] = {
			["npcID"] = 166299,
		},
		[367656] = {
			["npcID"] = 185037,
		},
		[270248] = {
			["npcID"] = 154129,
		},
		[217260] = {
			["npcID"] = 88087,
		},
		[138739] = {
			["npcID"] = 69899,
		},
		[358699] = {
			["npcID"] = 180417,
		},
		[318773] = {
			["npcID"] = 167834,
		},
		[198833] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[199345] = {
			["encounterName"] = "Dresaron",
			["npcID"] = 99200,
			["encounterID"] = 1838,
		},
		[358700] = {
			["npcID"] = 180417,
		},
		[364778] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[221356] = {
			["npcID"] = 111164,
		},
		[320822] = {
			["npcID"] = 165222,
		},
		[330970] = {
			["npcID"] = 177437,
		},
		[82797] = {
			["npcID"] = 1547,
		},
		[332084] = {
			["npcID"] = 167965,
		},
		[320823] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[330037] = {
			["npcID"] = 168361,
		},
		[360636] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[196787] = {
			["npcID"] = 99956,
		},
		[112998] = {
			["npcID"] = 58803,
		},
		[193716] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[194228] = {
			["npcID"] = 95195,
		},
		[44606] = {
			["npcID"] = 24685,
		},
		[320825] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164568,
			["encounterID"] = 2394,
		},
		[70409] = {
			["npcID"] = 37664,
		},
		[363607] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181244,
		},
		[343104] = {
			["npcID"] = 156203,
		},
		[365871] = {
			["npcID"] = 184604,
		},
		[193717] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[198715] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 100876,
			["encounterID"] = 2399,
		},
		[365872] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[345397] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[362801] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 183501,
			["encounterID"] = 2553,
		},
		[155327] = {
			["encounterName"] = "Soulbinder Nyami",
			["encounterID"] = 1685,
			["npcID"] = 76177,
		},
		[340279] = {
			["npcID"] = 173714,
		},
		[353588] = {
			["npcID"] = 166137,
		},
		[350517] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[330711] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[327995] = {
			["npcID"] = 168574,
		},
		[357684] = {
			["npcID"] = 178855,
		},
		[366759] = {
			["npcID"] = 183498,
		},
		[355637] = {
			["npcID"] = 179840,
		},
		[147650] = {
			["npcID"] = 172071,
		},
		[365870] = {
			["npcID"] = 183404,
		},
		[169149] = {
			["npcID"] = 85856,
		},
		[194231] = {
			["encounterName"] = "Harbaron",
			["encounterID"] = 1823,
			["npcID"] = 96754,
		},
		[157165] = {
			["npcID"] = 77132,
		},
		[215730] = {
			["npcID"] = 96038,
		},
		[163007] = {
			["npcID"] = 80649,
		},
		[331069] = {
			["npcID"] = 179615,
		},
		[212997] = {
			["encounterName"] = "Tichondrius",
			["npcID"] = 103685,
			["encounterID"] = 1862,
		},
		[323682] = {
			["npcID"] = 163501,
		},
		[360334] = {
			["npcID"] = 183983,
		},
		[355640] = {
			["npcID"] = 179840,
		},
		[365646] = {
			["npcID"] = 184651,
		},
		[349498] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176556,
			["encounterID"] = 2441,
		},
		[216243] = {
			["npcID"] = 96286,
		},
		[355641] = {
			["npcID"] = 179841,
		},
		[368951] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[201399] = {
			["npcID"] = 100527,
		},
		[197816] = {
			["npcID"] = 107593,
		},
		[355642] = {
			["npcID"] = 179841,
		},
		[356666] = {
			["npcID"] = 179892,
		},
		[14515] = {
			["npcID"] = 37122,
		},
		[331718] = {
			["npcID"] = 171772,
		},
		[209471] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["npcID"] = 105721,
			["encounterID"] = 1873,
		},
		[328002] = {
			["npcID"] = 168574,
		},
		[221875] = {
			["encounterName"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["encounterID"] = 1863,
		},
		[194019] = {
			["npcID"] = 95013,
		},
		[228889] = {
			["npcID"] = 114932,
		},
		[166081] = {
			["npcID"] = 81063,
		},
		[345201] = {
			["npcID"] = 170037,
		},
		[347153] = {
			["npcID"] = 171849,
		},
		[361676] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[340289] = {
			["npcID"] = 173714,
		},
		[320838] = {
			["npcID"] = 160356,
		},
		[297292] = {
			["npcID"] = 153165,
		},
		[355646] = {
			["npcID"] = 178191,
		},
		[113999] = {
			["encounterName"] = "Rattlegore",
			["npcID"] = 59153,
			["encounterID"] = 1428,
		},
		[361789] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 183149,
			["encounterID"] = 2544,
		},
		[68872] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[270241] = {
			["npcID"] = 154129,
		},
		[351117] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177889,
			["encounterID"] = 2435,
		},
		[44224] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24664,
		},
		[164841] = {
			["encounterName"] = "Teron'gor",
			["encounterID"] = 1714,
			["npcID"] = 77734,
		},
		[218806] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109038,
			["encounterID"] = 1886,
		},
		[360767] = {
			["npcID"] = 181879,
		},
		[68981] = {
			["encounterName"] = "The Lich King",
			["npcID"] = 36597,
			["encounterID"] = 1106,
		},
		[361644] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[365851] = {
			["npcID"] = 183404,
		},
		[196796] = {
			["npcID"] = 99956,
		},
		[365887] = {
			["npcID"] = 184878,
		},
		[308172] = {
			["npcID"] = 158177,
		},
		[173762] = {
			["npcID"] = 155216,
		},
		[111723] = {
			["encounterName"] = "Raigonn",
			["encounterID"] = 1419,
			["npcID"] = 56877,
		},
		[71029] = {
			["npcID"] = 36724,
		},
		[191678] = {
			["npcID"] = 96480,
		},
		[119575] = {
			["npcID"] = 58216,
		},
		[365632] = {
			["npcID"] = 184742,
		},
		[368544] = {
			["npcID"] = 184597,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[322892] = {
			["npcID"] = 156560,
		},
		[166085] = {
			["npcID"] = 81129,
		},
		[68982] = {
			["encounterName"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["npcID"] = 36502,
		},
		[180395] = {
			["npcID"] = 107535,
		},
		[189469] = {
			["npcID"] = 100364,
		},
		[358327] = {
			["npcID"] = 179760,
		},
		[35511] = {
			["npcID"] = 23177,
		},
		[353328] = {
			["npcID"] = 178964,
		},
		[339274] = {
			["npcID"] = 173298,
		},
		[151094] = {
			["npcID"] = 75090,
		},
		[337227] = {
			["npcID"] = 169102,
		},
		[365661] = {
			["npcID"] = 184651,
		},
		[361568] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181546,
			["encounterID"] = 2544,
		},
		[196799] = {
			["npcID"] = 99956,
		},
		[15530] = {
			["npcID"] = 19258,
		},
		[44196] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24674,
		},
		[365676] = {
			["npcID"] = 184734,
		},
		[340300] = {
			["npcID"] = 173720,
		},
		[187074] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 92911,
			["encounterID"] = 1778,
		},
		[32674] = {
			["npcID"] = 18321,
		},
		[224953] = {
			["npcID"] = 163662,
		},
		[328016] = {
			["npcID"] = 168578,
		},
		[365895] = {
			["npcID"] = 183412,
		},
		[241108] = {
			["npcID"] = 117123,
		},
		[150543] = {
			["encounterName"] = "Domina",
			["encounterID"] = 1668,
			["npcID"] = 75034,
		},
		[3110] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 58959,
			["encounterID"] = 2435,
		},
		[366866] = {
			["npcID"] = 184651,
		},
		[360730] = {
			["npcID"] = 181114,
		},
		[360778] = {
			["npcID"] = 181111,
		},
		[192706] = {
			["npcID"] = 100250,
		},
		[73079] = {
			["npcID"] = 37023,
		},
		[350541] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[194242] = {
			["npcID"] = 94983,
		},
		[352589] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 176583,
			["encounterID"] = 2436,
		},
		[365898] = {
			["npcID"] = 185346,
		},
		[334162] = {
			["npcID"] = 166908,
		},
		[196290] = {
			["npcID"] = 91792,
		},
		[340305] = {
			["npcID"] = 173720,
		},
		[345077] = {
			["npcID"] = 170044,
		},
		[356602] = {
			["npcID"] = 180164,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["npcID"] = 75452,
			["encounterID"] = 1679,
		},
		[319831] = {
			["npcID"] = 172390,
		},
		[337235] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[275568] = {
			["npcID"] = 168442,
		},
		[322903] = {
			["encounterName"] = "General Kaal",
			["encounterID"] = 2363,
			["npcID"] = 162099,
		},
		[116845] = {
			["npcID"] = 55622,
		},
		[365901] = {
			["npcID"] = 183413,
		},
		[329989] = {
			["npcID"] = 158978,
		},
		[365825] = {
			["npcID"] = 181857,
		},
		[344403] = {
			["npcID"] = 175012,
		},
		[365708] = {
			["npcID"] = 183432,
		},
		[151159] = {
			["encounterName"] = "Subjugator Kor'ul",
			["encounterID"] = 1669,
			["npcID"] = 74565,
		},
		[201411] = {
			["npcID"] = 100527,
		},
		[344404] = {
			["npcID"] = 175012,
		},
		[365903] = {
			["npcID"] = 185346,
		},
		[107120] = {
			["encounterName"] = "Commander Ri'mok",
			["encounterID"] = 1406,
			["npcID"] = 56636,
		},
		[273766] = {
			["npcID"] = 177539,
		},
		[356690] = {
			["npcID"] = 177135,
		},
		[304479] = {
			["npcID"] = 156015,
		},
		[228872] = {
			["encounterName"] = "Helya",
			["npcID"] = 114537,
			["encounterID"] = 2008,
		},
		[273767] = {
			["npcID"] = 157003,
		},
		[362413] = {
			["npcID"] = 181344,
		},
		[308575] = {
			["npcID"] = 158161,
		},
		[129643] = {
			["npcID"] = 65881,
		},
		[274792] = {
			["npcID"] = 140149,
		},
		[315742] = {
			["npcID"] = 158891,
		},
		[353621] = {
			["npcID"] = 179133,
		},
		[150504] = {
			["npcID"] = 74353,
		},
		[324490] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[213620] = {
			["npcID"] = 108033,
		},
		[35013] = {
			["npcID"] = 18327,
		},
		[317791] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 163366,
			["encounterID"] = 2435,
		},
		[59839] = {
			["encounterName"] = "Slad'ran",
			["encounterID"] = 1978,
			["npcID"] = 29304,
		},
		[111728] = {
			["encounterName"] = "Raigonn",
			["encounterID"] = 1419,
			["npcID"] = 56877,
		},
		[365908] = {
			["npcID"] = 184880,
		},
		[317792] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 163366,
			["encounterID"] = 2435,
		},
		[71546] = {
			["npcID"] = 37122,
		},
		[44202] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24674,
		},
		[312674] = {
			["npcID"] = 161388,
		},
		[368545] = {
			["npcID"] = 184599,
		},
		[365596] = {
			["npcID"] = 180917,
		},
		[361815] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[228032] = {
			["encounterName"] = "Helya",
			["npcID"] = 114537,
			["encounterID"] = 2008,
		},
		[350554] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[138966] = {
			["npcID"] = 70060,
		},
		[176333] = {
			["npcID"] = 78674,
		},
		[328772] = {
			["npcID"] = 159916,
		},
		[21068] = {
			["npcID"] = 18094,
		},
		[361343] = {
			["npcID"] = 178963,
		},
		[319843] = {
			["npcID"] = 167033,
		},
		[355675] = {
			["npcID"] = 176705,
		},
		[321891] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 165251,
			["encounterID"] = 2392,
		},
		[359770] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[297018] = {
			["npcID"] = 185012,
		},
		[139991] = {
			["encounterName"] = "Megaera",
			["npcID"] = 70248,
			["encounterID"] = 1578,
		},
		[358747] = {
			["npcID"] = 178824,
		},
		[193100] = {
			["npcID"] = 94610,
		},
		[365847] = {
			["npcID"] = 183229,
		},
		[130413] = {
			["npcID"] = 66000,
		},
		[358748] = {
			["npcID"] = 178824,
		},
		[130925] = {
			["npcID"] = 66052,
		},
		[364891] = {
			["npcID"] = 183737,
		},
		[323720] = {
			["npcID"] = 181203,
		},
		[321894] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[331108] = {
			["npcID"] = 160048,
		},
		[239808] = {
			["npcID"] = 120191,
		},
		[200154] = {
			["npcID"] = 102253,
		},
		[305515] = {
			["encounterName"] = "Ravnyr",
			["npcID"] = 156501,
			["encounterID"] = 2326,
		},
		[336228] = {
			["npcID"] = 170694,
		},
		[348513] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[359734] = {
			["npcID"] = 185755,
		},
		[359587] = {
			["npcID"] = 180052,
		},
		[347490] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[316779] = {
			["npcID"] = 178043,
		},
		[130414] = {
			["npcID"] = 82001,
		},
		[224453] = {
			["npcID"] = 112738,
		},
		[367966] = {
			["npcID"] = 184901,
		},
		[53314] = {
			["npcID"] = 27962,
		},
		[357729] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178072,
			["encounterID"] = 2435,
		},
		[362849] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 183501,
			["encounterID"] = 2553,
		},
		[181968] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90409,
			["encounterID"] = 1778,
		},
		[239810] = {
			["npcID"] = 120191,
		},
		[353635] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[175314] = {
			["npcID"] = 81994,
		},
		[320390] = {
			["npcID"] = 168697,
		},
		[365921] = {
			["npcID"] = 183416,
		},
		[180945] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 91103,
			["encounterID"] = 1778,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[351589] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177893,
		},
		[215241] = {
			["npcID"] = 115595,
		},
		[340294] = {
			["npcID"] = 157294,
		},
		[114291] = {
			["npcID"] = 59464,
		},
		[157387] = {
			["npcID"] = 72232,
		},
		[194657] = {
			["npcID"] = 99188,
		},
		[11829] = {
			["npcID"] = 16905,
		},
		[193211] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["encounterID"] = 1822,
			["npcID"] = 96756,
		},
		[120946] = {
			["npcID"] = 61929,
		},
		[119922] = {
			["encounterName"] = "Trial of the King",
			["npcID"] = 61442,
			["encounterID"] = 1442,
		},
		[185042] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90018,
			["encounterID"] = 1778,
		},
		[201176] = {
			["npcID"] = 98792,
		},
		[75645] = {
			["npcID"] = 39679,
		},
		[250050] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[357735] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 179847,
			["encounterID"] = 2430,
		},
		[196208] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99704,
		},
		[52624] = {
			["npcID"] = 28584,
		},
		[194616] = {
			["npcID"] = 94984,
		},
		[224457] = {
			["npcID"] = 112738,
		},
		[358760] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 176521,
		},
		[114548] = {
			["encounterName"] = "Yan-Zhu the Uncasked",
			["encounterID"] = 1414,
			["npcID"] = 59479,
		},
		[203371] = {
			["npcID"] = 102886,
		},
		[44577] = {
			["npcID"] = 24815,
		},
		[73001] = {
			["encounterName"] = "Blood Council",
			["encounterID"] = 1095,
			["npcID"] = 37972,
		},
		[332671] = {
			["npcID"] = 170480,
		},
		[363525] = {
			["npcID"] = 183652,
		},
		[154331] = {
			["npcID"] = 133104,
		},
		[358762] = {
			["npcID"] = 180389,
		},
		[322931] = {
			["npcID"] = 158752,
		},
		[336868] = {
			["npcID"] = 184606,
		},
		[345454] = {
			["npcID"] = 157833,
		},
		[236494] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 116939,
		},
		[321565] = {
			["npcID"] = 165124,
		},
		[195767] = {
			["npcID"] = 95270,
		},
		[130417] = {
			["npcID"] = 66285,
		},
		[224459] = {
			["npcID"] = 112738,
		},
		[155356] = {
			["npcID"] = 76935,
		},
		[200913] = {
			["npcID"] = 98792,
		},
		[92266] = {
			["npcID"] = 6329,
		},
		[44189] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["npcID"] = 24664,
		},
		[32325] = {
			["encounterName"] = "Pandemonius",
			["encounterID"] = 1900,
			["npcID"] = 18341,
		},
		[71296] = {
			["npcID"] = 38125,
		},
		[345457] = {
			["npcID"] = 157833,
		},
		[224460] = {
			["npcID"] = 112733,
		},
		[351096] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[10346] = {
			["npcID"] = 6225,
		},
		[195031] = {
			["npcID"] = 97200,
		},
		[61326] = {
			["npcID"] = 26735,
		},
		[322936] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[211152] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[203323] = {
			["npcID"] = 103656,
		},
		[321406] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 169498,
		},
		[320657] = {
			["npcID"] = 170228,
		},
		[336246] = {
			["npcID"] = 166292,
		},
		[209617] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 105301,
			["encounterID"] = 1872,
		},
		[358769] = {
			["npcID"] = 179257,
		},
		[220139] = {
			["npcID"] = 100445,
		},
		[192111] = {
			["npcID"] = 95194,
		},
		[22887] = {
			["npcID"] = 17729,
		},
		[358770] = {
			["npcID"] = 176880,
		},
		[357243] = {
			["npcID"] = 180433,
		},
		[46150] = {
			["npcID"] = 30418,
		},
		[324987] = {
			["npcID"] = 166301,
		},
		[365477] = {
			["npcID"] = 181857,
		},
		[322940] = {
			["npcID"] = 172073,
		},
		[278919] = {
			["npcID"] = 170737,
		},
		[329083] = {
			["npcID"] = 166042,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["encounterID"] = 1948,
			["npcID"] = 17882,
		},
		[197117] = {
			["encounterName"] = "Helya",
			["encounterID"] = 1824,
			["npcID"] = 100188,
		},
		[242379] = {
			["npcID"] = 121459,
		},
		[358773] = {
			["npcID"] = 179891,
		},
		[69387] = {
			["npcID"] = 36807,
		},
		[332156] = {
			["npcID"] = 167963,
		},
		[325866] = {
			["npcID"] = 165979,
		},
		[60227] = {
			["npcID"] = 23956,
		},
		[331133] = {
			["npcID"] = 160048,
		},
		[336252] = {
			["npcID"] = 166292,
		},
		[209620] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 105299,
			["encounterID"] = 1872,
		},
		[194209] = {
			["npcID"] = 94507,
		},
		[301952] = {
			["npcID"] = 155225,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56732,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["encounterID"] = 1654,
			["npcID"] = 74790,
		},
		[224465] = {
			["npcID"] = 112733,
		},
		[339325] = {
			["npcID"] = 173298,
		},
		[118903] = {
			["npcID"] = 61216,
		},
		[214003] = {
			["npcID"] = 102094,
		},
		[199287] = {
			["npcID"] = 101061,
		},
		[200291] = {
			["npcID"] = 98691,
		},
		[354490] = {
			["npcID"] = 185026,
		},
		[360304] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[186449] = {
			["npcID"] = 90284,
		},
		[351119] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177716,
			["encounterID"] = 2442,
		},
		[357232] = {
			["npcID"] = 179108,
		},
		[113017] = {
			["encounterName"] = "Lorewalker Stonestep",
			["encounterID"] = 1417,
			["npcID"] = 58826,
		},
		[279567] = {
			["npcID"] = 167154,
		},
		[335233] = {
			["npcID"] = 177245,
		},
		[194674] = {
			["npcID"] = 97043,
		},
		[359629] = {
			["npcID"] = 178913,
		},
		[241290] = {
			["npcID"] = 121011,
		},
		[196563] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["encounterID"] = 1810,
		},
		[201902] = {
			["npcID"] = 100539,
		},
		[192173] = {
			["npcID"] = 95153,
		},
		[59716] = {
			["npcID"] = 76242,
		},
		[316527] = {
			["npcID"] = 158992,
		},
		[328069] = {
			["npcID"] = 172072,
		},
		[359334] = {
			["npcID"] = 181028,
		},
		[197137] = {
			["npcID"] = 100216,
		},
		[194266] = {
			["encounterName"] = "Harbaron",
			["encounterID"] = 1823,
			["npcID"] = 98693,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["npcID"] = 40633,
		},
		[357229] = {
			["npcID"] = 180348,
		},
		[330118] = {
			["npcID"] = 159755,
		},
		[277907] = {
			["npcID"] = 175671,
		},
		[364442] = {
			["npcID"] = 180089,
		},
		[167385] = {
			["npcID"] = 154586,
		},
		[358784] = {
			["npcID"] = 179891,
		},
		[197141] = {
			["npcID"] = 100216,
		},
		[53318] = {
			["npcID"] = 28922,
		},
		[225790] = {
			["npcID"] = 106482,
		},
		[14443] = {
			["npcID"] = 101106,
		},
		[239741] = {
			["npcID"] = 120194,
		},
		[125997] = {
			["npcID"] = 63764,
		},
		[195293] = {
			["npcID"] = 99307,
		},
		[228565] = {
			["encounterName"] = "Helya",
			["npcID"] = 114537,
			["encounterID"] = 2008,
		},
		[46024] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[332169] = {
			["npcID"] = 170400,
		},
		[172771] = {
			["npcID"] = 86809,
		},
		[360835] = {
			["npcID"] = 180722,
		},
		[351621] = {
			["npcID"] = 176573,
		},
		[278935] = {
			["npcID"] = 176179,
		},
		[199389] = {
			["encounterName"] = "Dresaron",
			["npcID"] = 99200,
			["encounterID"] = 1838,
		},
		[84282] = {
			["npcID"] = 1523,
		},
		[197144] = {
			["npcID"] = 100216,
		},
		[11820] = {
			["npcID"] = 6234,
		},
		[106877] = {
			["encounterName"] = "Sha of Violence",
			["encounterID"] = 1305,
			["npcID"] = 56719,
		},
		[357226] = {
			["npcID"] = 180429,
		},
		[214988] = {
			["npcID"] = 100364,
		},
		[185039] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90018,
			["encounterID"] = 1778,
		},
		[318865] = {
			["npcID"] = 162849,
		},
		[321935] = {
			["npcID"] = 164707,
		},
		[104318] = {
			["npcID"] = 55659,
		},
		[365958] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[152298] = {
			["npcID"] = 75820,
		},
		[346506] = {
			["npcID"] = 171581,
		},
		[202462] = {
			["encounterName"] = "Sael'orn",
			["npcID"] = 102387,
			["encounterID"] = 1851,
		},
		[319889] = {
			["npcID"] = 157036,
		},
		[228056] = {
			["encounterName"] = "Helya",
			["npcID"] = 114537,
			["encounterID"] = 2008,
		},
		[326032] = {
			["npcID"] = 160455,
		},
		[199663] = {
			["npcID"] = 98370,
		},
		[192522] = {
			["npcID"] = 96681,
		},
		[329104] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[197769] = {
			["npcID"] = 95881,
		},
		[331152] = {
			["npcID"] = 167164,
		},
		[235597] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 116939,
		},
		[12470] = {
			["npcID"] = 30416,
		},
		[71303] = {
			["npcID"] = 38125,
		},
		[228390] = {
			["encounterName"] = "Helya",
			["npcID"] = 114709,
			["encounterID"] = 2008,
		},
		[354297] = {
			["npcID"] = 177817,
		},
		[365961] = {
			["npcID"] = 183416,
		},
		[189532] = {
			["npcID"] = 95613,
		},
		[84868] = {
			["npcID"] = 1778,
		},
		[50760] = {
			["encounterName"] = "Maiden of Grief",
			["encounterID"] = 1996,
			["npcID"] = 27975,
		},
		[54983] = {
			["npcID"] = 24082,
		},
		[138480] = {
			["encounterName"] = "Dark Animus",
			["npcID"] = 69700,
			["encounterID"] = 1576,
		},
		[322965] = {
			["npcID"] = 161971,
		},
		[344464] = {
			["npcID"] = 166398,
		},
		[242391] = {
			["npcID"] = 156212,
		},
		[236544] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 119072,
		},
		[322968] = {
			["npcID"] = 165111,
		},
		[360845] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181551,
			["encounterID"] = 2544,
		},
		[124283] = {
			["encounterName"] = "General Pa'valak",
			["npcID"] = 61485,
			["encounterID"] = 1447,
		},
		[346513] = {
			["npcID"] = 157833,
		},
		[346985] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[332181] = {
			["npcID"] = 170418,
		},
		[329110] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[121468] = {
			["npcID"] = 61177,
		},
		[56775] = {
			["npcID"] = 26722,
		},
		[336277] = {
			["npcID"] = 172265,
		},
		[241635] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 118289,
		},
		[10348] = {
			["npcID"] = 6222,
		},
		[323438] = {
			["npcID"] = 166073,
		},
		[319898] = {
			["npcID"] = 168022,
		},
		[353682] = {
			["npcID"] = 176880,
		},
		[330604] = {
			["npcID"] = 168724,
		},
		[271628] = {
			["npcID"] = 176434,
		},
		[181912] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 90316,
			["encounterID"] = 1788,
		},
		[305567] = {
			["encounterName"] = "Ravnyr",
			["npcID"] = 156501,
			["encounterID"] = 2326,
		},
		[195813] = {
			["npcID"] = 100054,
		},
		[236712] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118518,
		},
		[184552] = {
			["npcID"] = 93162,
		},
		[319417] = {
			["npcID"] = 157036,
		},
		[349030] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[355732] = {
			["npcID"] = 179446,
		},
		[50761] = {
			["encounterName"] = "Maiden of Grief",
			["encounterID"] = 1996,
			["npcID"] = 27975,
		},
		[345495] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175519,
			["encounterID"] = 2435,
		},
		[362899] = {
			["npcID"] = 181559,
		},
		[202408] = {
			["npcID"] = 102375,
		},
		[221408] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 111070,
			["encounterID"] = 1866,
		},
		[220248] = {
			["npcID"] = 169270,
		},
		[350615] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175727,
			["encounterID"] = 2434,
		},
		[359829] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[352663] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[239207] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 116939,
		},
		[326046] = {
			["npcID"] = 167111,
		},
		[204517] = {
			["npcID"] = 102335,
		},
		[356759] = {
			["npcID"] = 177129,
		},
		[170480] = {
			["npcID"] = 79589,
		},
		[152818] = {
			["npcID"] = 75713,
		},
		[335720] = {
			["npcID"] = 178191,
		},
		[178412] = {
			["npcID"] = 83578,
		},
		[319906] = {
			["npcID"] = 167022,
		},
		[210150] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[355737] = {
			["npcID"] = 179446,
		},
		[360856] = {
			["npcID"] = 183931,
		},
		[164592] = {
			["npcID"] = 75198,
		},
		[201959] = {
			["npcID"] = 113536,
		},
		[347548] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[240066] = {
			["encounterName"] = "Harjatan",
			["encounterID"] = 2036,
			["npcID"] = 116569,
		},
		[357786] = {
			["npcID"] = 177718,
		},
		[360859] = {
			["npcID"] = 181047,
		},
		[241374] = {
			["npcID"] = 120449,
		},
		[80009] = {
			["npcID"] = 82001,
		},
		[50378] = {
			["npcID"] = 26626,
		},
		[201960] = {
			["encounterName"] = "Shivermaw",
			["npcID"] = 101951,
			["encounterID"] = 1845,
		},
		[322980] = {
			["npcID"] = 164040,
		},
		[17195] = {
			["npcID"] = 30416,
		},
		[154356] = {
			["npcID"] = 76595,
		},
		[346980] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[351646] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[200256] = {
			["npcID"] = 101549,
		},
		[357217] = {
			["npcID"] = 180415,
		},
		[368027] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[202473] = {
			["encounterName"] = "Sael'orn",
			["npcID"] = 102387,
			["encounterID"] = 1851,
		},
		[332196] = {
			["npcID"] = 167963,
		},
		[296365] = {
			["npcID"] = 152612,
		},
		[337920] = {
			["npcID"] = 162874,
		},
		[240577] = {
			["npcID"] = 120473,
		},
		[332646] = {
			["npcID"] = 162872,
		},
		[325696] = {
			["npcID"] = 172080,
		},
		[198379] = {
			["encounterName"] = "Archdruid Glaidalis",
			["npcID"] = 96512,
			["encounterID"] = 1836,
		},
		[351649] = {
			["npcID"] = 176576,
		},
		[15254] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18431,
		},
		[241234] = {
			["npcID"] = 122851,
		},
		[199915] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99651,
		},
		[118657] = {
			["npcID"] = 56462,
		},
		[53322] = {
			["npcID"] = 29118,
		},
		[360863] = {
			["npcID"] = 183249,
		},
		[107140] = {
			["encounterName"] = "Gu Cloudstrike",
			["encounterID"] = 1303,
			["npcID"] = 56754,
		},
		[201839] = {
			["npcID"] = 99366,
		},
		[212423] = {
			["npcID"] = 99541,
		},
		[358238] = {
			["npcID"] = 178851,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["encounterID"] = 1654,
			["npcID"] = 74790,
		},
		[225845] = {
			["npcID"] = 112973,
		},
		[125056] = {
			["npcID"] = 165189,
		},
		[50379] = {
			["npcID"] = 26626,
		},
		[210535] = {
			["npcID"] = 97822,
		},
		[310703] = {
			["npcID"] = 159459,
		},
		[355166] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177289,
		},
		[191026] = {
			["npcID"] = 99451,
		},
		[359538] = {
			["npcID"] = 184058,
		},
		[360284] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[204892] = {
			["npcID"] = 103271,
		},
		[333227] = {
			["npcID"] = 169905,
		},
		[98951] = {
			["encounterName"] = "Ragnaros",
			["npcID"] = 52409,
			["encounterID"] = 1203,
		},
		[337761] = {
			["npcID"] = 163213,
		},
		[235968] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118728,
		},
		[259597] = {
			["npcID"] = 158110,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["encounterID"] = 1983,
			["npcID"] = 29307,
		},
		[218774] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109038,
			["encounterID"] = 1886,
		},
		[356775] = {
			["npcID"] = 177791,
		},
		[205549] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[321968] = {
			["npcID"] = 164929,
		},
		[368037] = {
			["npcID"] = 185677,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["encounterID"] = 1654,
			["npcID"] = 74790,
		},
		[352141] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176974,
			["encounterID"] = 2422,
		},
		[183539] = {
			["npcID"] = 91002,
		},
		[355753] = {
			["npcID"] = 179894,
		},
		[330593] = {
			["npcID"] = 168724,
		},
		[333231] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164461,
			["encounterID"] = 2391,
		},
		[98952] = {
			["encounterName"] = "Ragnaros",
			["encounterID"] = 1203,
			["npcID"] = 52409,
		},
		[341854] = {
			["npcID"] = 173832,
		},
		[345321] = {
			["npcID"] = 162849,
		},
		[12471] = {
			["npcID"] = 17771,
		},
		[12466] = {
			["npcID"] = 8913,
		},
		[343470] = {
			["npcID"] = 165919,
		},
		[351067] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[345078] = {
			["npcID"] = 170026,
		},
		[10277] = {
			["npcID"] = 18970,
		},
		[358486] = {
			["npcID"] = 178882,
		},
		[360875] = {
			["npcID"] = 180722,
		},
		[359852] = {
			["npcID"] = 181981,
		},
		[338353] = {
			["npcID"] = 173016,
		},
		[368042] = {
			["npcID"] = 178508,
		},
		[360876] = {
			["npcID"] = 182357,
		},
		[316855] = {
			["npcID"] = 165267,
		},
		[98953] = {
			["encounterName"] = "Ragnaros",
			["encounterID"] = 1203,
			["npcID"] = 52409,
		},
		[119684] = {
			["encounterName"] = "Xin the Weaponmaster",
			["npcID"] = 61398,
			["encounterID"] = 1441,
		},
		[174328] = {
			["npcID"] = 76177,
		},
		[341852] = {
			["npcID"] = 173832,
		},
		[317880] = {
			["npcID"] = 158992,
		},
		[322999] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[197818] = {
			["npcID"] = 107593,
		},
		[152830] = {
			["npcID"] = 74980,
		},
		[185590] = {
			["encounterName"] = "Archimonde",
			["npcID"] = 91331,
			["encounterID"] = 1799,
		},
		[235242] = {
			["npcID"] = 115638,
		},
		[122244] = {
			["npcID"] = 62632,
		},
		[345523] = {
			["npcID"] = 156203,
		},
		[30633] = {
			["npcID"] = 26792,
		},
		[120416] = {
			["npcID"] = 61302,
		},
		[328542] = {
			["npcID"] = 168390,
		},
		[316859] = {
			["npcID"] = 170042,
		},
		[236518] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118518,
		},
		[368047] = {
			["npcID"] = 178508,
		},
		[329904] = {
			["npcID"] = 157118,
		},
		[319685] = {
			["encounterName"] = "Kryxis the Voracious",
			["encounterID"] = 2360,
			["npcID"] = 162100,
		},
		[236547] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118523,
		},
		[206788] = {
			["encounterName"] = "Trilliax",
			["npcID"] = 104288,
			["encounterID"] = 1867,
		},
		[202181] = {
			["npcID"] = 91006,
		},
		[333241] = {
			["npcID"] = 170850,
		},
		[358835] = {
			["npcID"] = 177444,
		},
		[364978] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 181047,
			["encounterID"] = 2529,
		},
		[81039] = {
			["encounterName"] = "Viscous Fallout",
			["npcID"] = 6218,
			["encounterID"] = 378,
		},
		[69882] = {
			["npcID"] = 37027,
		},
		[358836] = {
			["npcID"] = 180664,
		},
		[327016] = {
			["npcID"] = 159156,
		},
		[364979] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[201226] = {
			["npcID"] = 100531,
		},
		[338362] = {
			["npcID"] = 165290,
		},
		[313790] = {
			["npcID"] = 160974,
		},
		[111752] = {
			["npcID"] = 58823,
		},
		[213582] = {
			["npcID"] = 101900,
		},
		[159356] = {
			["npcID"] = 78791,
		},
		[337876] = {
			["npcID"] = 162874,
		},
		[228854] = {
			["encounterName"] = "Helya",
			["npcID"] = 116335,
			["encounterID"] = 2008,
		},
		[355225] = {
			["npcID"] = 178142,
		},
		[362934] = {
			["npcID"] = 182326,
		},
		[214771] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99651,
		},
		[195320] = {
			["npcID"] = 95866,
		},
		[353721] = {
			["npcID"] = 179135,
		},
		[362935] = {
			["npcID"] = 181493,
		},
		[118663] = {
			["npcID"] = 56462,
		},
		[322978] = {
			["npcID"] = 159174,
		},
		[357356] = {
			["npcID"] = 178369,
		},
		[339391] = {
			["npcID"] = 158259,
		},
		[343893] = {
			["npcID"] = 162829,
		},
		[198904] = {
			["npcID"] = 99358,
		},
		[361913] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[183548] = {
			["npcID"] = 102404,
		},
		[196345] = {
			["npcID"] = 98003,
		},
		[49537] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["encounterID"] = 1975,
			["npcID"] = 26632,
		},
		[358225] = {
			["npcID"] = 178732,
		},
		[350653] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 177613,
			["encounterID"] = 2430,
		},
		[339392] = {
			["npcID"] = 158259,
		},
		[319941] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[331026] = {
			["npcID"] = 160185,
		},
		[317894] = {
			["npcID"] = 159601,
		},
		[212726] = {
			["encounterName"] = "Cenarius",
			["npcID"] = 104636,
			["encounterID"] = 1877,
		},
		[213238] = {
			["encounterName"] = "Tichondrius",
			["npcID"] = 103685,
			["encounterID"] = 1862,
		},
		[320966] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[358845] = {
			["npcID"] = 181133,
		},
		[329679] = {
			["npcID"] = 158256,
		},
		[336158] = {
			["npcID"] = 172217,
		},
		[356414] = {
			["npcID"] = 179892,
		},
		[60236] = {
			["npcID"] = 28547,
		},
		[314825] = {
			["npcID"] = 161814,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[336859] = {
			["npcID"] = 162873,
		},
		[195254] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[271652] = {
			["npcID"] = 176434,
		},
		[197749] = {
			["npcID"] = 97370,
		},
		[137994] = {
			["npcID"] = 69702,
		},
		[362568] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[151303] = {
			["encounterName"] = "Aku'mai",
			["encounterID"] = 1672,
			["npcID"] = 75155,
		},
		[114826] = {
			["npcID"] = 59553,
		},
		[288210] = {
			["npcID"] = 163032,
		},
		[195172] = {
			["npcID"] = 91782,
		},
		[366412] = {
			["npcID"] = 183746,
		},
		[215288] = {
			["encounterName"] = "Elerethe Renferal",
			["npcID"] = 106087,
			["encounterID"] = 1876,
		},
		[137995] = {
			["npcID"] = 69702,
		},
		[15575] = {
			["npcID"] = 8907,
		},
		[328533] = {
			["npcID"] = 163862,
		},
		[250096] = {
			["encounterName"] = "Yazma",
			["encounterID"] = 2087,
			["npcID"] = 122968,
		},
		[361923] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 183138,
		},
		[181505] = {
			["npcID"] = 108197,
		},
		[335305] = {
			["npcID"] = 171799,
		},
		[332234] = {
			["npcID"] = 167967,
		},
		[329163] = {
			["npcID"] = 168837,
		},
		[204028] = {
			["npcID"] = 102337,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["encounterID"] = 1417,
			["npcID"] = 59051,
		},
		[220138] = {
			["npcID"] = 110715,
		},
		[345936] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[31914] = {
			["encounterName"] = "Epoch Hunter",
			["encounterID"] = 1906,
			["npcID"] = 18096,
		},
		[355782] = {
			["npcID"] = 179842,
		},
		[324046] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[324923] = {
			["npcID"] = 164926,
		},
		[321999] = {
			["npcID"] = 164705,
		},
		[335308] = {
			["npcID"] = 171799,
		},
		[317905] = {
			["npcID"] = 165323,
		},
		[164615] = {
			["npcID"] = 81767,
		},
		[322000] = {
			["npcID"] = 165665,
		},
		[235254] = {
			["npcID"] = 115641,
		},
		[338848] = {
			["npcID"] = 167525,
		},
		[197744] = {
			["npcID"] = 96884,
		},
		[32682] = {
			["npcID"] = 18320,
		},
		[151548] = {
			["npcID"] = 75272,
		},
		[332239] = {
			["npcID"] = 170418,
		},
		[329168] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[201983] = {
			["npcID"] = 113537,
		},
		[192138] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 97269,
			["encounterID"] = 1810,
		},
		[182532] = {
			["npcID"] = 174183,
		},
		[328084] = {
			["npcID"] = 172072,
		},
		[328094] = {
			["npcID"] = 168627,
		},
		[294362] = {
			["npcID"] = 151127,
		},
		[328146] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[329170] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[193712] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[337249] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[319957] = {
			["npcID"] = 170929,
		},
		[329171] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[192617] = {
			["encounterName"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["encounterID"] = 1814,
		},
		[194682] = {
			["npcID"] = 98963,
		},
		[345552] = {
			["npcID"] = 175425,
		},
		[329172] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[359265] = {
			["npcID"] = 185415,
		},
		[296355] = {
			["npcID"] = 152612,
		},
		[242733] = {
			["npcID"] = 117230,
		},
		[200185] = {
			["encounterName"] = "Shade of Xavius",
			["npcID"] = 99192,
			["encounterID"] = 1839,
		},
		[335030] = {
			["npcID"] = 156331,
		},
		[212735] = {
			["encounterName"] = "Spellblade Aluriel",
			["npcID"] = 104881,
			["encounterID"] = 1871,
		},
		[317661] = {
			["npcID"] = 163503,
		},
		[345554] = {
			["npcID"] = 175425,
		},
		[121484] = {
			["npcID"] = 55470,
		},
		[362566] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[316890] = {
			["npcID"] = 153239,
		},
		[114062] = {
			["encounterName"] = "Jandice Barov",
			["npcID"] = 59184,
			["encounterID"] = 1427,
		},
		[356817] = {
			["npcID"] = 178877,
		},
		[331223] = {
			["npcID"] = 162763,
		},
		[200963] = {
			["npcID"] = 92776,
		},
		[172810] = {
			["npcID"] = 81603,
		},
		[341127] = {
			["npcID"] = 158259,
		},
		[317916] = {
			["npcID"] = 159112,
		},
		[365008] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183033,
		},
		[184584] = {
			["npcID"] = 93154,
		},
		[224510] = {
			["npcID"] = 112671,
		},
		[339415] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[365009] = {
			["npcID"] = 184409,
		},
		[13748] = {
			["npcID"] = 8913,
		},
		[330573] = {
			["npcID"] = 155251,
		},
		[198405] = {
			["npcID"] = 97097,
		},
		[342425] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[320989] = {
			["npcID"] = 156561,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[319966] = {
			["npcID"] = 167078,
		},
		[196870] = {
			["npcID"] = 91783,
		},
		[115087] = {
			["npcID"] = 56283,
		},
		[323689] = {
			["npcID"] = 158642,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74571,
		},
		[226231] = {
			["npcID"] = 111170,
		},
		[320991] = {
			["npcID"] = 162038,
		},
		[80012] = {
			["npcID"] = 39437,
		},
		[347609] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[225207] = {
			["npcID"] = 101100,
		},
		[32363] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18344,
		},
		[161040] = {
			["npcID"] = 75241,
		},
		[198407] = {
			["npcID"] = 114289,
		},
		[260344] = {
			["npcID"] = 157145,
		},
		[338855] = {
			["npcID"] = 167527,
		},
		[358872] = {
			["npcID"] = 178592,
		},
		[317284] = {
			["npcID"] = 162880,
		},
		[347610] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[70043] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[345236] = {
			["npcID"] = 166398,
		},
		[70162] = {
			["encounterName"] = "Icecrown Gunship Battle",
			["encounterID"] = 1099,
			["npcID"] = 36969,
		},
		[340446] = {
			["npcID"] = 167898,
		},
		[154899] = {
			["encounterName"] = "Orebender Gor'ashan",
			["encounterID"] = 1761,
			["npcID"] = 76413,
		},
		[191754] = {
			["npcID"] = 95872,
		},
		[210022] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 106643,
			["encounterID"] = 1872,
		},
		[320655] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[338357] = {
			["npcID"] = 172981,
		},
		[355234] = {
			["npcID"] = 178142,
		},
		[318949] = {
			["npcID"] = 163894,
		},
		[119556] = {
			["npcID"] = 57649,
		},
		[42708] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 2025,
		},
		[224515] = {
			["npcID"] = 112676,
		},
		[339425] = {
			["npcID"] = 173447,
		},
		[350687] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[349663] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176556,
			["encounterID"] = 2441,
		},
		[55633] = {
			["npcID"] = 29832,
		},
		[355806] = {
			["npcID"] = 179891,
		},
		[167120] = {
			["npcID"] = 81279,
		},
		[320999] = {
			["npcID"] = 164852,
		},
		[354114] = {
			["npcID"] = 179234,
		},
		[331237] = {
			["npcID"] = 162763,
		},
		[344546] = {
			["npcID"] = 162880,
		},
		[321000] = {
			["npcID"] = 177134,
		},
		[200214] = {
			["npcID"] = 101462,
		},
		[323048] = {
			["npcID"] = 160345,
		},
		[155590] = {
			["npcID"] = 77036,
		},
		[196028] = {
			["npcID"] = 97171,
		},
		[158997] = {
			["npcID"] = 81362,
		},
		[342500] = {
			["npcID"] = 170836,
		},
		[310765] = {
			["npcID"] = 159677,
		},
		[172818] = {
			["npcID"] = 184074,
		},
		[362976] = {
			["npcID"] = 185944,
		},
		[194317] = {
			["npcID"] = 94986,
		},
		[226347] = {
			["npcID"] = 91332,
		},
		[353763] = {
			["npcID"] = 177521,
		},
		[338407] = {
			["npcID"] = 165339,
		},
		[355811] = {
			["npcID"] = 177291,
		},
		[328170] = {
			["npcID"] = 162057,
		},
		[68939] = {
			["encounterName"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["npcID"] = 36502,
		},
		[329703] = {
			["npcID"] = 159106,
		},
		[332613] = {
			["npcID"] = 170577,
		},
		[365026] = {
			["npcID"] = 182318,
		},
		[49696] = {
			["npcID"] = 26636,
		},
		[346599] = {
			["npcID"] = 175704,
		},
		[347623] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[196027] = {
			["npcID"] = 97171,
		},
		[189200] = {
			["npcID"] = 172021,
		},
		[357862] = {
			["npcID"] = 177903,
		},
		[352744] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[348648] = {
			["npcID"] = 176520,
		},
		[219913] = {
			["npcID"] = 95916,
		},
		[71326] = {
			["npcID"] = 37502,
		},
		[265725] = {
			["npcID"] = 158278,
		},
		[324079] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[32364] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18344,
		},
		[72350] = {
			["encounterName"] = "The Lich King",
			["npcID"] = 36597,
			["encounterID"] = 1106,
		},
		[321009] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[346604] = {
			["npcID"] = 180111,
		},
		[195344] = {
			["npcID"] = 95866,
		},
		[235271] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 118289,
		},
		[323057] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[106646] = {
			["npcID"] = 56473,
		},
		[332272] = {
			["npcID"] = 180028,
		},
		[309749] = {
			["npcID"] = 172556,
		},
		[323058] = {
			["npcID"] = 165609,
		},
		[328177] = {
			["npcID"] = 168572,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[346605] = {
			["npcID"] = 175801,
		},
		[323059] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164804,
			["encounterID"] = 2397,
		},
		[356843] = {
			["npcID"] = 179388,
		},
		[330868] = {
			["npcID"] = 160495,
		},
		[242950] = {
			["npcID"] = 115642,
		},
		[328856] = {
			["npcID"] = 165561,
		},
		[191735] = {
			["npcID"] = 98954,
		},
		[122259] = {
			["npcID"] = 62632,
		},
		[346607] = {
			["npcID"] = 175857,
		},
		[59346] = {
			["npcID"] = 28922,
		},
		[328180] = {
			["npcID"] = 168627,
		},
		[333299] = {
			["npcID"] = 169893,
		},
		[317943] = {
			["npcID"] = 163457,
		},
		[334324] = {
			["npcID"] = 171376,
		},
		[365036] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 184126,
		},
		[355132] = {
			["npcID"] = 178141,
		},
		[228619] = {
			["encounterName"] = "Helya",
			["npcID"] = 114809,
			["encounterID"] = 2008,
		},
		[154221] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["encounterID"] = 1678,
			["npcID"] = 76260,
		},
		[196883] = {
			["npcID"] = 98521,
		},
		[22127] = {
			["npcID"] = 38952,
		},
		[366062] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[323064] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[335680] = {
			["npcID"] = 157807,
		},
		[296447] = {
			["npcID"] = 152644,
		},
		[334326] = {
			["npcID"] = 171376,
		},
		[52754] = {
			["npcID"] = 28580,
		},
		[340469] = {
			["npcID"] = 167439,
		},
		[194325] = {
			["encounterName"] = "Harbaron",
			["encounterID"] = 1823,
			["npcID"] = 96754,
		},
		[346612] = {
			["npcID"] = 175851,
		},
		[294401] = {
			["npcID"] = 151815,
		},
		[59146] = {
			["npcID"] = 29820,
		},
		[196885] = {
			["npcID"] = 99307,
		},
		[193977] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["encounterID"] = 1822,
			["npcID"] = 96756,
		},
		[342519] = {
			["npcID"] = 167851,
		},
		[352756] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 178738,
		},
		[203028] = {
			["encounterName"] = "Dragons of Nightmare",
			["encounterID"] = 1854,
			["npcID"] = 102679,
		},
		[31405] = {
			["npcID"] = 17771,
		},
		[319298] = {
			["npcID"] = 162817,
		},
		[319997] = {
			["npcID"] = 164510,
		},
		[77216] = {
			["npcID"] = 41182,
		},
		[59603] = {
			["npcID"] = 24849,
		},
		[59347] = {
			["npcID"] = 29097,
		},
		[356853] = {
			["npcID"] = 179254,
		},
		[353782] = {
			["npcID"] = 178403,
		},
		[48894] = {
			["npcID"] = 26639,
		},
		[355830] = {
			["npcID"] = 179893,
		},
		[365044] = {
			["npcID"] = 182318,
		},
		[353783] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[188169] = {
			["encounterName"] = "Rokmora",
			["encounterID"] = 1790,
			["npcID"] = 91003,
		},
		[347283] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[336380] = {
			["npcID"] = 172142,
		},
		[296454] = {
			["npcID"] = 152656,
		},
		[326463] = {
			["npcID"] = 179405,
		},
		[44503] = {
			["npcID"] = 24690,
		},
		[333629] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 168246,
		},
		[321025] = {
			["npcID"] = 157754,
		},
		[157173] = {
			["npcID"] = 79507,
		},
		[354367] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["encounterID"] = 2431,
			["npcID"] = 175730,
		},
		[53333] = {
			["encounterName"] = "Hadronox",
			["npcID"] = 29098,
			["encounterID"] = 1972,
		},
		[322367] = {
			["npcID"] = 165485,
		},
		[32129] = {
			["npcID"] = 18328,
		},
		[340474] = {
			["npcID"] = 167439,
		},
		[336383] = {
			["npcID"] = 171316,
		},
		[59696] = {
			["npcID"] = 24082,
		},
		[49816] = {
			["npcID"] = 25479,
		},
		[319406] = {
			["npcID"] = 159233,
		},
		[34945] = {
			["npcID"] = 18317,
		},
		[275983] = {
			["npcID"] = 157820,
		},
		[319294] = {
			["npcID"] = 162817,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["npcID"] = 75452,
			["encounterID"] = 1679,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 96015,
		},
		[275984] = {
			["npcID"] = 166936,
		},
		[258634] = {
			["npcID"] = 154129,
		},
		[202676] = {
			["encounterName"] = "Blood-Princess Thal'ena",
			["npcID"] = 102431,
			["encounterID"] = 1855,
		},
		[159847] = {
			["npcID"] = 78667,
		},
		[255041] = {
			["npcID"] = 128434,
		},
		[317959] = {
			["npcID"] = 163458,
		},
		[330640] = {
			["npcID"] = 169823,
		},
		[205081] = {
			["npcID"] = 102397,
		},
		[138691] = {
			["encounterName"] = "Dark Animus",
			["npcID"] = 69427,
			["encounterID"] = 1576,
		},
		[232722] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115767,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["npcID"] = 40586,
		},
		[324103] = {
			["npcID"] = 162133,
		},
		[366077] = {
			["npcID"] = 183925,
		},
		[53788] = {
			["npcID"] = 28584,
		},
		[44504] = {
			["npcID"] = 24690,
		},
		[252687] = {
			["npcID"] = 122970,
		},
		[360960] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[207642] = {
			["npcID"] = 175922,
		},
		[343556] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[168227] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 83612,
			["encounterID"] = 1754,
		},
		[70053] = {
			["npcID"] = 37126,
		},
		[317963] = {
			["npcID"] = 163458,
		},
		[198428] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[106984] = {
			["encounterName"] = "Gu Cloudstrike",
			["encounterID"] = 1303,
			["npcID"] = 56747,
		},
		[337415] = {
			["npcID"] = 165339,
		},
		[355787] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[239379] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118523,
		},
		[11802] = {
			["npcID"] = 6212,
		},
		[226070] = {
			["npcID"] = 112039,
		},
		[346630] = {
			["npcID"] = 175851,
		},
		[331274] = {
			["npcID"] = 167923,
		},
		[274968] = {
			["npcID"] = 170414,
		},
		[15801] = {
			["npcID"] = 27963,
		},
		[346631] = {
			["npcID"] = 175930,
		},
		[331275] = {
			["npcID"] = 167533,
		},
		[221464] = {
			["npcID"] = 111225,
		},
		[321038] = {
			["npcID"] = 162039,
		},
		[165511] = {
			["npcID"] = 82017,
		},
		[11962] = {
			["npcID"] = 49423,
		},
		[111772] = {
			["npcID"] = 58757,
		},
		[361989] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[221783] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[317936] = {
			["npcID"] = 163459,
		},
		[328206] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[348074] = {
			["npcID"] = 178041,
		},
		[226287] = {
			["npcID"] = 101438,
		},
		[357238] = {
			["npcID"] = 180429,
		},
		[165875] = {
			["npcID"] = 79702,
		},
		[57046] = {
			["npcID"] = 26737,
		},
		[159017] = {
			["npcID"] = 78734,
		},
		[204574] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[320019] = {
			["npcID"] = 167022,
		},
		[71335] = {
			["encounterName"] = "Icecrown Gunship Battle",
			["npcID"] = 36969,
			["encounterID"] = 1099,
		},
		[358921] = {
			["npcID"] = 178615,
		},
		[318995] = {
			["npcID"] = 155945,
		},
		[198944] = {
			["npcID"] = 102104,
		},
		[321043] = {
			["npcID"] = 158867,
		},
		[350732] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[331248] = {
			["npcID"] = 171142,
		},
		[119524] = {
			["npcID"] = 61345,
		},
		[48698] = {
			["npcID"] = 26554,
		},
		[324527] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[25602] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 19306,
		},
		[58966] = {
			["npcID"] = 29836,
		},
		[335187] = {
			["npcID"] = 163960,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["npcID"] = 28587,
			["encounterID"] = 1985,
		},
		[118940] = {
			["npcID"] = 61239,
		},
		[365067] = {
			["npcID"] = 182318,
		},
		[366091] = {
			["npcID"] = 181011,
		},
		[59734] = {
			["encounterName"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["npcID"] = 23954,
		},
		[165674] = {
			["npcID"] = 79585,
		},
		[32903] = {
			["npcID"] = 58067,
		},
		[323943] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[363021] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183463,
		},
		[220957] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 111022,
			["encounterID"] = 1866,
		},
		[340500] = {
			["npcID"] = 167078,
		},
		[325143] = {
			["npcID"] = 157212,
		},
		[57047] = {
			["npcID"] = 26737,
		},
		[186663] = {
			["encounterName"] = "Archimonde",
			["npcID"] = 93615,
			["encounterID"] = 1799,
		},
		[56919] = {
			["encounterName"] = "Frozen Commander",
			["encounterID"] = 519,
			["npcID"] = 26805,
		},
		[329239] = {
			["npcID"] = 163882,
		},
		[159021] = {
			["npcID"] = 77890,
		},
		[351762] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[205090] = {
			["npcID"] = 102398,
		},
		[111775] = {
			["npcID"] = 58722,
		},
		[202019] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[347668] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[360977] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[154415] = {
			["encounterName"] = "Soulbinder Nyami",
			["encounterID"] = 1685,
			["npcID"] = 76177,
		},
		[71337] = {
			["npcID"] = 37531,
		},
		[338456] = {
			["npcID"] = 172981,
		},
		[320028] = {
			["npcID"] = 177545,
		},
		[190898] = {
			["npcID"] = 99451,
		},
		[326171] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[47668] = {
			["npcID"] = 26635,
		},
		[58967] = {
			["npcID"] = 29836,
		},
		[183081] = {
			["npcID"] = 165793,
		},
		[212258] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[192135] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 97264,
			["encounterID"] = 1810,
		},
		[356885] = {
			["npcID"] = 177833,
		},
		[197414] = {
			["npcID"] = 93802,
		},
		[157355] = {
			["npcID"] = 81711,
		},
		[317605] = {
			["npcID"] = 162744,
		},
		[328221] = {
			["npcID"] = 166723,
		},
		[154417] = {
			["encounterName"] = "Orebender Gor'ashan",
			["encounterID"] = 1761,
			["npcID"] = 76413,
		},
		[47962] = {
			["npcID"] = 25334,
		},
		[71594] = {
			["npcID"] = 37125,
		},
		[225568] = {
			["npcID"] = 99366,
		},
		[205605] = {
			["npcID"] = 166137,
		},
		[317985] = {
			["npcID"] = 163520,
		},
		[332318] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 164407,
			["encounterID"] = 2399,
		},
		[356888] = {
			["npcID"] = 177813,
		},
		[345627] = {
			["npcID"] = 159174,
		},
		[319010] = {
			["npcID"] = 170333,
		},
		[359960] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[69705] = {
			["encounterName"] = "Icecrown Gunship Battle",
			["encounterID"] = 1099,
			["npcID"] = 37116,
		},
		[166077] = {
			["npcID"] = 80468,
		},
		[326177] = {
			["npcID"] = 167437,
		},
		[153395] = {
			["npcID"] = 76057,
		},
		[173751] = {
			["npcID"] = 155216,
		},
		[150324] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74570,
		},
		[358938] = {
			["npcID"] = 180840,
		},
		[71595] = {
			["npcID"] = 37122,
		},
		[189227] = {
			["npcID"] = 95174,
		},
		[357915] = {
			["npcID"] = 177903,
		},
		[222499] = {
			["npcID"] = 162829,
		},
		[205096] = {
			["npcID"] = 102395,
		},
		[340512] = {
			["npcID"] = 167078,
		},
		[321061] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[277040] = {
			["npcID"] = 154015,
		},
		[347679] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[336418] = {
			["npcID"] = 175857,
		},
		[197418] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["npcID"] = 98696,
			["encounterID"] = 1833,
		},
		[277041] = {
			["npcID"] = 154020,
		},
		[368155] = {
			["npcID"] = 185505,
		},
		[121601] = {
			["npcID"] = 61946,
		},
		[345520] = {
			["npcID"] = 157833,
		},
		[17843] = {
			["npcID"] = 18319,
		},
		[316836] = {
			["npcID"] = 165831,
		},
		[51963] = {
			["npcID"] = 27829,
		},
		[336809] = {
			["npcID"] = 162873,
		},
		[277043] = {
			["npcID"] = 154018,
		},
		[360229] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[194860] = {
			["npcID"] = 94691,
		},
		[357920] = {
			["npcID"] = 179684,
		},
		[195884] = {
			["npcID"] = 100055,
		},
		[335398] = {
			["npcID"] = 161246,
		},
		[322943] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["npcID"] = 165408,
			["encounterID"] = 2401,
		},
		[317231] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[50900] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["encounterID"] = 1998,
			["npcID"] = 27979,
		},
		[356133] = {
			["npcID"] = 180015,
		},
		[332329] = {
			["npcID"] = 170486,
		},
		[183088] = {
			["npcID"] = 113998,
		},
		[159030] = {
			["npcID"] = 81396,
		},
		[38238] = {
			["npcID"] = 19428,
		},
		[340519] = {
			["npcID"] = 161857,
		},
		[325163] = {
			["npcID"] = 171772,
		},
		[363042] = {
			["npcID"] = 182350,
		},
		[165685] = {
			["npcID"] = 79585,
		},
		[355127] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[358598] = {
			["npcID"] = 178897,
		},
		[356901] = {
			["npcID"] = 177004,
		},
		[319022] = {
			["npcID"] = 158259,
		},
		[217385] = {
			["npcID"] = 108027,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[48280] = {
			["npcID"] = 153897,
		},
		[364068] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183666,
			["encounterID"] = 2546,
		},
		[33919] = {
			["encounterName"] = "Tavarok",
			["encounterID"] = 1901,
			["npcID"] = 18343,
		},
		[347151] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[342570] = {
			["npcID"] = 170832,
		},
		[100263] = {
			["npcID"] = 53095,
		},
		[71405] = {
			["encounterName"] = "Blood Council",
			["npcID"] = 37972,
			["encounterID"] = 1095,
		},
		[242468] = {
			["npcID"] = 121460,
		},
		[334381] = {
			["npcID"] = 171384,
		},
		[359975] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[332335] = {
			["npcID"] = 170488,
		},
		[324394] = {
			["npcID"] = 165197,
		},
		[324146] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[368166] = {
			["npcID"] = 183814,
		},
		[205102] = {
			["npcID"] = 102400,
		},
		[53467] = {
			["encounterName"] = "Anub'arak",
			["npcID"] = 29120,
			["encounterID"] = 1973,
		},
		[241446] = {
			["npcID"] = 120003,
		},
		[351787] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 177594,
			["encounterID"] = 2434,
		},
		[361001] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 181850,
		},
		[353835] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[325171] = {
			["npcID"] = 177978,
		},
		[364073] = {
			["npcID"] = 184735,
		},
		[205103] = {
			["npcID"] = 102400,
		},
		[353836] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[121762] = {
			["npcID"] = 62633,
		},
		[17140] = {
			["npcID"] = 82009,
		},
		[359979] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[357932] = {
			["npcID"] = 178810,
		},
		[159035] = {
			["npcID"] = 78728,
		},
		[196402] = {
			["npcID"] = 103067,
		},
		[195378] = {
			["npcID"] = 95869,
		},
		[323683] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[321828] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[331316] = {
			["npcID"] = 167538,
		},
		[200498] = {
			["npcID"] = 96278,
		},
		[355887] = {
			["npcID"] = 178188,
		},
		[335412] = {
			["npcID"] = 178660,
		},
		[196403] = {
			["npcID"] = 93221,
		},
		[326997] = {
			["npcID"] = 167607,
		},
		[331288] = {
			["npcID"] = 167532,
		},
		[239401] = {
			["encounterName"] = "Demonic Inquisition",
			["encounterID"] = 2048,
			["npcID"] = 116691,
		},
		[206641] = {
			["encounterName"] = "Trilliax",
			["npcID"] = 104288,
			["encounterID"] = 1867,
		},
		[275012] = {
			["npcID"] = 152998,
		},
		[277060] = {
			["npcID"] = 154020,
		},
		[204082] = {
			["npcID"] = 107551,
		},
		[344471] = {
			["npcID"] = 170634,
		},
		[356913] = {
			["npcID"] = 177813,
		},
		[106920] = {
			["npcID"] = 56763,
		},
		[218415] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["npcID"] = 105906,
			["encounterID"] = 1873,
		},
		[166906] = {
			["npcID"] = 178645,
		},
		[161203] = {
			["encounterName"] = "Kyrak",
			["encounterID"] = 1758,
			["npcID"] = 76021,
		},
		[199476] = {
			["npcID"] = 92990,
		},
		[197546] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["npcID"] = 98696,
			["encounterID"] = 1833,
		},
		[166032] = {
			["npcID"] = 80775,
		},
		[358963] = {
			["npcID"] = 180864,
		},
		[9532] = {
			["npcID"] = 1544,
		},
		[338488] = {
			["npcID"] = 173066,
		},
		[314942] = {
			["npcID"] = 166869,
		},
		[340536] = {
			["npcID"] = 173783,
		},
		[357653] = {
			["npcID"] = 177983,
		},
		[27634] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[212786] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[149941] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74570,
		},
		[172860] = {
			["npcID"] = 83025,
		},
		[197942] = {
			["encounterName"] = "Ursoc",
			["npcID"] = 100497,
			["encounterID"] = 1841,
		},
		[51805] = {
			["npcID"] = 27966,
		},
		[320063] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164451,
			["encounterID"] = 2391,
		},
		[123914] = {
			["npcID"] = 63467,
		},
		[308803] = {
			["npcID"] = 158259,
		},
		[316993] = {
			["npcID"] = 167443,
		},
		[241566] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118462,
		},
		[325183] = {
			["npcID"] = 174938,
		},
		[358967] = {
			["npcID"] = 179446,
		},
		[225073] = {
			["npcID"] = 113089,
		},
		[365110] = {
			["npcID"] = 183746,
		},
		[357944] = {
			["npcID"] = 179768,
		},
		[41056] = {
			["npcID"] = 26451,
		},
		[323137] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164804,
			["encounterID"] = 2397,
		},
		[361016] = {
			["npcID"] = 183983,
		},
		[357479] = {
			["npcID"] = 178653,
		},
		[163390] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80808,
			["encounterID"] = 1748,
		},
		[327233] = {
			["npcID"] = 168393,
		},
		[320067] = {
			["npcID"] = 178944,
		},
		[56969] = {
			["npcID"] = 26735,
		},
		[358970] = {
			["npcID"] = 179891,
		},
		[356923] = {
			["npcID"] = 179890,
		},
		[279118] = {
			["npcID"] = 122969,
		},
		[199481] = {
			["npcID"] = 97632,
		},
		[148805] = {
			["npcID"] = 80167,
		},
		[355900] = {
			["npcID"] = 177807,
		},
		[356924] = {
			["npcID"] = 179890,
		},
		[296523] = {
			["npcID"] = 152708,
		},
		[341084] = {
			["npcID"] = 179401,
		},
		[337255] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[150451] = {
			["npcID"] = 74719,
		},
		[106923] = {
			["encounterName"] = "Gu Cloudstrike",
			["encounterID"] = 1303,
			["npcID"] = 56754,
		},
		[340764] = {
			["npcID"] = 173864,
		},
		[323138] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[336451] = {
			["npcID"] = 163862,
		},
		[321669] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 165108,
			["encounterID"] = 2392,
		},
		[327240] = {
			["npcID"] = 165911,
		},
		[351808] = {
			["npcID"] = 176577,
		},
		[348953] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[361024] = {
			["npcID"] = 180085,
		},
		[140106] = {
			["npcID"] = 69518,
		},
		[203685] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99676,
		},
		[352833] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[366142] = {
			["npcID"] = 184651,
		},
		[365120] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[208697] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["npcID"] = 105322,
			["encounterID"] = 1873,
		},
		[352834] = {
			["npcID"] = 176959,
		},
		[366143] = {
			["npcID"] = 184651,
		},
		[331548] = {
			["npcID"] = 167964,
		},
		[347716] = {
			["npcID"] = 176394,
		},
		[124072] = {
			["npcID"] = 63592,
		},
		[15547] = {
			["npcID"] = 8895,
		},
		[232756] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115767,
		},
		[58973] = {
			["npcID"] = 29820,
		},
		[232757] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115767,
		},
		[185152] = {
			["npcID"] = 157820,
		},
		[218424] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109041,
			["encounterID"] = 1886,
		},
		[340761] = {
			["npcID"] = 166140,
		},
		[239923] = {
			["npcID"] = 120182,
		},
		[323149] = {
			["encounterName"] = "Ingra Maloch",
			["npcID"] = 164567,
			["encounterID"] = 2397,
		},
		[358980] = {
			["npcID"] = 180864,
		},
		[59357] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["encounterID"] = 1971,
			["npcID"] = 28733,
		},
		[114859] = {
			["npcID"] = 59614,
		},
		[358749] = {
			["npcID"] = 178824,
		},
		[327246] = {
			["npcID"] = 167524,
		},
		[323150] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 165737,
			["encounterID"] = 2381,
		},
		[340760] = {
			["npcID"] = 166140,
		},
		[157001] = {
			["npcID"] = 77890,
		},
		[358982] = {
			["npcID"] = 180865,
		},
		[347721] = {
			["npcID"] = 176396,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["npcID"] = 76407,
			["encounterID"] = 1682,
		},
		[32370] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["encounterID"] = 1899,
			["npcID"] = 18430,
		},
		[358983] = {
			["npcID"] = 180865,
		},
		[125865] = {
			["npcID"] = 64454,
		},
		[365126] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181548,
			["encounterID"] = 2544,
		},
		[321105] = {
			["npcID"] = 168591,
		},
		[167239] = {
			["npcID"] = 83028,
		},
		[366150] = {
			["npcID"] = 180906,
		},
		[352842] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[362056] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 181447,
			["encounterID"] = 2529,
		},
		[332569] = {
			["npcID"] = 156559,
		},
		[329990] = {
			["npcID"] = 158978,
		},
		[352843] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[350796] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[167240] = {
			["npcID"] = 83028,
		},
		[355915] = {
			["npcID"] = 177816,
		},
		[347726] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[230201] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115767,
		},
		[326227] = {
			["npcID"] = 182879,
		},
		[29427] = {
			["npcID"] = 17730,
		},
		[350421] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[336803] = {
			["npcID"] = 173640,
		},
		[167241] = {
			["encounterName"] = "Warlord Zaela",
			["encounterID"] = 1762,
			["npcID"] = 83480,
		},
		[329929] = {
			["npcID"] = 157083,
		},
		[356941] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178081,
			["encounterID"] = 2435,
		},
		[325205] = {
			["npcID"] = 166936,
		},
		[173384] = {
			["npcID"] = 83392,
		},
		[114999] = {
			["encounterName"] = "Taran Zhu",
			["encounterID"] = 1306,
			["npcID"] = 56884,
		},
		[356942] = {
			["npcID"] = 179837,
		},
		[332567] = {
			["npcID"] = 170228,
		},
		[326230] = {
			["npcID"] = 165829,
		},
		[33111] = {
			["npcID"] = 17371,
		},
		[336947] = {
			["npcID"] = 162853,
		},
		[357967] = {
			["npcID"] = 178897,
		},
		[9053] = {
			["npcID"] = 19701,
		},
		[335445] = {
			["npcID"] = 180032,
		},
		[340564] = {
			["npcID"] = 169206,
		},
		[52960] = {
			["encounterName"] = "Loken",
			["npcID"] = 28923,
			["encounterID"] = 1986,
		},
		[354898] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[363088] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[44538] = {
			["npcID"] = 24698,
		},
		[53472] = {
			["encounterName"] = "Anub'arak",
			["npcID"] = 29120,
			["encounterID"] = 1973,
		},
		[350803] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[119981] = {
			["encounterName"] = "Trial of the King",
			["npcID"] = 61444,
			["encounterID"] = 1442,
		},
		[348756] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[240540] = {
			["npcID"] = 120516,
		},
		[253239] = {
			["npcID"] = 122971,
		},
		[204611] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[357135] = {
			["npcID"] = 180387,
		},
		[196515] = {
			["npcID"] = 100250,
		},
		[354900] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[364114] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[340568] = {
			["npcID"] = 172800,
		},
		[154448] = {
			["encounterName"] = "Orebender Gor'ashan",
			["encounterID"] = 1761,
			["npcID"] = 76413,
		},
		[76634] = {
			["npcID"] = 40925,
		},
		[319070] = {
			["npcID"] = 163891,
		},
		[361044] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182305,
			["encounterID"] = 2544,
		},
		[356384] = {
			["npcID"] = 178907,
		},
		[162127] = {
			["npcID"] = 75240,
		},
		[137045] = {
			["encounterName"] = "Lei Shen",
			["npcID"] = 68397,
			["encounterID"] = 1579,
		},
		[194887] = {
			["npcID"] = 95013,
		},
		[328288] = {
			["npcID"] = 168718,
		},
		[322143] = {
			["npcID"] = 157054,
		},
		[327262] = {
			["npcID"] = 167524,
		},
		[356951] = {
			["npcID"] = 177004,
		},
		[329310] = {
			["npcID"] = 158813,
		},
		[354904] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[310041] = {
			["npcID"] = 166071,
		},
		[328287] = {
			["npcID"] = 165265,
		},
		[69051] = {
			["encounterName"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["npcID"] = 36502,
		},
		[200007] = {
			["npcID"] = 96783,
		},
		[355929] = {
			["npcID"] = 177803,
		},
		[114864] = {
			["npcID"] = 59614,
		},
		[59638] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 31216,
			["encounterID"] = 2435,
		},
		[324609] = {
			["npcID"] = 166396,
		},
		[355930] = {
			["npcID"] = 177816,
		},
		[326039] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["encounterID"] = 2362,
			["npcID"] = 162102,
		},
		[347741] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[228673] = {
			["npcID"] = 110715,
		},
		[163665] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80805,
			["encounterID"] = 1748,
		},
		[356955] = {
			["npcID"] = 176880,
		},
		[357979] = {
			["npcID"] = 178897,
		},
		[38245] = {
			["encounterName"] = "Talon King Ikiss",
			["encounterID"] = 1902,
			["npcID"] = 18473,
		},
		[130521] = {
			["npcID"] = 66052,
		},
		[356956] = {
			["npcID"] = 177573,
		},
		[228162] = {
			["encounterName"] = "Odyn",
			["npcID"] = 114360,
			["encounterID"] = 1958,
		},
		[361052] = {
			["npcID"] = 180722,
		},
		[69564] = {
			["npcID"] = 36620,
		},
		[201033] = {
			["npcID"] = 96997,
		},
		[59616] = {
			["npcID"] = 23960,
		},
		[367176] = {
			["npcID"] = 184409,
		},
		[355934] = {
			["npcID"] = 177817,
		},
		[277035] = {
			["npcID"] = 154018,
		},
		[341775] = {
			["npcID"] = 167528,
		},
		[350816] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 176531,
			["encounterID"] = 2433,
		},
		[242496] = {
			["npcID"] = 121499,
		},
		[44644] = {
			["npcID"] = 24685,
		},
		[325223] = {
			["npcID"] = 166304,
		},
		[218438] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109040,
			["encounterID"] = 1886,
		},
		[15228] = {
			["npcID"] = 60402,
		},
		[153942] = {
			["npcID"] = 76151,
		},
		[165715] = {
			["npcID"] = 82016,
		},
		[295929] = {
			["npcID"] = 154030,
		},
		[321520] = {
			["npcID"] = 166926,
		},
		[118905] = {
			["npcID"] = 61245,
		},
		[310037] = {
			["npcID"] = 165677,
		},
		[33634] = {
			["npcID"] = 19258,
		},
		[173311] = {
			["npcID"] = 83390,
		},
		[329322] = {
			["npcID"] = 155831,
		},
		[349797] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176556,
			["encounterID"] = 2441,
		},
		[337513] = {
			["npcID"] = 158259,
		},
		[327274] = {
			["npcID"] = 167524,
		},
		[33895] = {
			["npcID"] = 18827,
		},
		[357987] = {
			["npcID"] = 178757,
		},
		[324368] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 163077,
		},
		[165717] = {
			["npcID"] = 82002,
		},
		[197454] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 100351,
		},
		[130479] = {
			["npcID"] = 66287,
		},
		[330347] = {
			["npcID"] = 157583,
		},
		[106421] = {
			["npcID"] = 59741,
		},
		[324205] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[59617] = {
			["npcID"] = 23960,
		},
		[354918] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[294517] = {
			["npcID"] = 151816,
		},
		[22414] = {
			["npcID"] = 78553,
		},
		[329325] = {
			["npcID"] = 168007,
		},
		[201038] = {
			["npcID"] = 96997,
		},
		[163671] = {
			["npcID"] = 88782,
		},
		[356967] = {
			["npcID"] = 180348,
		},
		[329326] = {
			["npcID"] = 155831,
		},
		[328462] = {
			["npcID"] = 168845,
		},
		[218954] = {
			["npcID"] = 172071,
		},
		[366182] = {
			["npcID"] = 183498,
		},
		[325232] = {
			["npcID"] = 170031,
		},
		[327280] = {
			["npcID"] = 167524,
		},
		[355945] = {
			["npcID"] = 179940,
		},
		[320114] = {
			["encounterName"] = "Xav the Unfallen",
			["npcID"] = 162329,
			["encounterID"] = 2366,
		},
		[366183] = {
			["npcID"] = 183498,
		},
		[151545] = {
			["npcID"] = 75210,
		},
		[47736] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26929,
		},
		[52774] = {
			["encounterName"] = "General Bjarngrim",
			["npcID"] = 29240,
			["encounterID"] = 1987,
		},
		[216909] = {
			["encounterName"] = "Star Augur Etraeus",
			["npcID"] = 109082,
			["encounterID"] = 1863,
		},
		[350828] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[355947] = {
			["npcID"] = 177805,
		},
		[343664] = {
			["npcID"] = 162452,
		},
		[349805] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176973,
			["encounterID"] = 2422,
		},
		[197969] = {
			["encounterName"] = "Ursoc",
			["encounterID"] = 1841,
			["npcID"] = 100497,
		},
		[335474] = {
			["npcID"] = 158924,
		},
		[59362] = {
			["npcID"] = 29335,
		},
		[321141] = {
			["npcID"] = 156562,
		},
		[85692] = {
			["npcID"] = 11859,
		},
		[331379] = {
			["npcID"] = 167965,
		},
		[340593] = {
			["npcID"] = 172050,
		},
		[366187] = {
			["npcID"] = 183499,
		},
		[162139] = {
			["npcID"] = 76208,
		},
		[355950] = {
			["npcID"] = 178029,
		},
		[336499] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[228171] = {
			["encounterName"] = "Odyn",
			["npcID"] = 114360,
			["encounterID"] = 1958,
		},
		[354927] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178081,
			["encounterID"] = 2435,
		},
		[294526] = {
			["npcID"] = 151817,
		},
		[320120] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164463,
			["encounterID"] = 2391,
		},
		[193364] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["encounterID"] = 1822,
			["npcID"] = 96756,
		},
		[342869] = {
			["npcID"] = 168934,
		},
		[44518] = {
			["npcID"] = 24686,
		},
		[322977] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[366190] = {
			["npcID"] = 183495,
		},
		[167259] = {
			["npcID"] = 77037,
		},
		[339573] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 165946,
			["encounterID"] = 2404,
		},
		[164617] = {
			["npcID"] = 81767,
		},
		[183633] = {
			["npcID"] = 91008,
		},
		[367215] = {
			["npcID"] = 184395,
		},
		[157534] = {
			["npcID"] = 88087,
		},
		[365168] = {
			["npcID"] = 184530,
		},
		[76008] = {
			["encounterName"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["npcID"] = 40586,
		},
		[322171] = {
			["npcID"] = 172596,
		},
		[328458] = {
			["npcID"] = 168844,
		},
		[346742] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 175646,
			["encounterID"] = 2424,
		},
		[337530] = {
			["npcID"] = 158259,
		},
		[354932] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 178081,
			["encounterID"] = 2435,
		},
		[354933] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[106681] = {
			["npcID"] = 56472,
		},
		[329340] = {
			["npcID"] = 165410,
		},
		[359028] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176563,
			["encounterID"] = 2440,
		},
		[355074] = {
			["npcID"] = 178628,
		},
		[356981] = {
			["npcID"] = 177529,
		},
		[152417] = {
			["encounterName"] = "Subjugator Kor'ul",
			["encounterID"] = 1669,
			["npcID"] = 75396,
		},
		[197974] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["npcID"] = 100485,
			["encounterID"] = 1833,
		},
		[294533] = {
			["npcID"] = 151817,
		},
		[348128] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[358006] = {
			["npcID"] = 178789,
		},
		[212530] = {
			["encounterName"] = "Spellblade Aluriel",
			["npcID"] = 104881,
			["encounterID"] = 1871,
		},
		[44519] = {
			["npcID"] = 24686,
		},
		[328318] = {
			["npcID"] = 177912,
		},
		[366197] = {
			["npcID"] = 183500,
		},
		[363126] = {
			["npcID"] = 181027,
		},
		[335485] = {
			["npcID"] = 179029,
		},
		[356984] = {
			["npcID"] = 178402,
		},
		[296372] = {
			["npcID"] = 152612,
		},
		[49708] = {
			["npcID"] = 26625,
		},
		[327296] = {
			["npcID"] = 156561,
		},
		[334377] = {
			["npcID"] = 171805,
		},
		[366199] = {
			["npcID"] = 183495,
		},
		[354938] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[41448] = {
			["npcID"] = 177637,
		},
		[271401] = {
			["npcID"] = 161456,
		},
		[255373] = {
			["encounterName"] = "Rezan",
			["npcID"] = 122963,
			["encounterID"] = 2086,
		},
		[272016] = {
			["npcID"] = 154014,
		},
		[355963] = {
			["npcID"] = 152594,
		},
		[320132] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[358011] = {
			["npcID"] = 178789,
		},
		[363130] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[239439] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 120153,
		},
		[205361] = {
			["encounterName"] = "Krosus",
			["npcID"] = 101002,
			["encounterID"] = 1842,
		},
		[320135] = {
			["npcID"] = 167470,
		},
		[191900] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["encounterID"] = 1810,
		},
		[347775] = {
			["npcID"] = 176395,
		},
		[114873] = {
			["npcID"] = 59613,
		},
		[199514] = {
			["npcID"] = 97365,
		},
		[350847] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[360064] = {
			["npcID"] = 184216,
		},
		[166242] = {
			["npcID"] = 162874,
		},
		[325254] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["encounterID"] = 2362,
			["npcID"] = 162102,
		},
		[367228] = {
			["npcID"] = 184767,
		},
		[186269] = {
			["npcID"] = 90998,
		},
		[35946] = {
			["npcID"] = 24696,
		},
		[330500] = {
			["npcID"] = 155250,
		},
		[70116] = {
			["npcID"] = 37230,
		},
		[331398] = {
			["npcID"] = 170147,
		},
		[114874] = {
			["npcID"] = 59613,
		},
		[320144] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[325258] = {
			["encounterName"] = "Mueh'zala",
			["npcID"] = 166608,
			["encounterID"] = 2396,
		},
		[106428] = {
			["npcID"] = 56395,
		},
		[361088] = {
			["npcID"] = 181027,
		},
		[149865] = {
			["encounterName"] = "Ghamoo-ra",
			["encounterID"] = 1667,
			["npcID"] = 74446,
		},
		[340619] = {
			["npcID"] = 172071,
		},
		[335495] = {
			["npcID"] = 180032,
		},
		[193376] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[256846] = {
			["npcID"] = 129553,
		},
		[330386] = {
			["npcID"] = 158976,
		},
		[198495] = {
			["encounterName"] = "Helya",
			["encounterID"] = 1824,
			["npcID"] = 96759,
		},
		[365185] = {
			["npcID"] = 184659,
		},
		[130488] = {
			["npcID"] = 66287,
		},
		[332431] = {
			["npcID"] = 177788,
		},
		[331402] = {
			["npcID"] = 180028,
		},
		[328331] = {
			["npcID"] = 168717,
		},
		[42729] = {
			["encounterName"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["encounterID"] = 2025,
		},
		[152427] = {
			["npcID"] = 75211,
		},
		[222043] = {
			["npcID"] = 111370,
		},
		[340734] = {
			["npcID"] = 164547,
		},
		[193375] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[285335] = {
			["npcID"] = 177131,
		},
		[255824] = {
			["npcID"] = 122971,
		},
		[182172] = {
			["npcID"] = 103899,
		},
		[116155] = {
			["npcID"] = 59521,
		},
		[334476] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[337552] = {
			["npcID"] = 162853,
		},
		[44137] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24556,
		},
		[358023] = {
			["npcID"] = 180474,
		},
		[360075] = {
			["npcID"] = 182210,
		},
		[206685] = {
			["npcID"] = 104493,
		},
		[56934] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26731,
		},
		[256849] = {
			["npcID"] = 129553,
		},
		[322193] = {
			["npcID"] = 157054,
		},
		[155498] = {
			["npcID"] = 76100,
		},
		[184675] = {
			["encounterName"] = "Hellfire High Council",
			["npcID"] = 92144,
			["encounterID"] = 1798,
		},
		[201567] = {
			["npcID"] = 97043,
		},
		[152939] = {
			["encounterName"] = "Roltall",
			["encounterID"] = 1652,
			["npcID"] = 75786,
		},
		[210781] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["npcID"] = 105393,
			["encounterID"] = 1873,
		},
		[227673] = {
			["encounterName"] = "Guarm",
			["npcID"] = 114323,
			["encounterID"] = 1962,
		},
		[360076] = {
			["npcID"] = 181839,
		},
		[138607] = {
			["npcID"] = 69909,
		},
		[163689] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80816,
			["encounterID"] = 1748,
		},
		[328338] = {
			["npcID"] = 167493,
		},
		[317077] = {
			["npcID"] = 152571,
		},
		[152940] = {
			["encounterName"] = "Roltall",
			["encounterID"] = 1652,
			["npcID"] = 75786,
		},
		[335505] = {
			["npcID"] = 179108,
		},
		[69576] = {
			["npcID"] = 36805,
		},
		[17274] = {
			["npcID"] = 27107,
		},
		[330387] = {
			["npcID"] = 159178,
		},
		[59366] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["encounterID"] = 1971,
			["npcID"] = 28731,
		},
		[342675] = {
			["npcID"] = 170882,
		},
		[181094] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 91103,
			["encounterID"] = 1778,
		},
		[330388] = {
			["npcID"] = 159178,
		},
		[331412] = {
			["npcID"] = 177130,
		},
		[330391] = {
			["npcID"] = 159178,
		},
		[353935] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[357112] = {
			["npcID"] = 177831,
		},
		[128954] = {
			["npcID"] = 58377,
		},
		[356088] = {
			["npcID"] = 177390,
		},
		[337556] = {
			["npcID"] = 162853,
		},
		[334485] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[331414] = {
			["npcID"] = 157754,
		},
		[126139] = {
			["npcID"] = 66426,
		},
		[48873] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 1977,
			["npcID"] = 27483,
		},
		[159085] = {
			["npcID"] = 81422,
		},
		[177564] = {
			["npcID"] = 177586,
		},
		[157931] = {
			["npcID"] = 76263,
		},
		[321178] = {
			["npcID"] = 162047,
		},
		[52341] = {
			["npcID"] = 27972,
		},
		[165740] = {
			["npcID"] = 82010,
		},
		[116027] = {
			["npcID"] = 59464,
		},
		[156717] = {
			["npcID"] = 76104,
		},
		[334488] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[357529] = {
			["npcID"] = 178653,
		},
		[357011] = {
			["npcID"] = 177514,
		},
		[131642] = {
			["npcID"] = 65883,
		},
		[165741] = {
			["npcID"] = 82005,
		},
		[331418] = {
			["npcID"] = 170160,
		},
		[69958] = {
			["npcID"] = 37016,
		},
		[122301] = {
			["npcID"] = 62930,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["npcID"] = 28546,
			["encounterID"] = 1984,
		},
		[212834] = {
			["encounterName"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["npcID"] = 99192,
		},
		[365299] = {
			["npcID"] = 184539,
		},
		[366227] = {
			["npcID"] = 183496,
		},
		[152814] = {
			["npcID"] = 75713,
		},
		[165742] = {
			["npcID"] = 82005,
		},
		[322486] = {
			["npcID"] = 164929,
		},
		[358038] = {
			["npcID"] = 179802,
		},
		[355888] = {
			["npcID"] = 177807,
		},
		[155505] = {
			["npcID"] = 76101,
		},
		[365298] = {
			["npcID"] = 184539,
		},
		[12167] = {
			["encounterName"] = "Tribunal of Ages",
			["encounterID"] = 1995,
			["npcID"] = 27984,
		},
		[334493] = {
			["npcID"] = 164862,
		},
		[190313] = {
			["encounterName"] = "Archimonde",
			["npcID"] = 91331,
			["encounterID"] = 1799,
		},
		[99705] = {
			["npcID"] = 53619,
		},
		[345755] = {
			["npcID"] = 165663,
		},
		[195944] = {
			["npcID"] = 91796,
		},
		[106434] = {
			["encounterName"] = "Master Snowdrift",
			["encounterID"] = 1304,
			["npcID"] = 56541,
		},
		[350875] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[329376] = {
			["npcID"] = 165060,
		},
		[330400] = {
			["npcID"] = 161553,
		},
		[358181] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[20794] = {
			["npcID"] = 38926,
		},
		[330401] = {
			["npcID"] = 161553,
		},
		[338591] = {
			["npcID"] = 173066,
		},
		[200551] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[139841] = {
			["encounterName"] = "Megaera",
			["npcID"] = 70235,
			["encounterID"] = 1578,
		},
		[321188] = {
			["npcID"] = 150238,
		},
		[157043] = {
			["npcID"] = 77130,
		},
		[323236] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[327130] = {
			["npcID"] = 165872,
		},
		[69068] = {
			["npcID"] = 36620,
		},
		[330403] = {
			["npcID"] = 168153,
		},
		[327332] = {
			["npcID"] = 163459,
		},
		[225635] = {
			["npcID"] = 122851,
		},
		[323393] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[193941] = {
			["npcID"] = 98406,
		},
		[333477] = {
			["npcID"] = 163621,
		},
		[340642] = {
			["npcID"] = 172078,
		},
		[353952] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
		},
		[195947] = {
			["npcID"] = 100055,
		},
		[360176] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 181856,
		},
		[320168] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164555,
			["encounterID"] = 2394,
		},
		[358047] = {
			["npcID"] = 179931,
		},
		[318121] = {
			["npcID"] = 159112,
		},
		[355057] = {
			["npcID"] = 178139,
		},
		[56937] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26930,
		},
		[329383] = {
			["npcID"] = 167331,
		},
		[320170] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 162692,
		},
		[356001] = {
			["npcID"] = 177808,
		},
		[365215] = {
			["npcID"] = 178563,
		},
		[333479] = {
			["npcID"] = 163620,
		},
		[328362] = {
			["npcID"] = 167834,
		},
		[115650] = {
			["npcID"] = 59520,
		},
		[320171] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[116162] = {
			["npcID"] = 59520,
		},
		[330409] = {
			["npcID"] = 160375,
		},
		[335528] = {
			["npcID"] = 159755,
		},
		[250208] = {
			["npcID"] = 170122,
		},
		[180080] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 90485,
			["encounterID"] = 1778,
		},
		[172567] = {
			["npcID"] = 81368,
		},
		[356004] = {
			["npcID"] = 177514,
		},
		[326021] = {
			["npcID"] = 172312,
		},
		[130495] = {
			["npcID"] = 66288,
		},
		[357029] = {
			["npcID"] = 180335,
		},
		[27641] = {
			["npcID"] = 18325,
		},
		[340649] = {
			["npcID"] = 180096,
		},
		[256864] = {
			["npcID"] = 129553,
		},
		[355055] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[326319] = {
			["npcID"] = 164921,
		},
		[328365] = {
			["npcID"] = 167493,
		},
		[150394] = {
			["npcID"] = 74721,
		},
		[131968] = {
			["npcID"] = 67093,
		},
		[83915] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 44715,
		},
		[336556] = {
			["npcID"] = 165060,
		},
		[358055] = {
			["npcID"] = 179254,
		},
		[152954] = {
			["encounterName"] = "Vigilant Kaathar",
			["encounterID"] = 1686,
			["npcID"] = 75839,
		},
		[165751] = {
			["npcID"] = 82187,
		},
		[56938] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26928,
		},
		[362151] = {
			["npcID"] = 182745,
		},
		[115652] = {
			["npcID"] = 59518,
		},
		[368294] = {
			["npcID"] = 185752,
		},
		[326389] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[345772] = {
			["npcID"] = 175579,
		},
		[338606] = {
			["npcID"] = 167731,
		},
		[368295] = {
			["npcID"] = 183953,
		},
		[111813] = {
			["npcID"] = 58822,
		},
		[333488] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[330417] = {
			["npcID"] = 169696,
		},
		[20793] = {
			["npcID"] = 25470,
		},
		[340655] = {
			["npcID"] = 172077,
		},
		[362154] = {
			["npcID"] = 182879,
		},
		[157051] = {
			["npcID"] = 77889,
		},
		[356812] = {
			["npcID"] = 180286,
		},
		[275569] = {
			["npcID"] = 168442,
		},
		[329395] = {
			["npcID"] = 159104,
		},
		[350894] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[106439] = {
			["npcID"] = 56395,
		},
		[305913] = {
			["npcID"] = 153242,
		},
		[329396] = {
			["npcID"] = 159979,
		},
		[320517] = {
			["npcID"] = 163894,
		},
		[362157] = {
			["npcID"] = 182879,
		},
		[153981] = {
			["npcID"] = 76157,
		},
		[337587] = {
			["npcID"] = 162880,
		},
		[47981] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["encounterID"] = 2012,
			["npcID"] = 26794,
		},
		[128962] = {
			["npcID"] = 65598,
		},
		[356010] = {
			["npcID"] = 178041,
		},
		[319465] = {
			["npcID"] = 164184,
		},
		[157053] = {
			["npcID"] = 77890,
		},
		[153974] = {
			["npcID"] = 76157,
		},
		[151964] = {
			["npcID"] = 80242,
		},
		[353969] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[330423] = {
			["npcID"] = 168572,
		},
		[357286] = {
			["npcID"] = 180392,
		},
		[137729] = {
			["encounterName"] = "Megaera",
			["npcID"] = 70212,
			["encounterID"] = 1578,
		},
		[131972] = {
			["npcID"] = 67093,
		},
		[22907] = {
			["encounterName"] = "Swamplord Musel'ek",
			["encounterID"] = 1947,
			["npcID"] = 17826,
		},
		[320243] = {
			["npcID"] = 166425,
		},
		[336567] = {
			["npcID"] = 165976,
		},
		[304831] = {
			["npcID"] = 156142,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["encounterID"] = 1047,
			["npcID"] = 44715,
		},
		[355050] = {
			["npcID"] = 176956,
		},
		[165122] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80816,
			["encounterID"] = 1748,
		},
		[358067] = {
			["npcID"] = 178877,
		},
		[322236] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 165430,
		},
		[360115] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[357139] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176532,
			["encounterID"] = 2435,
		},
		[329404] = {
			["npcID"] = 185123,
		},
		[346807] = {
			["npcID"] = 177873,
		},
		[356021] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177891,
			["encounterID"] = 2435,
		},
		[355049] = {
			["npcID"] = 176535,
		},
		[31865] = {
			["npcID"] = 17399,
		},
		[169341] = {
			["npcID"] = 81283,
		},
		[325360] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["encounterID"] = 2362,
			["npcID"] = 162102,
		},
		[48096] = {
			["encounterName"] = "Keristrasza",
			["encounterID"] = 2011,
			["npcID"] = 26723,
		},
		[340304] = {
			["npcID"] = 173720,
		},
		[241004] = {
			["npcID"] = 120158,
		},
		[128964] = {
			["npcID"] = 65598,
		},
		[202661] = {
			["npcID"] = 102583,
		},
		[321216] = {
			["npcID"] = 172601,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[356023] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 179963,
			["encounterID"] = 2435,
		},
		[221577] = {
			["npcID"] = 111170,
		},
		[48878] = {
			["encounterName"] = "King Dred",
			["encounterID"] = 1977,
			["npcID"] = 27483,
		},
		[346811] = {
			["npcID"] = 177735,
		},
		[325312] = {
			["npcID"] = 182255,
		},
		[330562] = {
			["npcID"] = 164506,
		},
		[11969] = {
			["npcID"] = 38896,
		},
		[350907] = {
			["npcID"] = 177791,
		},
		[351931] = {
			["npcID"] = 176598,
		},
		[118963] = {
			["npcID"] = 61240,
		},
		[330553] = {
			["npcID"] = 178979,
		},
		[346813] = {
			["npcID"] = 152905,
		},
		[44271] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24555,
		},
		[209270] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[50414] = {
			["npcID"] = 26638,
		},
		[152964] = {
			["npcID"] = 75652,
		},
		[190331] = {
			["npcID"] = 167664,
		},
		[149893] = {
			["encounterName"] = "Domina",
			["encounterID"] = 1668,
			["npcID"] = 74476,
		},
		[150405] = {
			["npcID"] = 74980,
		},
		[330435] = {
			["npcID"] = 165830,
		},
		[315079] = {
			["npcID"] = 173503,
		},
		[324293] = {
			["npcID"] = 165919,
		},
		[366267] = {
			["npcID"] = 185008,
		},
		[351835] = {
			["npcID"] = 179894,
		},
		[271841] = {
			["npcID"] = 157002,
		},
		[128708] = {
			["npcID"] = 59521,
		},
		[315802] = {
			["npcID"] = 150959,
		},
		[359102] = {
			["npcID"] = 176533,
		},
		[356031] = {
			["npcID"] = 177816,
		},
		[320200] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[329414] = {
			["npcID"] = 169885,
		},
		[330438] = {
			["npcID"] = 165976,
		},
		[315082] = {
			["npcID"] = 158259,
		},
		[352752] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 178736,
		},
		[329415] = {
			["npcID"] = 161345,
		},
		[334534] = {
			["npcID"] = 171805,
		},
		[204666] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[149913] = {
			["encounterName"] = "Thruk",
			["encounterID"] = 1675,
			["npcID"] = 74505,
		},
		[349891] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177268,
		},
		[358082] = {
			["npcID"] = 179608,
		},
		[351939] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[340678] = {
			["npcID"] = 161455,
		},
		[366272] = {
			["npcID"] = 185032,
		},
		[350916] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 179269,
			["encounterID"] = 2440,
		},
		[204667] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[34163] = {
			["npcID"] = 17871,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["encounterID"] = 1817,
			["npcID"] = 95887,
		},
		[202108] = {
			["npcID"] = 90998,
		},
		[184720] = {
			["npcID"] = 93295,
		},
		[328395] = {
			["npcID"] = 171656,
		},
		[336560] = {
			["npcID"] = 180627,
		},
		[334538] = {
			["npcID"] = 171422,
		},
		[347814] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 176396,
			["encounterID"] = 2424,
		},
		[34931] = {
			["npcID"] = 18331,
		},
		[358085] = {
			["npcID"] = 179859,
		},
		[350919] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176563,
			["encounterID"] = 2440,
		},
		[329706] = {
			["npcID"] = 176259,
		},
		[207228] = {
			["encounterName"] = "Chronomatic Anomaly",
			["encounterID"] = 1865,
			["npcID"] = 104676,
		},
		[39211] = {
			["npcID"] = 22461,
		},
		[100559] = {
			["npcID"] = 54015,
		},
		[241524] = {
			["encounterName"] = "Demonic Inquisition",
			["encounterID"] = 2048,
			["npcID"] = 121138,
		},
		[340683] = {
			["npcID"] = 162708,
		},
		[267997] = {
			["npcID"] = 135816,
		},
		[338636] = {
			["npcID"] = 167731,
		},
		[12160] = {
			["npcID"] = 18319,
		},
		[341709] = {
			["encounterName"] = "Mistcaller",
			["npcID"] = 164501,
			["encounterID"] = 2392,
		},
		[366278] = {
			["npcID"] = 185032,
		},
		[334542] = {
			["npcID"] = 171422,
		},
		[167815] = {
			["npcID"] = 83390,
		},
		[328400] = {
			["npcID"] = 164737,
		},
		[362184] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[338638] = {
			["npcID"] = 173134,
		},
		[333294] = {
			["npcID"] = 169893,
		},
		[322780] = {
			["npcID"] = 156560,
		},
		[329425] = {
			["npcID"] = 157824,
		},
		[338639] = {
			["npcID"] = 173134,
		},
		[338637] = {
			["npcID"] = 173134,
		},
		[365257] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182071,
			["encounterID"] = 2539,
		},
		[337616] = {
			["npcID"] = 158989,
		},
		[315076] = {
			["npcID"] = 170821,
		},
		[50672] = {
			["npcID"] = 25334,
		},
		[200205] = {
			["npcID"] = 101462,
		},
		[69080] = {
			["npcID"] = 36564,
		},
		[329422] = {
			["npcID"] = 157571,
		},
		[106447] = {
			["npcID"] = 56395,
		},
		[118988] = {
			["encounterName"] = "Gekkan",
			["npcID"] = 61243,
			["encounterID"] = 2129,
		},
		[351969] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[322262] = {
			["npcID"] = 166754,
		},
		[223100] = {
			["npcID"] = 112021,
		},
		[332500] = {
			["npcID"] = 162593,
		},
		[256882] = {
			["npcID"] = 129552,
		},
		[119347] = {
			["npcID"] = 61434,
		},
		[340707] = {
			["npcID"] = 172084,
		},
		[213375] = {
			["npcID"] = 95083,
		},
		[321240] = {
			["encounterName"] = "Tunk",
			["npcID"] = 157300,
			["encounterID"] = 2325,
		},
		[115418] = {
			["npcID"] = 59801,
		},
		[325119] = {
			["npcID"] = 157212,
		},
		[364240] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[358096] = {
			["npcID"] = 177425,
		},
		[232827] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 116841,
		},
		[331479] = {
			["npcID"] = 167923,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["npcID"] = 26929,
		},
		[329432] = {
			["npcID"] = 177861,
		},
		[342741] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 172858,
			["encounterID"] = 2417,
		},
		[194437] = {
			["npcID"] = 95174,
		},
		[361169] = {
			["npcID"] = 182466,
		},
		[366288] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 184911,
			["encounterID"] = 2391,
		},
		[330457] = {
			["npcID"] = 165830,
		},
		[200580] = {
			["npcID"] = 95779,
		},
		[75992] = {
			["npcID"] = 40634,
		},
		[34984] = {
			["npcID"] = 17731,
		},
		[330458] = {
			["npcID"] = 151331,
		},
		[328411] = {
			["npcID"] = 165270,
		},
		[336601] = {
			["npcID"] = 165976,
		},
		[364241] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181546,
			["encounterID"] = 2544,
		},
		[320230] = {
			["encounterName"] = "Dealer Xy'exa",
			["npcID"] = 164450,
			["encounterID"] = 2400,
		},
		[112084] = {
			["encounterName"] = "Lorewalker Stonestep",
			["encounterID"] = 1417,
			["npcID"] = 58826,
		},
		[90325] = {
			["npcID"] = 109154,
		},
		[333531] = {
			["npcID"] = 172210,
		},
		[34934] = {
			["npcID"] = 18394,
		},
		[329437] = {
			["npcID"] = 182791,
		},
		[328413] = {
			["npcID"] = 158473,
		},
		[321247] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[332509] = {
			["npcID"] = 164555,
		},
		[204677] = {
			["npcID"] = 114399,
		},
		[328414] = {
			["npcID"] = 165270,
		},
		[338653] = {
			["npcID"] = 173044,
		},
		[318181] = {
			["npcID"] = 159610,
		},
		[357082] = {
			["npcID"] = 178733,
		},
		[324323] = {
			["npcID"] = 165919,
		},
		[321249] = {
			["npcID"] = 162051,
		},
		[334558] = {
			["npcID"] = 171448,
		},
		[365272] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181551,
			["encounterID"] = 2544,
		},
		[357081] = {
			["npcID"] = 176956,
		},
		[222082] = {
			["npcID"] = 111398,
		},
		[322274] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 164815,
		},
		[327393] = {
			["npcID"] = 163618,
		},
		[149908] = {
			["encounterName"] = "Thruk",
			["encounterID"] = 1675,
			["npcID"] = 74505,
		},
		[354011] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[53617] = {
			["encounterName"] = "Anub'arak",
			["npcID"] = 29217,
			["encounterID"] = 1973,
		},
		[221059] = {
			["npcID"] = 111004,
		},
		[357083] = {
			["npcID"] = 180864,
		},
		[366297] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 184911,
			["encounterID"] = 2391,
		},
		[342751] = {
			["npcID"] = 171596,
		},
		[194442] = {
			["npcID"] = 99188,
		},
		[357084] = {
			["npcID"] = 180379,
		},
		[42740] = {
			["npcID"] = 23960,
		},
		[323786] = {
			["npcID"] = 163524,
		},
		[357871] = {
			["npcID"] = 177903,
		},
		[357085] = {
			["npcID"] = 176959,
		},
		[115153] = {
			["npcID"] = 56289,
		},
		[36238] = {
			["npcID"] = 22461,
		},
		[360145] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[357086] = {
			["npcID"] = 176959,
		},
		[366287] = {
			["npcID"] = 185032,
		},
		[279264] = {
			["npcID"] = 176434,
		},
		[184730] = {
			["npcID"] = 93303,
		},
		[357087] = {
			["npcID"] = 178731,
		},
		[44276] = {
			["npcID"] = 24556,
		},
		[338914] = {
			["npcID"] = 177628,
		},
		[15232] = {
			["npcID"] = 18094,
		},
		[194956] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[93655] = {
			["encounterName"] = "Mekgineer Thermaplugg",
			["npcID"] = 7800,
			["encounterID"] = 382,
		},
		[322281] = {
			["npcID"] = 156559,
		},
		[151447] = {
			["npcID"] = 84978,
		},
		[38197] = {
			["encounterName"] = "Talon King Ikiss",
			["encounterID"] = 1902,
			["npcID"] = 18473,
		},
		[325701] = {
			["npcID"] = 165529,
		},
		[334567] = {
			["npcID"] = 171448,
		},
		[350922] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 179269,
			["encounterID"] = 2440,
		},
		[320208] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[116178] = {
			["npcID"] = 59522,
		},
		[194966] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[360162] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[357091] = {
			["npcID"] = 178731,
		},
		[362210] = {
			["npcID"] = 181963,
		},
		[206219] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[356035] = {
			["npcID"] = 178757,
		},
		[340712] = {
			["npcID"] = 162697,
		},
		[358116] = {
			["npcID"] = 180627,
		},
		[257407] = {
			["encounterName"] = "Rezan",
			["encounterID"] = 2086,
			["npcID"] = 122963,
		},
		[323309] = {
			["npcID"] = 177859,
		},
		[320771] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[117960] = {
			["encounterName"] = "Elegon",
			["npcID"] = 60410,
			["encounterID"] = 1500,
		},
		[320196] = {
			["npcID"] = 175605,
		},
		[178067] = {
			["npcID"] = 88094,
		},
		[328429] = {
			["npcID"] = 168022,
		},
		[179091] = {
			["npcID"] = 88783,
		},
		[115509] = {
			["npcID"] = 59751,
		},
		[351976] = {
			["npcID"] = 177330,
		},
		[332525] = {
			["npcID"] = 171396,
		},
		[366309] = {
			["npcID"] = 180917,
		},
		[355048] = {
			["npcID"] = 178139,
		},
		[356072] = {
			["npcID"] = 177394,
		},
		[332526] = {
			["npcID"] = 171396,
		},
		[199567] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 101028,
			["encounterID"] = 1835,
		},
		[330479] = {
			["npcID"] = 153382,
		},
		[131024] = {
			["npcID"] = 66288,
		},
		[151963] = {
			["npcID"] = 75463,
		},
		[340662] = {
			["npcID"] = 172078,
		},
		[206222] = {
			["encounterName"] = "Gul'dan",
			["npcID"] = 104154,
			["encounterID"] = 1866,
		},
		[357123] = {
			["npcID"] = 180779,
		},
		[240006] = {
			["npcID"] = 182863,
		},
		[195473] = {
			["npcID"] = 91786,
		},
		[59389] = {
			["encounterName"] = "Prince Keleseth",
			["encounterID"] = 2026,
			["npcID"] = 23953,
		},
		[168398] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 84215,
			["encounterID"] = 1754,
		},
		[184724] = {
			["npcID"] = 93298,
		},
		[337648] = {
			["npcID"] = 158924,
		},
		[322232] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 164267,
		},
		[320463] = {
			["npcID"] = 177140,
		},
		[149886] = {
			["encounterName"] = "Domina",
			["encounterID"] = 1668,
			["npcID"] = 74476,
		},
		[349934] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176555,
			["encounterID"] = 2441,
		},
		[346863] = {
			["encounterName"] = "The Tarragrue",
			["npcID"] = 158406,
		},
		[277481] = {
			["npcID"] = 154011,
		},
		[151965] = {
			["npcID"] = 75191,
		},
		[172952] = {
			["npcID"] = 83026,
		},
		[277249] = {
			["npcID"] = 158177,
		},
		[327413] = {
			["npcID"] = 168318,
		},
		[357102] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[157049] = {
			["npcID"] = 77889,
		},
		[155037] = {
			["npcID"] = 76018,
		},
		[319224] = {
			["npcID"] = 157725,
		},
		[338604] = {
			["npcID"] = 173066,
		},
		[341747] = {
			["npcID"] = 174158,
		},
		[346866] = {
			["npcID"] = 174175,
		},
		[331510] = {
			["npcID"] = 170838,
		},
		[240009] = {
			["npcID"] = 158314,
		},
		[327648] = {
			["npcID"] = 168418,
		},
		[326392] = {
			["npcID"] = 157212,
		},
		[356081] = {
			["npcID"] = 177390,
		},
		[365295] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 181954,
			["encounterID"] = 2546,
		},
		[316072] = {
			["npcID"] = 169476,
		},
		[234891] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 118289,
		},
		[273844] = {
			["npcID"] = 167664,
		},
		[334498] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[154527] = {
			["npcID"] = 77812,
		},
		[200084] = {
			["npcID"] = 98366,
		},
		[120789] = {
			["encounterName"] = "Commander Vo'jak",
			["npcID"] = 61634,
			["encounterID"] = 1502,
		},
		[320293] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164461,
			["encounterID"] = 2391,
		},
		[111600] = {
			["encounterName"] = "Raigonn",
			["npcID"] = 56930,
			["encounterID"] = 1419,
		},
		[204646] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[50677] = {
			["npcID"] = 25334,
		},
		[199061] = {
			["npcID"] = 102104,
		},
		[130515] = {
			["npcID"] = 66052,
		},
		[166766] = {
			["npcID"] = 176198,
		},
		[358573] = {
			["npcID"] = 179423,
		},
		[221584] = {
			["npcID"] = 111170,
		},
		[323229] = {
			["npcID"] = 170853,
		},
		[355062] = {
			["npcID"] = 178623,
		},
		[339706] = {
			["encounterName"] = "Mordretha",
			["npcID"] = 173549,
			["encounterID"] = 2404,
		},
		[164597] = {
			["npcID"] = 75198,
		},
		[131091] = {
			["npcID"] = 65881,
		},
		[355063] = {
			["npcID"] = 178623,
		},
		[350865] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177154,
			["encounterID"] = 2435,
		},
		[340731] = {
			["npcID"] = 164547,
		},
		[356090] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[326399] = {
			["npcID"] = 155251,
		},
		[368373] = {
			["npcID"] = 183516,
		},
		[215443] = {
			["encounterName"] = "Elerethe Renferal",
			["npcID"] = 106087,
			["encounterID"] = 1876,
		},
		[366326] = {
			["npcID"] = 183497,
		},
		[319127] = {
			["npcID"] = 170183,
		},
		[320772] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[278175] = {
			["npcID"] = 155226,
		},
		[346766] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[330496] = {
			["npcID"] = 155250,
		},
		[360185] = {
			["npcID"] = 183580,
		},
		[361209] = {
			["npcID"] = 182466,
		},
		[355979] = {
			["npcID"] = 177804,
		},
		[198496] = {
			["encounterName"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["npcID"] = 91004,
		},
		[351996] = {
			["npcID"] = 178384,
		},
		[357115] = {
			["npcID"] = 177915,
		},
		[332430] = {
			["npcID"] = 177132,
		},
		[255371] = {
			["encounterName"] = "Rezan",
			["encounterID"] = 2086,
			["npcID"] = 122963,
		},
		[198553] = {
			["npcID"] = 97825,
		},
		[361211] = {
			["npcID"] = 182161,
		},
		[183197] = {
			["npcID"] = 155221,
		},
		[355069] = {
			["npcID"] = 178625,
		},
		[347903] = {
			["npcID"] = 176395,
		},
		[320141] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[115161] = {
			["npcID"] = 56447,
		},
		[355070] = {
			["npcID"] = 178625,
		},
		[368379] = {
			["npcID"] = 183516,
		},
		[28993] = {
			["npcID"] = 1655,
		},
		[150438] = {
			["npcID"] = 74722,
		},
		[310026] = {
			["npcID"] = 165677,
		},
		[338560] = {
			["npcID"] = 173078,
		},
		[116886] = {
			["npcID"] = 55622,
		},
		[328322] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164363,
			["encounterID"] = 2380,
		},
		[355072] = {
			["npcID"] = 178628,
		},
		[156722] = {
			["npcID"] = 77700,
		},
		[332550] = {
			["npcID"] = 169875,
		},
		[349954] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176555,
			["encounterID"] = 2441,
		},
		[223057] = {
			["npcID"] = 111980,
		},
		[196508] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99657,
		},
		[221521] = {
			["npcID"] = 111166,
		},
		[157794] = {
			["npcID"] = 76263,
		},
		[326409] = {
			["npcID"] = 164557,
		},
		[149416] = {
			["npcID"] = 183257,
		},
		[203163] = {
			["npcID"] = 102788,
		},
		[325386] = {
			["npcID"] = 166941,
		},
		[15585] = {
			["npcID"] = 17730,
		},
		[356099] = {
			["npcID"] = 177395,
		},
		[221591] = {
			["npcID"] = 111164,
		},
		[33641] = {
			["npcID"] = 18966,
		},
		[353769] = {
			["npcID"] = 179136,
		},
		[356100] = {
			["npcID"] = 177395,
		},
		[357124] = {
			["npcID"] = 180780,
		},
		[320008] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164556,
			["encounterID"] = 2394,
		},
		[366189] = {
			["npcID"] = 183500,
		},
		[323190] = {
			["npcID"] = 163121,
		},
		[357125] = {
			["npcID"] = 176879,
		},
		[69056] = {
			["npcID"] = 36478,
		},
		[193951] = {
			["npcID"] = 97677,
		},
		[366185] = {
			["npcID"] = 183499,
		},
		[16033] = {
			["npcID"] = 27108,
		},
		[331377] = {
			["npcID"] = 157683,
		},
		[337520] = {
			["npcID"] = 159412,
		},
		[318312] = {
			["npcID"] = 164845,
		},
		[250258] = {
			["encounterName"] = "Vol'kaal",
			["encounterID"] = 2085,
			["npcID"] = 122965,
		},
		[341771] = {
			["npcID"] = 170882,
		},
		[153002] = {
			["encounterName"] = "Vigilant Kaathar",
			["encounterID"] = 1686,
			["npcID"] = 75839,
		},
		[186274] = {
			["npcID"] = 90284,
		},
		[357128] = {
			["npcID"] = 176879,
		},
		[191823] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[362084] = {
			["npcID"] = 181324,
		},
		[126937] = {
			["npcID"] = 64917,
		},
		[73958] = {
			["npcID"] = 39464,
		},
		[102573] = {
			["encounterName"] = "Gu Cloudstrike",
			["encounterID"] = 1303,
			["npcID"] = 56754,
		},
		[49528] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["encounterID"] = 1975,
			["npcID"] = 26632,
		},
		[355118] = {
			["npcID"] = 178133,
		},
		[235927] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118715,
		},
		[356804] = {
			["npcID"] = 178578,
		},
		[328295] = {
			["npcID"] = 168718,
		},
		[323347] = {
			["npcID"] = 165137,
		},
		[297020] = {
			["npcID"] = 153011,
		},
		[325395] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 166813,
		},
		[173479] = {
			["npcID"] = 86690,
		},
		[113629] = {
			["npcID"] = 59193,
		},
		[130265] = {
			["npcID"] = 66291,
		},
		[191395] = {
			["npcID"] = 94509,
		},
		[273185] = {
			["npcID"] = 127879,
		},
		[165907] = {
			["npcID"] = 80167,
		},
		[270929] = {
			["npcID"] = 152843,
		},
		[193443] = {
			["encounterName"] = "Glazer",
			["encounterID"] = 1817,
			["npcID"] = 95887,
		},
		[173480] = {
			["npcID"] = 83389,
		},
		[358999] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[51832] = {
			["npcID"] = 27971,
		},
		[323166] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[59359] = {
			["encounterName"] = "Anub'arak",
			["encounterID"] = 1973,
			["npcID"] = 29217,
		},
		[352016] = {
			["npcID"] = 176578,
		},
		[361230] = {
			["npcID"] = 182561,
		},
		[53167] = {
			["npcID"] = 27963,
		},
		[153006] = {
			["encounterName"] = "Vigilant Kaathar",
			["encounterID"] = 1686,
			["npcID"] = 75839,
		},
		[202658] = {
			["npcID"] = 102584,
		},
		[130266] = {
			["npcID"] = 66200,
		},
		[236442] = {
			["encounterName"] = "Sisters of the Moon",
			["encounterID"] = 2050,
			["npcID"] = 118374,
		},
		[183111] = {
			["npcID"] = 165793,
		},
		[196516] = {
			["npcID"] = 100248,
		},
		[201123] = {
			["npcID"] = 99360,
		},
		[222110] = {
			["npcID"] = 111405,
		},
		[355090] = {
			["npcID"] = 178628,
		},
		[202659] = {
			["encounterName"] = "Blood-Princess Thal'ena",
			["npcID"] = 102431,
			["encounterID"] = 1855,
		},
		[361233] = {
			["npcID"] = 182158,
		},
		[272167] = {
			["npcID"] = 136404,
		},
		[32690] = {
			["npcID"] = 18328,
		},
		[320069] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164451,
			["encounterID"] = 2391,
		},
		[340759] = {
			["npcID"] = 161455,
		},
		[354068] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[320081] = {
			["npcID"] = 178944,
		},
		[360006] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[328475] = {
			["npcID"] = 164737,
		},
		[199589] = {
			["npcID"] = 99033,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["encounterID"] = 1983,
			["npcID"] = 29573,
		},
		[346459] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[336666] = {
			["npcID"] = 158891,
		},
		[361027] = {
			["npcID"] = 180088,
		},
		[161199] = {
			["encounterName"] = "Kyrak",
			["encounterID"] = 1758,
			["npcID"] = 76021,
		},
		[360213] = {
			["npcID"] = 181839,
		},
		[357953] = {
			["npcID"] = 180013,
		},
		[341786] = {
			["npcID"] = 167528,
		},
		[356929] = {
			["npcID"] = 179837,
		},
		[361023] = {
			["npcID"] = 181005,
		},
		[357143] = {
			["npcID"] = 178646,
		},
		[356928] = {
			["npcID"] = 178786,
		},
		[31407] = {
			["npcID"] = 17729,
		},
		[106612] = {
			["encounterName"] = "Wise Mari",
			["encounterID"] = 1418,
			["npcID"] = 56448,
		},
		[357144] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 180323,
			["encounterID"] = 2431,
		},
		[130524] = {
			["npcID"] = 66052,
		},
		[166978] = {
			["npcID"] = 79537,
		},
		[319266] = {
			["npcID"] = 167033,
		},
		[58972] = {
			["npcID"] = 29822,
		},
		[358971] = {
			["npcID"] = 179890,
		},
		[318243] = {
			["npcID"] = 170803,
		},
		[227233] = {
			["encounterName"] = "Helya",
			["encounterID"] = 1824,
			["npcID"] = 96759,
		},
		[357146] = {
			["npcID"] = 177938,
		},
		[341790] = {
			["npcID"] = 167528,
		},
		[221864] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["npcID"] = 105299,
			["encounterID"] = 1872,
		},
		[356123] = {
			["npcID"] = 177395,
		},
		[324387] = {
			["npcID"] = 165197,
		},
		[357943] = {
			["npcID"] = 180013,
		},
		[334625] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[324608] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[50810] = {
			["encounterName"] = "Krystallus",
			["encounterID"] = 1994,
			["npcID"] = 27977,
		},
		[333602] = {
			["npcID"] = 163126,
		},
		[200105] = {
			["npcID"] = 98368,
		},
		[155572] = {
			["npcID"] = 77033,
		},
		[221604] = {
			["npcID"] = 111164,
		},
		[296748] = {
			["npcID"] = 152875,
		},
		[330532] = {
			["npcID"] = 164510,
		},
		[327461] = {
			["npcID"] = 153165,
		},
		[303678] = {
			["npcID"] = 155824,
		},
		[236449] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118462,
		},
		[194356] = {
			["npcID"] = 95266,
		},
		[176124] = {
			["npcID"] = 173114,
		},
		[270453] = {
			["npcID"] = 151091,
		},
		[354080] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[130436] = {
			["npcID"] = 66446,
		},
		[71592] = {
			["npcID"] = 37125,
		},
		[149943] = {
			["encounterName"] = "Executioner Gore",
			["encounterID"] = 1670,
			["npcID"] = 74518,
		},
		[115010] = {
			["encounterName"] = "Taran Zhu",
			["encounterID"] = 1306,
			["npcID"] = 59804,
		},
		[319956] = {
			["npcID"] = 167055,
		},
		[114658] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[69869] = {
			["npcID"] = 37026,
		},
		[349987] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176555,
			["encounterID"] = 2441,
		},
		[326441] = {
			["npcID"] = 164557,
		},
		[319275] = {
			["npcID"] = 165323,
		},
		[154039] = {
			["npcID"] = 76181,
		},
		[325418] = {
			["npcID"] = 167113,
		},
		[15586] = {
			["npcID"] = 26735,
		},
		[155575] = {
			["npcID"] = 77034,
		},
		[320300] = {
			["encounterName"] = "An Affront of Challengers",
			["npcID"] = 164461,
			["encounterID"] = 2391,
		},
		[368163] = {
			["npcID"] = 178229,
		},
		[359203] = {
			["npcID"] = 184059,
		},
		[327467] = {
			["npcID"] = 153165,
		},
		[182705] = {
			["npcID"] = 92041,
		},
		[362275] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[38110] = {
			["npcID"] = 19428,
		},
		[360228] = {
			["npcID"] = 184061,
		},
		[126354] = {
			["npcID"] = 66506,
		},
		[304946] = {
			["npcID"] = 168680,
		},
		[318255] = {
			["npcID"] = 163575,
		},
		[219049] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109041,
			["encounterID"] = 1886,
		},
		[338921] = {
			["npcID"] = 163186,
		},
		[333612] = {
			["npcID"] = 168374,
		},
		[353603] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[333787] = {
			["npcID"] = 168934,
		},
		[40062] = {
			["npcID"] = 17414,
		},
		[340160] = {
			["npcID"] = 173655,
		},
		[69963] = {
			["npcID"] = 37021,
		},
		[353741] = {
			["npcID"] = 178958,
		},
		[353706] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176565,
			["encounterID"] = 2440,
		},
		[330782] = {
			["npcID"] = 177729,
		},
		[106526] = {
			["encounterName"] = "Wise Mari",
			["encounterID"] = 1418,
			["npcID"] = 56448,
		},
		[366102] = {
			["npcID"] = 181011,
		},
		[328496] = {
			["npcID"] = 172115,
		},
		[172982] = {
			["npcID"] = 83026,
		},
		[72840] = {
			["encounterName"] = "Professor Putricide",
			["encounterID"] = 1102,
			["npcID"] = 36678,
		},
		[345623] = {
			["npcID"] = 165824,
		},
		[316212] = {
			["npcID"] = 170953,
		},
		[332313] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[326450] = {
			["npcID"] = 164562,
		},
		[356139] = {
			["npcID"] = 178043,
		},
		[205231] = {
			["npcID"] = 103673,
		},
		[316954] = {
			["npcID"] = 165831,
		},
		[319650] = {
			["encounterName"] = "Kryxis the Voracious",
			["encounterID"] = 2360,
			["npcID"] = 162100,
		},
		[364330] = {
			["npcID"] = 184737,
		},
		[348974] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[12739] = {
			["npcID"] = 17371,
		},
		[324909] = {
			["npcID"] = 164926,
		},
		[319286] = {
			["npcID"] = 164084,
		},
		[188587] = {
			["npcID"] = 102253,
		},
		[357639] = {
			["npcID"] = 177445,
		},
		[322358] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[320804] = {
			["encounterName"] = "The Manastorms",
			["npcID"] = 164561,
			["encounterID"] = 2394,
		},
		[308026] = {
			["npcID"] = 157824,
		},
		[364040] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 184140,
			["encounterID"] = 2553,
		},
		[228633] = {
			["encounterName"] = "Helya",
			["npcID"] = 114809,
			["encounterID"] = 2008,
		},
		[120100] = {
			["encounterName"] = "Trial of the King",
			["npcID"] = 61444,
			["encounterID"] = 1442,
		},
		[53044] = {
			["npcID"] = 28547,
		},
		[193460] = {
			["encounterName"] = "Ymiron, the Fallen King",
			["encounterID"] = 1822,
			["npcID"] = 96756,
		},
		[161781] = {
			["npcID"] = 79529,
		},
		[331574] = {
			["npcID"] = 170217,
		},
		[316218] = {
			["npcID"] = 169476,
		},
		[350002] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 176533,
			["encounterID"] = 2435,
		},
		[192287] = {
			["npcID"] = 95153,
		},
		[38618] = {
			["encounterName"] = "Frozen Commander",
			["encounterID"] = 519,
			["npcID"] = 26796,
		},
		[201139] = {
			["npcID"] = 98810,
		},
		[362288] = {
			["npcID"] = 181968,
		},
		[329224] = {
			["npcID"] = 168022,
		},
		[327481] = {
			["encounterName"] = "Kin-Tara",
			["encounterID"] = 2357,
			["npcID"] = 162059,
		},
		[358585] = {
			["npcID"] = 176669,
		},
		[199604] = {
			["npcID"] = 92990,
		},
		[355123] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[319292] = {
			["npcID"] = 156676,
		},
		[346484] = {
			["npcID"] = 179380,
		},
		[100842] = {
			["npcID"] = 53094,
		},
		[148929] = {
			["npcID"] = 73472,
		},
		[339768] = {
			["npcID"] = 158891,
		},
		[357172] = {
			["npcID"] = 178575,
		},
		[137344] = {
			["encounterName"] = "Council of Elders",
			["npcID"] = 69132,
			["encounterID"] = 1570,
		},
		[7896] = {
			["npcID"] = 8920,
		},
		[155584] = {
			["npcID"] = 77037,
		},
		[340793] = {
			["npcID"] = 166140,
		},
		[366387] = {
			["npcID"] = 180978,
		},
		[139822] = {
			["encounterName"] = "Megaera",
			["npcID"] = 70212,
			["encounterID"] = 1578,
		},
		[167119] = {
			["npcID"] = 173114,
		},
		[231854] = {
			["encounterName"] = "Harjatan",
			["encounterID"] = 2036,
			["npcID"] = 116407,
		},
		[124389] = {
			["npcID"] = 63279,
		},
		[359222] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 176561,
			["encounterID"] = 2440,
		},
		[200630] = {
			["npcID"] = 95769,
		},
		[332605] = {
			["npcID"] = 170572,
		},
		[362294] = {
			["npcID"] = 181968,
		},
		[334653] = {
			["npcID"] = 165076,
		},
		[339407] = {
			["npcID"] = 173280,
		},
		[360949] = {
			["npcID"] = 184268,
		},
		[191417] = {
			["npcID"] = 94509,
		},
		[326464] = {
			["npcID"] = 179405,
		},
		[155586] = {
			["npcID"] = 77035,
		},
		[324417] = {
			["npcID"] = 162133,
		},
		[334329] = {
			["npcID"] = 171376,
		},
		[322370] = {
			["npcID"] = 157054,
		},
		[344956] = {
			["npcID"] = 162829,
		},
		[332608] = {
			["npcID"] = 170572,
		},
		[320861] = {
			["npcID"] = 169753,
		},
		[319994] = {
			["npcID"] = 164829,
		},
		[155587] = {
			["npcID"] = 77035,
		},
		[339444] = {
			["npcID"] = 173276,
		},
		[340467] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 173756,
			["encounterID"] = 2434,
		},
		[198073] = {
			["encounterName"] = "Smashspite the Hateful",
			["npcID"] = 98949,
			["encounterID"] = 1834,
		},
		[358894] = {
			["npcID"] = 179892,
		},
		[332610] = {
			["npcID"] = 156333,
		},
		[321349] = {
			["npcID"] = 164857,
		},
		[6685] = {
			["npcID"] = 41182,
		},
		[155588] = {
			["npcID"] = 77035,
		},
		[180670] = {
			["npcID"] = 90215,
		},
		[358205] = {
			["npcID"] = 178862,
		},
		[367079] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[71318] = {
			["npcID"] = 37229,
		},
		[332612] = {
			["npcID"] = 170572,
		},
		[15043] = {
			["npcID"] = 8913,
		},
		[330565] = {
			["npcID"] = 164506,
		},
		[79858] = {
			["npcID"] = 82005,
		},
		[357183] = {
			["npcID"] = 177938,
		},
		[352520] = {
			["npcID"] = 178601,
		},
		[325591] = {
			["npcID"] = 157212,
		},
		[235267] = {
			["encounterName"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["npcID"] = 118289,
		},
		[338406] = {
			["npcID"] = 173051,
		},
		[48895] = {
			["npcID"] = 26639,
		},
		[346947] = {
			["encounterName"] = "Mailroom Mayhem",
			["npcID"] = 175646,
			["encounterID"] = 2424,
		},
		[368446] = {
			["npcID"] = 180978,
		},
		[324425] = {
			["npcID"] = 167253,
		},
		[197564] = {
			["npcID"] = 95311,
		},
		[359233] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 181047,
			["encounterID"] = 2529,
		},
		[356162] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 179386,
			["encounterID"] = 2419,
		},
		[324657] = {
			["npcID"] = 166551,
		},
		[197365] = {
			["encounterName"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["encounterID"] = 1814,
		},
		[334664] = {
			["npcID"] = 171341,
		},
		[236163] = {
			["npcID"] = 115640,
		},
		[324427] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[333641] = {
			["npcID"] = 169905,
		},
		[359235] = {
			["npcID"] = 180906,
		},
		[210537] = {
			["npcID"] = 159104,
		},
		[357188] = {
			["encounterName"] = "So'azmi",
			["npcID"] = 175806,
			["encounterID"] = 2437,
		},
		[354117] = {
			["npcID"] = 179234,
		},
		[359236] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[200637] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[368085] = {
			["npcID"] = 183722,
		},
		[362308] = {
			["npcID"] = 185755,
		},
		[347273] = {
			["npcID"] = 169041,
		},
		[342963] = {
			["npcID"] = 158259,
		},
		[43649] = {
			["encounterName"] = "Skarvold & Dalronn",
			["npcID"] = 24201,
			["encounterID"] = 2024,
		},
		[194611] = {
			["npcID"] = 98926,
		},
		[367428] = {
			["npcID"] = 184962,
		},
		[334899] = {
			["npcID"] = 174802,
		},
		[320336] = {
			["npcID"] = 163126,
		},
		[358215] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[330574] = {
			["npcID"] = 177418,
		},
		[343883] = {
			["npcID"] = 167664,
		},
		[357192] = {
			["npcID"] = 178576,
		},
		[366406] = {
			["npcID"] = 184908,
		},
		[192504] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[335694] = {
			["npcID"] = 173051,
		},
		[137427] = {
			["npcID"] = 170031,
		},
		[337742] = {
			["npcID"] = 159151,
		},
		[316830] = {
			["npcID"] = 158631,
		},
		[338959] = {
			["npcID"] = 168697,
		},
		[316244] = {
			["npcID"] = 162056,
		},
		[192005] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 97260,
			["encounterID"] = 1813,
		},
		[346957] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175667,
			["encounterID"] = 2426,
		},
		[176070] = {
			["npcID"] = 173114,
		},
		[345079] = {
			["npcID"] = 170031,
		},
		[366409] = {
			["npcID"] = 184908,
		},
		[197627] = {
			["npcID"] = 93802,
		},
		[76790] = {
			["npcID"] = 39616,
		},
		[357196] = {
			["npcID"] = 180336,
		},
		[330611] = {
			["npcID"] = 155795,
		},
		[362565] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[59575] = {
			["encounterName"] = "Skarvold & Dalronn",
			["encounterID"] = 2024,
			["npcID"] = 24201,
		},
		[357197] = {
			["npcID"] = 180336,
		},
		[362316] = {
			["npcID"] = 183228,
		},
		[184065] = {
			["npcID"] = 94604,
		},
		[298844] = {
			["npcID"] = 153885,
		},
		[111854] = {
			["npcID"] = 58633,
		},
		[321367] = {
			["npcID"] = 156562,
		},
		[235252] = {
			["npcID"] = 115642,
		},
		[200642] = {
			["npcID"] = 95771,
		},
		[348566] = {
			["encounterName"] = "Myza's Oasis",
			["npcID"] = 180159,
			["encounterID"] = 2440,
		},
		[338846] = {
			["npcID"] = 167525,
		},
		[351057] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[196296] = {
			["npcID"] = 91792,
		},
		[228003] = {
			["encounterName"] = "Odyn",
			["npcID"] = 114361,
			["encounterID"] = 1958,
		},
		[351680] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[314823] = {
			["npcID"] = 161814,
		},
		[351678] = {
			["npcID"] = 178271,
		},
		[30851] = {
			["npcID"] = 17395,
		},
		[173514] = {
			["npcID"] = 83389,
		},
		[111599] = {
			["npcID"] = 58757,
		},
		[170751] = {
			["npcID"] = 156158,
		},
		[358226] = {
			["npcID"] = 176949,
		},
		[79607] = {
			["npcID"] = 3127,
		},
		[313757] = {
			["npcID"] = 160974,
		},
		[225289] = {
			["npcID"] = 113082,
		},
		[358227] = {
			["npcID"] = 176959,
		},
		[330586] = {
			["npcID"] = 169927,
		},
		[327515] = {
			["npcID"] = 168361,
		},
		[193611] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[329563] = {
			["npcID"] = 152508,
		},
		[332165] = {
			["npcID"] = 170414,
		},
		[31747] = {
			["npcID"] = 16844,
		},
		[361300] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[325469] = {
			["npcID"] = 166928,
		},
		[342873] = {
			["npcID"] = 177589,
		},
		[347992] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[173307] = {
			["npcID"] = 83390,
		},
		[337755] = {
			["npcID"] = 163213,
		},
		[68988] = {
			["encounterName"] = "Bronjahm",
			["encounterID"] = 2006,
			["npcID"] = 36497,
		},
		[322736] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["npcID"] = 164558,
			["encounterID"] = 2395,
		},
		[324447] = {
			["npcID"] = 178977,
		},
		[113136] = {
			["npcID"] = 59080,
		},
		[342875] = {
			["npcID"] = 167827,
		},
		[44547] = {
			["npcID"] = 24697,
		},
		[49544] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["encounterID"] = 1975,
			["npcID"] = 26632,
		},
		[358232] = {
			["npcID"] = 180104,
		},
		[351066] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[210131] = {
			["npcID"] = 153266,
		},
		[361304] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 183421,
			["encounterID"] = 2544,
		},
		[339122] = {
			["npcID"] = 167525,
		},
		[346972] = {
			["npcID"] = 169605,
		},
		[230504] = {
			["encounterName"] = "Spellblade Aluriel",
			["npcID"] = 115905,
			["encounterID"] = 1871,
		},
		[57984] = {
			["npcID"] = 95061,
		},
		[49922] = {
			["npcID"] = 25496,
		},
		[191946] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["encounterID"] = 1810,
		},
		[338858] = {
			["npcID"] = 167526,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["npcID"] = 40765,
		},
		[201672] = {
			["encounterName"] = "Shivermaw",
			["npcID"] = 101951,
			["encounterID"] = 1845,
		},
		[200918] = {
			["npcID"] = 97069,
		},
		[181873] = {
			["encounterName"] = "Shadow-Lord Iskar",
			["npcID"] = 90316,
			["encounterID"] = 1788,
		},
		[332642] = {
			["npcID"] = 170577,
		},
		[191435] = {
			["npcID"] = 94509,
		},
		[59430] = {
			["encounterName"] = "Anub'arak",
			["encounterID"] = 1973,
			["npcID"] = 29120,
		},
		[319334] = {
			["npcID"] = 153583,
		},
		[320358] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[354142] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[51586] = {
			["npcID"] = 28410,
		},
		[157652] = {
			["npcID"] = 77694,
		},
		[235969] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 118729,
		},
		[362333] = {
			["npcID"] = 183242,
		},
		[330597] = {
			["npcID"] = 177418,
		},
		[228012] = {
			["encounterName"] = "Odyn",
			["npcID"] = 114361,
			["encounterID"] = 1958,
		},
		[329808] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[358239] = {
			["npcID"] = 178851,
		},
		[351073] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[227903] = {
			["encounterName"] = "Helya",
			["npcID"] = 114537,
			["encounterID"] = 2008,
		},
		[149975] = {
			["encounterName"] = "Magmolatus",
			["encounterID"] = 1655,
			["npcID"] = 74571,
		},
		[61184] = {
			["npcID"] = 58070,
		},
		[196127] = {
			["npcID"] = 91790,
		},
		[233062] = {
			["encounterName"] = "Goroth",
			["encounterID"] = 2032,
			["npcID"] = 115844,
		},
		[106740] = {
			["npcID"] = 110715,
		},
		[365905] = {
			["npcID"] = 184860,
		},
		[351075] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177154,
			["encounterID"] = 2435,
		},
		[356764] = {
			["npcID"] = 177878,
		},
		[357218] = {
			["npcID"] = 176957,
		},
		[354147] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 175732,
			["encounterID"] = 2435,
		},
		[167420] = {
			["npcID"] = 79823,
		},
		[15620] = {
			["npcID"] = 18965,
		},
		[357219] = {
			["npcID"] = 176957,
		},
		[330678] = {
			["npcID"] = 168862,
		},
		[106807] = {
			["encounterName"] = "Ook-Ook",
			["npcID"] = 56637,
			["encounterID"] = 1412,
		},
		[11082] = {
			["encounterName"] = "Electrocutioner 6000",
			["npcID"] = 6235,
			["encounterID"] = 380,
		},
		[332650] = {
			["npcID"] = 172601,
		},
		[256959] = {
			["npcID"] = 127757,
		},
		[352660] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[323437] = {
			["encounterName"] = "Lord Chamberlain",
			["npcID"] = 164218,
			["encounterID"] = 2381,
		},
		[344936] = {
			["npcID"] = 175704,
		},
		[279564] = {
			["npcID"] = 167154,
		},
		[51587] = {
			["npcID"] = 28410,
		},
		[348008] = {
			["npcID"] = 176394,
		},
		[342168] = {
			["npcID"] = 156331,
		},
		[233556] = {
			["encounterName"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["npcID"] = 117279,
		},
		[16100] = {
			["npcID"] = 28580,
		},
		[79868] = {
			["npcID"] = 82002,
		},
		[52524] = {
			["encounterName"] = "Hadronox",
			["npcID"] = 28729,
			["encounterID"] = 1972,
		},
		[194610] = {
			["npcID"] = 97365,
		},
		[52611] = {
			["encounterName"] = "Skarvold & Dalronn",
			["encounterID"] = 2024,
			["npcID"] = 24201,
		},
		[360295] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 181549,
			["encounterID"] = 2544,
		},
		[182739] = {
			["npcID"] = 101900,
		},
		[359733] = {
			["npcID"] = 178099,
		},
		[199172] = {
			["npcID"] = 99728,
		},
		[343916] = {
			["npcID"] = 169102,
		},
		[32358] = {
			["encounterName"] = "Pandemonius",
			["encounterID"] = 1900,
			["npcID"] = 18341,
		},
		[194099] = {
			["npcID"] = 97185,
		},
		[239781] = {
			["npcID"] = 120194,
		},
		[49668] = {
			["encounterName"] = "Novos the Summoner",
			["encounterID"] = 1976,
			["npcID"] = 26627,
		},
		[344941] = {
			["npcID"] = 162845,
		},
		[359458] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176973,
		},
		[197745] = {
			["npcID"] = 96884,
		},
		[208929] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["npcID"] = 105383,
			["encounterID"] = 1873,
		},
		[332657] = {
			["npcID"] = 164587,
		},
		[113141] = {
			["encounterName"] = "Darkmaster Gandling",
			["npcID"] = 59080,
			["encounterID"] = 1430,
		},
		[368712] = {
			["npcID"] = 184058,
		},
		[214989] = {
			["npcID"] = 100364,
		},
		[360775] = {
			["npcID"] = 185511,
		},
		[335019] = {
			["npcID"] = 156434,
		},
		[191955] = {
			["npcID"] = 95196,
		},
		[360300] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[361324] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[222156] = {
			["npcID"] = 111554,
		},
		[199176] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[364396] = {
			["npcID"] = 184272,
		},
		[198752] = {
			["npcID"] = 97043,
		},
		[321399] = {
			["npcID"] = 170962,
		},
		[194140] = {
			["npcID"] = 98653,
		},
		[200658] = {
			["npcID"] = 95771,
		},
		[320376] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[227514] = {
			["encounterName"] = "Guarm",
			["npcID"] = 114323,
			["encounterID"] = 1962,
		},
		[330614] = {
			["npcID"] = 163086,
		},
		[52740] = {
			["npcID"] = 28579,
		},
		[72960] = {
			["npcID"] = 37663,
		},
		[57091] = {
			["encounterName"] = "Keristrasza",
			["encounterID"] = 2011,
			["npcID"] = 26723,
		},
		[213583] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[69633] = {
			["npcID"] = 36666,
		},
		[360569] = {
			["npcID"] = 180930,
		},
		[30853] = {
			["npcID"] = 17395,
		},
		[351091] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177787,
			["encounterID"] = 2435,
		},
		[195789] = {
			["npcID"] = 97544,
		},
		[33417] = {
			["npcID"] = 18949,
		},
		[325498] = {
			["npcID"] = 157212,
		},
		[359282] = {
			["npcID"] = 185415,
		},
		[323951] = {
			["npcID"] = 177380,
		},
		[361447] = {
			["npcID"] = 182425,
		},
		[42131] = {
			["npcID"] = 42707,
		},
		[322614] = {
			["encounterName"] = "Tred'ova",
			["npcID"] = 164517,
			["encounterID"] = 2393,
		},
		[359743] = {
			["npcID"] = 182357,
		},
		[365831] = {
			["npcID"] = 182357,
		},
		[358260] = {
			["npcID"] = 177330,
		},
		[322429] = {
			["npcID"] = 162057,
		},
		[9734] = {
			["npcID"] = 82009,
		},
		[44479] = {
			["npcID"] = 24684,
		},
		[350071] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 177117,
			["encounterID"] = 2432,
		},
		[347000] = {
			["npcID"] = 172639,
		},
		[348024] = {
			["npcID"] = 176520,
		},
		[336763] = {
			["npcID"] = 169780,
		},
		[172675] = {
			["npcID"] = 167301,
		},
		[32197] = {
			["npcID"] = 17371,
		},
		[79872] = {
			["npcID"] = 177586,
		},
		[357239] = {
			["npcID"] = 180407,
		},
		[359768] = {
			["npcID"] = 181344,
		},
		[187052] = {
			["encounterName"] = "Hellfire Assault",
			["npcID"] = 93881,
			["encounterID"] = 1778,
		},
		[204951] = {
			["npcID"] = 102336,
		},
		[188907] = {
			["npcID"] = 92789,
		},
		[296839] = {
			["npcID"] = 152898,
		},
		[322433] = {
			["npcID"] = 162057,
		},
		[327552] = {
			["npcID"] = 168573,
		},
		[192985] = {
			["encounterName"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["encounterID"] = 1814,
		},
		[354653] = {
			["npcID"] = 179560,
		},
		[15503] = {
			["encounterName"] = "Priestess Delrissa",
			["encounterID"] = 1895,
			["npcID"] = 24559,
		},
		[199250] = {
			["npcID"] = 98919,
		},
		[188114] = {
			["encounterName"] = "Rokmora",
			["encounterID"] = 1790,
			["npcID"] = 91003,
		},
		[207830] = {
			["encounterName"] = "Xavius",
			["npcID"] = 103695,
			["encounterID"] = 1864,
		},
		[236542] = {
			["encounterName"] = "The Desolate Host",
			["encounterID"] = 2054,
			["npcID"] = 119072,
		},
		[328773] = {
			["npcID"] = 159916,
		},
		[324483] = {
			["npcID"] = 178977,
		},
		[272272] = {
			["npcID"] = 161692,
		},
		[364900] = {
			["npcID"] = 183737,
		},
		[351562] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177893,
		},
		[173112] = {
			["npcID"] = 83697,
		},
		[340070] = {
			["npcID"] = 166503,
		},
		[362851] = {
			["npcID"] = 181539,
		},
		[199193] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[357245] = {
			["npcID"] = 176953,
		},
		[168929] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 83612,
			["encounterID"] = 1754,
		},
		[214486] = {
			["encounterName"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["encounterID"] = 1863,
		},
		[241345] = {
			["npcID"] = 120449,
		},
		[241305] = {
			["npcID"] = 117154,
		},
		[358270] = {
			["npcID"] = 177330,
		},
		[138729] = {
			["encounterName"] = "Dark Animus",
			["npcID"] = 69427,
			["encounterID"] = 1576,
		},
		[233426] = {
			["encounterName"] = "Demonic Inquisition",
			["encounterID"] = 2048,
			["npcID"] = 116689,
		},
		[366938] = {
			["npcID"] = 185032,
		},
		[358271] = {
			["npcID"] = 179914,
		},
		[204966] = {
			["npcID"] = 102282,
		},
		[56837] = {
			["npcID"] = 26727,
		},
		[195036] = {
			["npcID"] = 97200,
		},
		[183263] = {
			["npcID"] = 155219,
		},
		[330631] = {
			["npcID"] = 180013,
		},
		[360320] = {
			["npcID"] = 181942,
		},
		[365715] = {
			["npcID"] = 184530,
		},
		[329608] = {
			["npcID"] = 155828,
		},
		[368548] = {
			["npcID"] = 185145,
		},
		[365907] = {
			["npcID"] = 184880,
		},
		[195037] = {
			["npcID"] = 95861,
		},
		[329609] = {
			["npcID"] = 155828,
		},
		[100094] = {
			["npcID"] = 53793,
		},
		[11981] = {
			["npcID"] = 16950,
		},
		[180327] = {
			["npcID"] = 107548,
		},
		[193502] = {
			["npcID"] = 98177,
		},
		[351109] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 177787,
			["encounterID"] = 2435,
		},
		[362601] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182169,
			["encounterID"] = 2539,
		},
		[194534] = {
			["npcID"] = 94984,
		},
		[350086] = {
			["encounterName"] = "The Grand Menagerie",
			["npcID"] = 176705,
			["encounterID"] = 2441,
		},
		[317643] = {
			["npcID"] = 163255,
		},
		[368514] = {
			["npcID"] = 183764,
		},
		[332683] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 169835,
			["encounterID"] = 2417,
		},
		[230358] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115767,
		},
		[31942] = {
			["npcID"] = 17820,
		},
		[319375] = {
			["npcID"] = 162481,
		},
		[340874] = {
			["npcID"] = 162657,
		},
		[366847] = {
			["encounterName"] = "Prototype Pantheon",
			["npcID"] = 182144,
			["encounterID"] = 2544,
		},
		[100095] = {
			["npcID"] = 53793,
		},
		[358728] = {
			["npcID"] = 176940,
		},
		[44475] = {
			["npcID"] = 24683,
		},
		[18651] = {
			["npcID"] = 88391,
		},
		[361452] = {
			["npcID"] = 180722,
		},
		[361556] = {
			["npcID"] = 181685,
		},
		[365627] = {
			["npcID"] = 184954,
		},
		[150507] = {
			["npcID"] = 74716,
		},
		[184371] = {
			["npcID"] = 185125,
		},
		[338962] = {
			["npcID"] = 166499,
		},
		[365888] = {
			["npcID"] = 184879,
		},
		[193505] = {
			["npcID"] = 91000,
		},
		[363400] = {
			["npcID"] = 178158,
		},
		[45577] = {
			["npcID"] = 25445,
		},
		[330697] = {
			["npcID"] = 170690,
		},
		[341902] = {
			["npcID"] = 174197,
		},
		[367496] = {
			["npcID"] = 185537,
		},
		[319380] = {
			["npcID"] = 159233,
		},
		[357259] = {
			["npcID"] = 180392,
		},
		[325523] = {
			["npcID"] = 165515,
		},
		[355212] = {
			["npcID"] = 178630,
		},
		[364426] = {
			["npcID"] = 180088,
		},
		[357260] = {
			["npcID"] = 180431,
		},
		[329619] = {
			["npcID"] = 185123,
		},
		[187876] = {
			["npcID"] = 94802,
		},
		[368522] = {
			["npcID"] = 183764,
		},
		[363780] = {
			["npcID"] = 184043,
		},
		[230362] = {
			["encounterName"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["npcID"] = 115896,
		},
		[355214] = {
			["npcID"] = 178630,
		},
		[200674] = {
			["npcID"] = 97014,
		},
		[367554] = {
			["npcID"] = 183416,
		},
		[365707] = {
			["npcID"] = 183429,
		},
		[131071] = {
			["npcID"] = 65840,
		},
		[364429] = {
			["npcID"] = 180085,
		},
		[118297] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 61029,
		},
		[111631] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[330646] = {
			["npcID"] = 169823,
		},
		[359337] = {
			["npcID"] = 181967,
		},
		[368662] = {
			["npcID"] = 180015,
		},
		[295942] = {
			["npcID"] = 151329,
		},
		[367502] = {
			["npcID"] = 181059,
		},
		[270246] = {
			["npcID"] = 157584,
		},
		[334002] = {
			["npcID"] = 172590,
		},
		[362771] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 183463,
			["encounterID"] = 2546,
		},
		[359313] = {
			["npcID"] = 181729,
		},
		[45578] = {
			["npcID"] = 25244,
		},
		[357512] = {
			["npcID"] = 180495,
		},
		[319733] = {
			["encounterName"] = "Echelon",
			["npcID"] = 164185,
			["encounterID"] = 2380,
		},
		[351124] = {
			["encounterName"] = "So'leah",
			["npcID"] = 177269,
			["encounterID"] = 2442,
		},
		[368528] = {
			["npcID"] = 183764,
		},
		[365682] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 184140,
			["encounterID"] = 2553,
		},
		[346006] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["npcID"] = 175616,
			["encounterID"] = 2425,
		},
		[367505] = {
			["npcID"] = 181059,
		},
		[368529] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["npcID"] = 180906,
			["encounterID"] = 2529,
		},
		[195046] = {
			["npcID"] = 95861,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["encounterID"] = 1947,
			["npcID"] = 17826,
		},
		[196656] = {
			["npcID"] = 97090,
		},
		[360340] = {
			["npcID"] = 182425,
		},
		[326619] = {
			["npcID"] = 166873,
		},
		[354198] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[334747] = {
			["npcID"] = 166302,
		},
		[327581] = {
			["npcID"] = 168396,
		},
		[367798] = {
			["npcID"] = 181249,
		},
		[366689] = {
			["npcID"] = 185268,
		},
		[334748] = {
			["npcID"] = 166302,
		},
		[221153] = {
			["npcID"] = 111072,
		},
		[344986] = {
			["npcID"] = 158314,
		},
		[325535] = {
			["npcID"] = 164562,
		},
		[151566] = {
			["npcID"] = 74349,
		},
		[367522] = {
			["npcID"] = 181059,
		},
		[199143] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[69131] = {
			["npcID"] = 36516,
		},
		[366797] = {
			["npcID"] = 183749,
		},
	},
}
